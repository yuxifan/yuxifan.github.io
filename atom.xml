<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuxi Fan</title>
  <subtitle>Yuxi&#39;s development blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.yuxifan.com/"/>
  <updated>2016-11-15T11:37:52.000Z</updated>
  <id>https://www.yuxifan.com/</id>
  
  <author>
    <name>Yuxi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Convert between simplified Chinese and traditional Chinese</title>
    <link href="https://www.yuxifan.com/2016/11/15/simplified-chinese-traditional-chinese-converter/"/>
    <id>https://www.yuxifan.com/2016/11/15/simplified-chinese-traditional-chinese-converter/</id>
    <published>2016-11-15T06:40:12.000Z</published>
    <updated>2016-11-15T11:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" media="all" href="/css/foundation.min.css">
<script src="/js/gb-big5.js"></script>
<script src="/js/foundation.min.js"></script>

<img src="/images/javascript/gb-big5.jpg"><br>

<div class="row">
  <div class="large-10 large-offset-1">
      <div class="row">
        <div class="medium-4 columns">
          <label>From:
            <select id="source_lang">
              <option value="zh_TW">Traditional Chinese</option>
              <option value="zh_CN">Simplified Chinese</option>
            </select>
          </label>
        </div>
        <div class="medium-4 columns">
          <label>To:
            <select id="tar_lang">
              <option value="zh_CN">Simplified Chinese</option>
              <option value="zh_TW">Traditional Chinese</option>
            </select>
          </label>
        </div>
        <div class="medium-4 columns">
          <button class="button" id="trans">Convert</button>
        </div>
          
        </div>
	  Enter text to convert：
      <textarea id="content" style="width: 600px; height:200px;"></textarea>
	  
      <br>
      Result：
      <textarea id="res_content" style="width: 600px; height:200px;"></textarea>
  </div>
	  <div style="display:none;">
        Source language encoding：
        <textarea id="source_encode"></textarea>
        Target language encoding：
        <textarea id="tar_encode"></textarea>
	  </div>
  </div>  
<script>
  Trans.init(); 
</script> 
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; media=&quot;all&quot; href=&quot;/css/foundation.min.css&quot;&gt;
&lt;script src=&quot;/js/gb-big5.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/js/foundation.min.js
    
    </summary>
    
      <category term="tool" scheme="https://www.yuxifan.com/categories/tool/"/>
    
    
      <category term="Chinese converter" scheme="https://www.yuxifan.com/tags/Chinese-converter/"/>
    
  </entry>
  
  <entry>
    <title>How to trigger a cron job based on file modifications</title>
    <link href="https://www.yuxifan.com/2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/"/>
    <id>https://www.yuxifan.com/2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/</id>
    <published>2016-11-14T06:51:12.000Z</published>
    <updated>2016-11-14T10:21:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Cron is an amazon tool that allowing Linux and Unix users to run commands or scripts at a given date and time. However, sometimes people want to trigger a job based on file modifications / creations. Here we can use incron to do this kinds of automation.</p>
<p><img src="/images/linux/incron.png" alt="incron"></p>
<h2 id="Incron-installation"><a href="#Incron-installation" class="headerlink" title="Incron installation"></a>Incron installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install incron</div></pre></td></tr></table></figure>
<h2 id="Using-Incron"><a href="#Using-Incron" class="headerlink" title="Using Incron"></a>Using Incron</h2><p>If /etc/incron.allow exists only users listed here may use incron. Otherwise if /etc/incron.deny exists only users NOT listed here may use incron. If none of these files exists everyone is allowed to use incron.</p>
<p>So firstly, we need to modify incron.allow to add users in:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nano incron.allow</div></pre></td></tr></table></figure>
<p>Add users e.g. root, yuxi into the list:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root</div><div class="line">yuxi</div></pre></td></tr></table></figure>
<p>Now we can list all incron jobs:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">incrontab <span class="_">-l</span></div></pre></td></tr></table></figure>
<p>Set up incron job for user ‘yuxi’</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">incrontab <span class="_">-e</span></div></pre></td></tr></table></figure>
<p>Add the following line to do an auto deployment to git repository:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/yuxi/website_src/ IN_MODIFY /home/yuxi/deploy_website.sh</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cron is an amazon tool that allowing Linux and Unix users to run commands or scripts at a given date and time. However, sometimes people 
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
      <category term="incron" scheme="https://www.yuxifan.com/tags/incron/"/>
    
  </entry>
  
  <entry>
    <title>Upload files to Dropbox in Linux command line</title>
    <link href="https://www.yuxifan.com/2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/"/>
    <id>https://www.yuxifan.com/2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/</id>
    <published>2016-11-09T09:51:12.000Z</published>
    <updated>2016-11-10T14:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>Here is the instruction on how to upload files to your Dropbox without installing Dropbox:</p>
<p><img src="/images/windows/dropbox.png" alt=""></p>
<p>1) First, install the amazing <a href="https://github.com/andreafabrizi/Dropbox-Uploader" rel="external nofollow" target="_blank">Dropbox Uploader script</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/andreafabrizi/Dropbox-Uploader.git</div></pre></td></tr></table></figure></p>
<p>2) Open the following URL in your Browser, and log in using your account: <a href="https://www.dropbox.com/developers/apps" rel="external nofollow" target="_blank">https://www.dropbox.com/developers/apps</a></p>
<p>3) Click on “Create App”, then select “Dropbox API app”</p>
<p>4) As shown below, configure your dropbox app, choosing the app permissions and access restrictions to your DropBox folder”<br><img src="/images/linux/dropbox-app-conf.jpg" alt=""></p>
<p>5) Enter the “App Name” you like, e.g. YuxiUploader</p>
<p>6) Click on the “Create App” button</p>
<p>7) When your new App is successfully created, click on the Generate button. under the ‘Generated access token’ section, then copy and paste the new access token here to your Linux command line.</p>
<p>8) Now you are ready to upload files to your dropbox, e.g. </p>
<p>Upload file:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./dropbox_uploader.sh upload YOUR_LOCAL_FILE_NAME /</div></pre></td></tr></table></figure></p>
<p>List files:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./dropbox_uploader.sh list</div><div class="line">./dropbox_uploader.sh list subfolder</div></pre></td></tr></table></figure></p>
<p>Download file:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./dropbox_uploader.sh download subfolder/1.pdf ./1.pdf</div></pre></td></tr></table></figure></p>
<p>Create a remote folder:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./dropbox_uploader.sh mkdir /subfolder</div></pre></td></tr></table></figure></p>
<p>Delete a remote folder<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./dropbox_uploader.sh delete /subfolder</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Here is the instruction on how to upload files to your Dropbox without installing Dropbox:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/windows/dropbox.png&quot; 
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="dropbox" scheme="https://www.yuxifan.com/tags/dropbox/"/>
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Ruby gem command</title>
    <link href="https://www.yuxifan.com/2016/11/06/ruby-gem-command/"/>
    <id>https://www.yuxifan.com/2016/11/06/ruby-gem-command/</id>
    <published>2016-11-06T02:10:12.000Z</published>
    <updated>2016-11-07T11:09:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/gems.jpg" alt="Ruby Gems"></p>
<h2 id="Install-Ruby-gems-from-Github-source-repository"><a href="#Install-Ruby-gems-from-Github-source-repository" class="headerlink" title="Install Ruby gems from Github source repository"></a>Install Ruby gems from Github source repository</h2><p>To to this, you have to install a gem called specific_install first.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install specific_install</div><div class="line">gem specific_install https://github.com/XXX/YYY.git [BRANCH NAME]</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/gems.jpg&quot; alt=&quot;Ruby Gems&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-Ruby-gems-from-Github-source-repository&quot;&gt;&lt;a href=&quot;#Install-Ruby-gem
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="gem" scheme="https://www.yuxifan.com/tags/gem/"/>
    
  </entry>
  
  <entry>
    <title>Two/multi phases XSLT processing</title>
    <link href="https://www.yuxifan.com/2016/11/04/multi-phases-xslt-processing/"/>
    <id>https://www.yuxifan.com/2016/11/04/multi-phases-xslt-processing/</id>
    <published>2016-11-04T09:51:12.000Z</published>
    <updated>2016-11-04T16:34:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/xslt/xsl.png" alt=""></p>
<p>Two/multi phases XSLT is very useful if you do have multiple steps to process your data. Here is an example.</p>
<p>I have a data dictionary to store authors:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">authors</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Wyatt, T.<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Smith, A.<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Davids, D.<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">authors</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Everytime when I’ve got a new XML document, I need to check a particular element (fullName) to update data dictionary file. The XML document looks like this:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">doc</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">creator</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">fullName</span>&gt;</span>Wyatt, A.<span class="tag">&lt;/<span class="name">fullName</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">creator</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="name">doc</span>&gt;</span></div></pre></td></tr></table></figure>
<p>While updating data dictionary, I need to make sure there is no duplicate getting into data dictionary. </p>
<p>Multi-phase processing can be used to do this job. The key point for multiphase processing is to store the previous processing result into a variable and use that variable as the initial XML to process in the later phase. The example XSLT is shown below:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span> <span class="attr">version</span>=<span class="string">"1.0"</span></span></div><div class="line">      <span class="attr">xmlns:xsl</span>=<span class="string">"http://www.w3.org/1999/XSL/Transform"</span></div><div class="line">      <span class="attr">exclude-result-prefixes</span>=<span class="string">"xsl"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">xsl:strip-space</span> <span class="attr">elements</span>=<span class="string">"*"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xsl:output</span> <span class="attr">method</span>=<span class="string">"xml"</span> <span class="attr">indent</span>=<span class="string">"yes"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">"authorsDoc"</span> <span class="attr">select</span>=<span class="string">"document('authors.xml', /)"</span>/&gt;</span></div><div class="line"> </div><div class="line">  <span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">"/"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Phase 1 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">"phase-1-output"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">authors</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- If the newly entered author does not exist in current data dictionary,</span></div><div class="line">               then add it to DD --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">xsl:for-each</span> <span class="attr">select</span>=<span class="string">"/doc/creator/fullName[.!='']"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">"currentName"</span> <span class="attr">select</span>=<span class="string">".[.=$authorsDoc//author]"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">xsl:if</span> <span class="attr">test</span>=<span class="string">"not($currentName)"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">author</span>&gt;</span><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">"."</span>/&gt;</span><span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">xsl:if</span>&gt;</span> </div><div class="line">        <span class="tag">&lt;/<span class="name">xsl:for-each</span>&gt;</span></div><div class="line">       </div><div class="line">        <span class="comment">&lt;!-- Copy all existing DD authors, only once --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">xsl:for-each</span> <span class="attr">select</span>=<span class="string">"$authorsDoc/authors/author[.!='']"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">xsl:sort</span> <span class="attr">select</span>=<span class="string">"."</span>/&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">author</span>&gt;</span><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">"."</span>/&gt;</span><span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">xsl:for-each</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">authors</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">xsl:variable</span>&gt;</span></div><div class="line"></div><div class="line">   <span class="comment">&lt;!-- Phase 2 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">authors</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">xsl:for-each</span> <span class="attr">select</span>=<span class="string">"$phase-1-output/authors/author[.!='' and (not(.=preceding-sibling::author))]"</span>&gt;</span>     <span class="comment">&lt;!-- Remove duplicates --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">xsl:sort</span> <span class="attr">select</span>=<span class="string">"."</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">"."</span>/&gt;</span><span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">xsl:for-each</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">authors</span>&gt;</span></div><div class="line">   </div><div class="line">  <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/xslt/xsl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Two/multi phases XSLT is very useful if you do have multiple steps to process your data. H
    
    </summary>
    
      <category term="xslt" scheme="https://www.yuxifan.com/categories/xslt/"/>
    
    
      <category term="xslt" scheme="https://www.yuxifan.com/tags/xslt/"/>
    
  </entry>
  
  <entry>
    <title>How to configure a proxy server in ubuntu - step by step</title>
    <link href="https://www.yuxifan.com/2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/"/>
    <id>https://www.yuxifan.com/2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/</id>
    <published>2016-10-31T09:51:12.000Z</published>
    <updated>2016-11-01T10:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/proxy-server.jpg" alt=""></p>
<p>Sometimes people wants to get access to their favorite websites while they are travelling. As some websites are blocked in some countries. Here is the step by step tutorial on how to configure a proxy server on ubuntu.</p>
<h2 id="Get-a-VPS-server"><a href="#Get-a-VPS-server" class="headerlink" title="Get a VPS server"></a>Get a VPS server</h2><p>First you need to get a VPS server up and running. I recommend <a href="http://bit.ly/2d1U9rx" rel="external nofollow" target="_blank">Vultr’s</a>  $5 plan. </p>
<h2 id="Install-server-software"><a href="#Install-server-software" class="headerlink" title="Install server software"></a>Install server software</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt install python-gevent python</div><div class="line">apt-get install python-pip</div><div class="line">pip install shadowsocks</div></pre></td></tr></table></figure>
<p>Then edit the configuration file:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nano /root/proxy/config.json</div></pre></td></tr></table></figure>
<p>The content  is:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;server&quot;:&quot;YOUR_VPS_IP&quot;,</div><div class="line">  &quot;server_port&quot;:8888,</div><div class="line">  &quot;local_port&quot;:1080,</div><div class="line">  &quot;password&quot;:&quot;YOUR_PROXY_SERVER_PASSWORD&quot;,</div><div class="line">  &quot;timeout&quot;:600,</div><div class="line">  &quot;method&quot;:&quot;aes-256-cfb&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Run server:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup ssserver -c /root/proxy/config.json</div></pre></td></tr></table></figure>
<h2 id="Configure-client-software"><a href="#Configure-client-software" class="headerlink" title="Configure client software"></a>Configure client software</h2><p>Download client from: <a href="https://shadowsocks.org/en/download/clients.html" rel="external nofollow" target="_blank">https://shadowsocks.org/en/download/clients.html</a></p>
<p>Configure proxy client as showing in the following screen dump:</p>
<p><img src="/images/linux/proxy-client.jpg" alt=""></p>
<p>Then right client the proxy client application icon in the task bar and tick ‘Enable system Proxy’</p>
<p><strong>Enjoy free browsing now!</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/proxy-server.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Sometimes people wants to get access to their favorite websites while they are t
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
      <category term="proxy server" scheme="https://www.yuxifan.com/tags/proxy-server/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu apt problem and solution</title>
    <link href="https://www.yuxifan.com/2016/10/24/ubuntu-apt-update-problems-and-solutions/"/>
    <id>https://www.yuxifan.com/2016/10/24/ubuntu-apt-update-problems-and-solutions/</id>
    <published>2016-10-24T08:51:12.000Z</published>
    <updated>2016-10-26T10:54:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/apt.jpg" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">While running sudo apt-get update, I was hitting this problem:</div><div class="line"></div><div class="line">W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://apt.puppetlabs.com precise Release: The following signatures couldn<span class="string">'t be verified because the public key is not available: NO_PUBKEY 7F438280EF8D349F</span></div><div class="line"></div><div class="line">W: Failed to fetch http://apt.puppetlabs.com/dists/precise/Release</div><div class="line"></div><div class="line">W: Some index files failed to download. They have been ignored, or old ones used instead.</div></pre></td></tr></table></figure>
<p>The solution is to run the following commands:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys </div><div class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7F438280EF8D349F</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/apt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
      <category term="apt" scheme="https://www.yuxifan.com/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>Ruby tutorials - json</title>
    <link href="https://www.yuxifan.com/2016/10/17/ruby-tutorials-json/"/>
    <id>https://www.yuxifan.com/2016/10/17/ruby-tutorials-json/</id>
    <published>2016-10-17T01:10:12.000Z</published>
    <updated>2016-10-18T10:14:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/json-logo.png" alt="JSON"></p>
<h2 id="Generate-json-data"><a href="#Generate-json-data" class="headerlink" title="Generate json data"></a>Generate json data</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'json'</span></div><div class="line"></div><div class="line">doc1 = JSON <span class="string">'test1'</span> =&gt; <span class="number">12</span></div><div class="line">doc2 = JSON[<span class="string">'test2'</span> =&gt; <span class="number">12</span>]</div><div class="line"></div><div class="line">puts doc1</div><div class="line">puts doc2</div><div class="line"></div><div class="line">doc3 = JSON.generate [<span class="number">22</span>, <span class="number">23</span>, &#123;<span class="string">"a"</span>=&gt;<span class="number">55</span>&#125;, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">nil</span>, <span class="number">1</span>..<span class="number">12</span>]</div><div class="line">puts doc3</div><div class="line"></div><div class="line">doc4 = JSON.pretty_generate [<span class="number">22</span>, <span class="number">23</span>, &#123;<span class="string">"a"</span>=&gt;<span class="number">55</span>&#125;, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">nil</span>, <span class="number">1</span>..<span class="number">12</span>]</div><div class="line">puts doc4</div></pre></td></tr></table></figure>
<h2 id="Parse-json"><a href="#Parse-json" class="headerlink" title="Parse json"></a>Parse json</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'json'</span></div><div class="line"></div><div class="line">json = JSON.parse <span class="string">'&#123;"foo":"bar", "ding":"dong"&#125;'</span></div><div class="line">puts json[<span class="string">"ding"</span>]</div><div class="line"></div><div class="line">str = <span class="string">'&#123;"desc":&#123;"key1":"value1","key2":"value2"&#125;,"content":&#123;"stats":&#123;"a":8,"b":12,"c":10&#125;&#125;&#125;'</span></div><div class="line">json2 = JSON.parse(str)</div><div class="line">puts json2[<span class="string">"desc"</span>][<span class="string">"key1"</span>]</div><div class="line">puts json2[<span class="string">"content"</span>][<span class="string">"stats"</span>][<span class="string">"b"</span>]</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/json-logo.png&quot; alt=&quot;JSON&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Generate-json-data&quot;&gt;&lt;a href=&quot;#Generate-json-data&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="json" scheme="https://www.yuxifan.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Ruby tutorials - nokogiri</title>
    <link href="https://www.yuxifan.com/2016/10/16/ruby-tutorials-nokogiri/"/>
    <id>https://www.yuxifan.com/2016/10/16/ruby-tutorials-nokogiri/</id>
    <published>2016-10-16T08:51:12.000Z</published>
    <updated>2016-10-17T13:04:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/nokogiri.png" alt="nokogiri"></p>
<h2 id="The-XML-file"><a href="#The-XML-file" class="headerlink" title="The XML file"></a>The XML file</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"cooking"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Everyday Italian<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Giada De Laurentiis<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>30.00<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"children"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"web"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>XQuery Kick Start<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>James McGovern<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Per Bothner<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Kurt Cagle<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>James Linn<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Vaidyanathan Nagarajan<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>49.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"web"</span> <span class="attr">cover</span>=<span class="string">"paperback"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Erik T. Ray<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Read-from-file"><a href="#Read-from-file" class="headerlink" title="Read from file"></a>Read from file</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'nokogiri'</span></div><div class="line"></div><div class="line">doc = Nokogiri::XML(File.open(<span class="string">'books.xml'</span>))</div><div class="line"></div><div class="line">books = doc.xpath(<span class="string">'/bookstore/book'</span>)</div><div class="line"></div><div class="line">books.each <span class="keyword">do</span> <span class="params">|book|</span></div><div class="line">  puts <span class="string">'------------------'</span></div><div class="line">  puts <span class="string">'Category: '</span> + book.attr(<span class="string">'category'</span>)</div><div class="line">  puts <span class="string">'Title:    '</span> + book.xpath(<span class="string">'title'</span>)[<span class="number">0</span>].content</div><div class="line">  puts <span class="string">'Author:   '</span> + book.xpath(<span class="string">'author'</span>)[<span class="number">0</span>].content</div><div class="line">  puts <span class="string">'Year:     '</span> + book.xpath(<span class="string">'year'</span>)[<span class="number">0</span>].content</div><div class="line">  puts <span class="string">'Price:    '</span> + book.xpath(<span class="string">'price'</span>)[<span class="number">0</span>].content</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Read-from-string"><a href="#Read-from-string" class="headerlink" title="Read from string"></a>Read from string</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'nokogiri'</span></div><div class="line"></div><div class="line">doc = Nokogiri::XML(<span class="string">"&lt;staff_list&gt;&lt;staff&gt;&lt;name&gt;Paul&lt;/name&gt;&lt;/staff&gt;&lt;staff&gt;&lt;name&gt;Andrew&lt;/name&gt;&lt;/staff&gt;&lt;/staff_list&gt;"</span>)</div><div class="line"></div><div class="line">puts doc.root</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/nokogiri.png&quot; alt=&quot;nokogiri&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;The-XML-file&quot;&gt;&lt;a href=&quot;#The-XML-file&quot; class=&quot;headerlink&quot; title=&quot;The XML 
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="nokogiri" scheme="https://www.yuxifan.com/tags/nokogiri/"/>
    
      <category term="tutorials" scheme="https://www.yuxifan.com/tags/tutorials/"/>
    
  </entry>
  
  <entry>
    <title>How can I get the final URL after redirects using Ruby?</title>
    <link href="https://www.yuxifan.com/2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/"/>
    <id>https://www.yuxifan.com/2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/</id>
    <published>2016-10-13T01:10:12.000Z</published>
    <updated>2016-10-13T15:20:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/http301.jpg" alt="URL redirects"></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'net/http'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'uri'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlUtils</span></span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">get_final_url</span><span class="params">(url)</span></span></div><div class="line"></div><div class="line">    exit = <span class="literal">false</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> exit==<span class="literal">false</span></div><div class="line">      r = Net::HTTP.get_response(URI.parse(url))</div><div class="line">      resp =  r.inspect.to_s</div><div class="line">      <span class="keyword">if</span> (resp.<span class="keyword">include</span>? <span class="string">'301'</span>) <span class="params">||</span> (resp.<span class="keyword">include</span>? <span class="string">'302'</span>)</div><div class="line">        url = r[<span class="string">'location'</span>]</div><div class="line">      <span class="keyword">else</span></div><div class="line">        exit = <span class="literal">true</span></div><div class="line">      <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    url</div><div class="line"></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">url = <span class="string">'http://bit.ly/2ecC7Cc'</span></div><div class="line">print url + <span class="string">' -&gt; '</span></div><div class="line">final_url = UrlUtils.get_final_url(url)</div><div class="line">puts final_url</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/http301.jpg&quot; alt=&quot;URL redirects&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="URL redirects" scheme="https://www.yuxifan.com/tags/URL-redirects/"/>
    
  </entry>
  
  <entry>
    <title>How to send a vultr account balance report in Ruby</title>
    <link href="https://www.yuxifan.com/2016/10/12/vultr-account-balance-report-in-ruby/"/>
    <id>https://www.yuxifan.com/2016/10/12/vultr-account-balance-report-in-ruby/</id>
    <published>2016-10-12T01:10:12.000Z</published>
    <updated>2016-10-12T09:27:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/vultr-credit.png" alt="Vultr balance"></p>
<p><a href="https://www.vultr.com/?ref=6856003" rel="external nofollow" target="_blank">Vultr</a> is a great VPS provider. I have a couple of VMs hosted in Vultr. However, according to Vultr T&amp;C: “Failure to make payment of Fees for Services when due may result in the suspension or termination of Services.” It would be nice to have an alert when the Vultr account balance reaches a threshold. Here is the implementation in Ruby.</p>
<p>I prefer to have a monthly report no matter if the threshold has been reached. However, if you want to have an email alert when the threshold is reached, the following code can be easily modified to do that.</p>
<h2 id="Install-gems"><a href="#Install-gems" class="headerlink" title="Install gems"></a>Install gems</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gem install faraday</div><div class="line">gem install json</div><div class="line">gem install gmail</div></pre></td></tr></table></figure>
<h2 id="The-Ruby-code"><a href="#The-Ruby-code" class="headerlink" title="The Ruby code"></a>The Ruby code</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'faraday'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'json'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'gmail'</span></div><div class="line"></div><div class="line">conn = Faraday.new(<span class="symbol">:url</span> =&gt; <span class="string">'https://api.vultr.com'</span>) <span class="keyword">do</span> <span class="params">|c|</span></div><div class="line">  c.use Faraday::Request::UrlEncoded</div><div class="line">  c.use Faraday::Adapter::NetHttp</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">response = conn.get <span class="keyword">do</span> <span class="params">|req|</span></div><div class="line">  req.url <span class="string">'/v1/account/info'</span></div><div class="line">  req.headers[<span class="string">'API-Key'</span>] = <span class="string">'your API key'</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">responseStr  = response.body</div><div class="line">responseJson = JSON.parse(responseStr)</div><div class="line">balance = responseJson[<span class="string">'balance'</span>]</div><div class="line">pending_charges = responseJson[<span class="string">'pending_charges'</span>]</div><div class="line"></div><div class="line">user = <span class="string">"your gmail"</span></div><div class="line">pass = <span class="string">"your gmail password"</span></div><div class="line">gmail = Gmail.connect(user, pass)</div><div class="line"></div><div class="line">email = gmail.compose <span class="keyword">do</span></div><div class="line">  to <span class="string">"the email address receiving reports"</span></div><div class="line">  subject <span class="string">"Your Vultr balance"</span></div><div class="line">  body <span class="string">"Balance: "</span> + balance + <span class="string">"\n"</span> + <span class="string">"Pending charges: "</span> + pending_charges</div><div class="line"><span class="keyword">end</span></div><div class="line">email.deliver!</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/vultr-credit.png&quot; alt=&quot;Vultr balance&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vultr.com/?ref=6856003&quot; rel=&quot;external nofollow&quot;
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="vultr" scheme="https://www.yuxifan.com/tags/vultr/"/>
    
  </entry>
  
  <entry>
    <title>Image Manipulation in Ruby</title>
    <link href="https://www.yuxifan.com/2016/10/11/image-manipulation-in-ruby/"/>
    <id>https://www.yuxifan.com/2016/10/11/image-manipulation-in-ruby/</id>
    <published>2016-10-11T01:10:12.000Z</published>
    <updated>2016-10-11T11:22:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/image.jpg" alt=""></p>
<h2 id="Resize-an-image"><a href="#Resize-an-image" class="headerlink" title="Resize an image"></a>Resize an image</h2><p>Install RMagick<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install imagemagick libmagickwand-dev</div><div class="line">gem install rmagick</div></pre></td></tr></table></figure></p>
<p>Code:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rmagick'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageProcessor</span></span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">resize</span><span class="params">(srcimg, tgtimg, width, height)</span></span></div><div class="line">    img = Magick::Image.read(srcimg).first</div><div class="line">    target = Magick::Image.new(width, height) <span class="keyword">do</span></div><div class="line">      <span class="comment">#self.background_color = 'white'</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    img.resize_to_fit!(width, height)</div><div class="line">    target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg)</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">ImageProcessor.resize(<span class="string">"src.png"</span>,<span class="string">"tgt.png"</span>, <span class="number">100</span>, <span class="number">60</span>)</div></pre></td></tr></table></figure></p>
<h2 id="Watermark"><a href="#Watermark" class="headerlink" title="Watermark"></a>Watermark</h2><h3 id="Watermark-with-image"><a href="#Watermark-with-image" class="headerlink" title="Watermark with image"></a>Watermark with image</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rmagick'</span></div><div class="line"></div><div class="line">img  = Magick::Image.read(<span class="string">"test.png"</span>).first</div><div class="line">mark = Magick::Image.read(<span class="string">"cc.jpg"</span>).first</div><div class="line"></div><div class="line">mark.background_color = <span class="string">"Transparent"</span></div><div class="line"></div><div class="line"><span class="comment"># resize the watermark to 60% of the image we want to watermark</span></div><div class="line">watermark = mark.resize_to_fit(img.rows * <span class="number">0</span>.<span class="number">6</span>, img.columns * <span class="number">0</span>.<span class="number">6</span>)</div><div class="line"></div><div class="line"><span class="comment"># rotate this mark by 45 degrees anticlockwise (optional)</span></div><div class="line">watermark.rotate!(-<span class="number">45</span>)</div><div class="line"></div><div class="line"><span class="comment"># add watermark with 40% opacity for watermark, 100% opacity for image and position is center</span></div><div class="line">newimg = img.dissolve(watermark, <span class="number">0</span>.<span class="number">4</span>, <span class="number">1</span>, Magick::CenterGravity)</div><div class="line">new.write(<span class="string">"watermark_img.jpg"</span>)</div></pre></td></tr></table></figure>
<h3 id="Watermark-with-text"><a href="#Watermark-with-text" class="headerlink" title="Watermark with text"></a>Watermark with text</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rmagick'</span></div><div class="line"></div><div class="line">img = Magick::Image.read(<span class="string">"test.png"</span>).first</div><div class="line">mark = Magick::Image.new(img.rows, img.columns) &#123;<span class="keyword">self</span>.background_color = <span class="string">"none"</span>&#125;</div><div class="line">draw = Magick::Draw.new</div><div class="line"></div><div class="line">draw.annotate(mark, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">"www.yuxifan.com"</span>) <span class="keyword">do</span></div><div class="line">  draw.gravity = Magick::CenterGravity</div><div class="line">  draw.pointsize = <span class="number">50</span></div><div class="line">  draw.font_family = <span class="string">"Arial Mono"</span> <span class="comment"># set font</span></div><div class="line">  draw.fill   = <span class="string">"black"</span> <span class="comment"># set text color</span></div><div class="line">  draw.stroke = <span class="string">"none"</span>  <span class="comment"># remove stroke</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">mark = mark.rotate(-<span class="number">45</span>)</div><div class="line">img2 = img.watermark(mark, <span class="number">0</span>.<span class="number">2</span>, <span class="number">0</span>.<span class="number">5</span>, Magick::CenterGravity)</div><div class="line">img2.write(<span class="string">"text_watermark.jpg"</span>)</div></pre></td></tr></table></figure>
<h3 id="Watermark-with-both-image-and-text"><a href="#Watermark-with-both-image-and-text" class="headerlink" title="Watermark with both image and text"></a>Watermark with both image and text</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rmagick'</span></div><div class="line"></div><div class="line">img = Magick::Image.read(<span class="string">"test.png"</span>).first</div><div class="line">mark = Magick::Image.new(img.rows, img.columns) &#123;<span class="keyword">self</span>.background_color = <span class="string">"none"</span>&#125;</div><div class="line">draw = Magick::Draw.new</div><div class="line"></div><div class="line">draw.annotate(mark, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">"www.yuxifan.com"</span>) <span class="keyword">do</span></div><div class="line">  draw.gravity = Magick::CenterGravity</div><div class="line">  draw.pointsize = <span class="number">50</span></div><div class="line">  draw.font_family = <span class="string">"Arial"</span></div><div class="line">  draw.fill   = <span class="string">"black"</span> <span class="comment"># set text color</span></div><div class="line">  draw.stroke = <span class="string">"none"</span>  <span class="comment"># remove stroke</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">mark = mark.rotate(-<span class="number">45</span>)</div><div class="line">img2 = img.watermark(mark, <span class="number">0</span>.<span class="number">2</span>, <span class="number">0</span>.<span class="number">5</span>, Magick::CenterGravity)</div><div class="line"></div><div class="line">markimg = Magick::Image.read(<span class="string">"cc.jpg"</span>).first</div><div class="line">markimg.background_color = <span class="string">"Transparent"</span></div><div class="line"></div><div class="line">watermark = markimg.resize_to_fit(img2.rows * <span class="number">0</span>.<span class="number">3</span>, img2.columns * <span class="number">0</span>.<span class="number">3</span>)</div><div class="line">img3 = img2.watermark(watermark, <span class="number">0</span>.<span class="number">2</span>, <span class="number">0</span>.<span class="number">3</span>, Magick::SouthEastGravity)</div><div class="line">img3.write(<span class="string">"watermark_txtimg.jpg"</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Resize-an-image&quot;&gt;&lt;a href=&quot;#Resize-an-image&quot; class=&quot;headerlink&quot; title=&quot;Resize an ima
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="image" scheme="https://www.yuxifan.com/tags/image/"/>
    
  </entry>
  
  <entry>
    <title>How to shorten URLs in Ruby</title>
    <link href="https://www.yuxifan.com/2016/10/10/how-to-shorten-url-in-ruby/"/>
    <id>https://www.yuxifan.com/2016/10/10/how-to-shorten-url-in-ruby/</id>
    <published>2016-10-10T01:10:12.000Z</published>
    <updated>2016-10-10T12:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/url-shortener.png" alt="URL shortener"></p>
<h2 id="Install-gems"><a href="#Install-gems" class="headerlink" title="Install gems:"></a>Install gems:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install bitly</div><div class="line">gem install google_url_shortener</div></pre></td></tr></table></figure>
<h2 id="Calling-bitly-shortener-in-Ruby"><a href="#Calling-bitly-shortener-in-Ruby" class="headerlink" title="Calling bitly shortener in Ruby"></a>Calling bitly shortener in Ruby</h2><p>File: testbitly.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'bitly'</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> ARGV.length != <span class="number">1</span></div><div class="line">  puts <span class="string">'Usage: ruby testbitly.rb URL'</span></div><div class="line">  exit</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">bitlyusername = <span class="string">'YOUR_USERNAME'</span></div><div class="line">bitlytoken    = <span class="string">'YOUR_TOKEN'</span></div><div class="line"></div><div class="line">Bitly.use_api_version_3</div><div class="line">Bitly.configure <span class="keyword">do</span> <span class="params">|config|</span></div><div class="line">  config.api_version = <span class="number">3</span></div><div class="line">  config.access_token = bitlytoken</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">u = Bitly.client.shorten(ARGV[<span class="number">0</span>])</div><div class="line">puts u.short_url</div></pre></td></tr></table></figure></p>
<p>Test</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby testbitly.rb https://www.yuxifan.com</div></pre></td></tr></table></figure>
<h2 id="Calling-google-shortener-in-Ruby"><a href="#Calling-google-shortener-in-Ruby" class="headerlink" title="Calling google shortener in Ruby"></a>Calling google shortener in Ruby</h2><p>File: testgoogle.rb</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'google_url_shortener'</span></div><div class="line"></div><div class="line">Google::UrlShortener::Base.api_key = <span class="string">"YOUR_API_KEY"</span></div><div class="line"></div><div class="line">url  = <span class="string">"https://www.yuxifan.com/"</span></div><div class="line">gurl = Google::UrlShortener::Url.new(<span class="symbol">:long_url</span> =&gt; url)</div><div class="line">u = gurl.shorten!</div><div class="line">puts u</div></pre></td></tr></table></figure>
<p>Test</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby testgoogle.rb</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/url-shortener.png&quot; alt=&quot;URL shortener&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-gems&quot;&gt;&lt;a href=&quot;#Install-gems&quot; class=&quot;headerlink&quot; title
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="shortener" scheme="https://www.yuxifan.com/tags/shortener/"/>
    
  </entry>
  
  <entry>
    <title>How to generate QR code in Ruby</title>
    <link href="https://www.yuxifan.com/2016/10/10/how-to-generate-qrcode-in-ruby/"/>
    <id>https://www.yuxifan.com/2016/10/10/how-to-generate-qrcode-in-ruby/</id>
    <published>2016-10-10T00:10:12.000Z</published>
    <updated>2016-10-10T11:57:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>How to generate a QR code in Ruby</p>
<p><img src="/images/ruby/qr.jpg" alt="QR Code"></p>
<h2 id="Install-gem"><a href="#Install-gem" class="headerlink" title="Install gem:"></a>Install gem:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rqrcode</div></pre></td></tr></table></figure>
<h2 id="Ruby-code"><a href="#Ruby-code" class="headerlink" title="Ruby code"></a>Ruby code</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rqrcode'</span></div><div class="line"></div><div class="line">qrcode = RQRCode::QRCode.new(<span class="string">"https://www.yuxifan.com/"</span>)</div><div class="line">png = qrcode.as_png(</div><div class="line">          <span class="symbol">resize_gte_to:</span> <span class="literal">false</span>,</div><div class="line">          <span class="symbol">resize_exactly_to:</span> <span class="literal">false</span>,</div><div class="line">          <span class="symbol">fill:</span> <span class="string">'white'</span>,</div><div class="line">          <span class="symbol">color:</span> <span class="string">'black'</span>,</div><div class="line">          <span class="symbol">size:</span> <span class="number">360</span>,</div><div class="line">          <span class="symbol">border_modules:</span> <span class="number">4</span>,</div><div class="line">          <span class="symbol">module_px_size:</span> <span class="number">6</span>,</div><div class="line">          <span class="symbol">file:</span> <span class="string">"/var/tmp/qrx360.png"</span> </div><div class="line">          )</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;How to generate a QR code in Ruby&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/ruby/qr.jpg&quot; alt=&quot;QR Code&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-gem&quot;&gt;&lt;a href=&quot;#Install-gem&quot; cl
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="qr" scheme="https://www.yuxifan.com/tags/qr/"/>
    
  </entry>
  
  <entry>
    <title>How to implement a distributed message processing system by using Redis / Resque in standalone Ruby applications</title>
    <link href="https://www.yuxifan.com/2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/"/>
    <id>https://www.yuxifan.com/2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/</id>
    <published>2016-10-05T08:51:12.000Z</published>
    <updated>2016-10-05T09:03:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>Most Ruby developers are using Rails for their application. Integrating Redis/Resque in Rails are quite easy and there are lots of resources. But standalone applications are still needed. Here is how to use Reids/Resuqe in a distributed standalone Ruby application (<strong>without Rails</strong>).</p>
<h2 id="Architecture-design"><a href="#Architecture-design" class="headerlink" title="Architecture design"></a>Architecture design</h2><p><img src="/images/ruby/redis-architecture.jpg" alt=""></p>
<h2 id="Define-a-processor-message-consumer"><a href="#Define-a-processor-message-consumer" class="headerlink" title="Define a processor (message consumer)"></a>Define a processor (message consumer)</h2><p>File: file_processor.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileProcessor</span></span></div><div class="line"></div><div class="line">  @queue = <span class="string">"file_process"</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">perform</span><span class="params">(file)</span></span></div><div class="line">    puts <span class="string">"Processing file: <span class="subst">#&#123;file&#125;</span>"</span></div><div class="line">    sleep <span class="number">3</span> <span class="comment"># fake file processing here ...</span></div><div class="line">    puts <span class="string">"Successfully processed: <span class="subst">#&#123;file&#125;</span>"</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<h2 id="Define-a-client-message-producer"><a href="#Define-a-client-message-producer" class="headerlink" title="Define a client (message producer)"></a>Define a client (message producer)</h2><p>File: file_processor_client.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">"yaml"</span></div><div class="line"><span class="keyword">require</span> <span class="string">"resque"</span></div><div class="line">require_relative <span class="string">"file_processor"</span></div><div class="line"></div><div class="line"><span class="comment"># Configuring (remote) redis server</span></div><div class="line">rails_env = ENV[<span class="string">'RAILS_ENV'</span>] <span class="params">||</span> <span class="string">'development'</span></div><div class="line">resque_config = YAML.load_file(File.join(__dir_<span class="number">_</span>, <span class="string">'config/'</span>, <span class="string">'resque.yml'</span>))</div><div class="line">Resque.redis = resque_config[rails_env]</div><div class="line"></div><div class="line">params = ARGV</div><div class="line">puts <span class="string">"Send files for processing: <span class="subst">#&#123;params.join(<span class="string">" "</span>)&#125;</span>"</span></div><div class="line">params.each <span class="keyword">do</span> <span class="params">|param|</span></div><div class="line">  puts <span class="string">"Sending a file to process: <span class="subst">#&#123;param&#125;</span>"</span></div><div class="line">  Resque.enqueue(FileProcessor, param)</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<h2 id="Configurations"><a href="#Configurations" class="headerlink" title="Configurations"></a>Configurations</h2><p>File: config/resque.yml<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">development:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span></div><div class="line"><span class="attr">test:</span> YOUR_TEST_SERVER:<span class="number">6379</span></div><div class="line"><span class="attr">production:</span> YOUR_PRODUCTION_SERVER:<span class="number">6379</span></div></pre></td></tr></table></figure></p>
<p>File: config/initializers/resque.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rails_env = ENV[<span class="string">'RAILS_ENV'</span>] <span class="params">||</span> <span class="string">'development'</span></div><div class="line">resque_config = YAML.load_file(File.join(__dir_<span class="number">_</span>, <span class="string">'../'</span>, <span class="string">'resque.yml'</span>))</div><div class="line">Resque.redis = resque_config[rails_env]</div></pre></td></tr></table></figure></p>
<p>File: Rakefile<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'yaml'</span></div><div class="line"><span class="keyword">require</span> <span class="string">"resque"</span></div><div class="line"><span class="keyword">require</span> <span class="string">"resque/tasks"</span></div><div class="line">require_relative <span class="string">"file_processor"</span></div><div class="line"></div><div class="line">namespace <span class="symbol">:resque</span> <span class="keyword">do</span></div><div class="line">  desc <span class="string">"config resque ENV"</span></div><div class="line"></div><div class="line">  rails_env = ENV[<span class="string">'RAILS_ENV'</span>] <span class="params">||</span> <span class="string">'development'</span></div><div class="line">  resque_config = YAML.load_file(File.join(__dir_<span class="number">_</span>, <span class="string">'config/'</span>, <span class="string">'resque.yml'</span>))</div><div class="line">  Resque.redis = resque_config[rails_env]</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<h2 id="Start-worker"><a href="#Start-worker" class="headerlink" title="Start worker"></a>Start worker</h2><p>Run:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rake resque:work QUEUE=*</div></pre></td></tr></table></figure></p>
<h2 id="Start-client-to-send-messages-to-Redis"><a href="#Start-client-to-send-messages-to-Redis" class="headerlink" title="Start client to send messages to Redis"></a>Start client to send messages to Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RAILS_ENV=production ruby file_processor_client.rb 1.jpg 2.png 3.tif</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Most Ruby developers are using Rails for their application. Integrating Redis/Resque in Rails are quite easy and there are lots of resour
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="redis" scheme="https://www.yuxifan.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Implement a slider in Hexo</title>
    <link href="https://www.yuxifan.com/2016/09/10/implement-a-slider-in-hexo/"/>
    <id>https://www.yuxifan.com/2016/09/10/implement-a-slider-in-hexo/</id>
    <published>2016-09-10T21:51:12.000Z</published>
    <updated>2016-10-07T10:37:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/hexo/bxslider.jpg" alt="Hexo slider"></p>
<h2 id="Download-bxslider"><a href="#Download-bxslider" class="headerlink" title="Download bxslider"></a>Download bxslider</h2><p>Download from <a href="http://bxslider.com/" rel="external nofollow" target="_blank">http://bxslider.com/</a> and copy jquery.bxslider.css to hexo project css folder and copy js file to js folder.</p>
<h2 id="Create-file-bxslider-ejs"><a href="#Create-file-bxslider-ejs" class="headerlink" title="Create file bxslider.ejs"></a>Create file bxslider.ejs</h2><p>Add file into your theme folder, e.g. themes/YOUR_THEME/layout/common/bxslider.ejs</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/bxslider/jquery.bxslider.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"all"</span> <span class="attr">href</span>=<span class="string">"/css/bxslider/jquery.bxslider.css"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"bxslider"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">slider</span> <span class="attr">in</span> <span class="attr">theme.sliders</span>) &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">slider</span>) &#123; %&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= theme.sliders[slider]['url']%&gt;"</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%= theme.sliders[slider]['image']%&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= theme.sliders[slider]['text'] %&gt;"</span>/&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  $(<span class="string">'.bxslider'</span>).bxSlider(&#123;</div><div class="line">    <span class="attr">mode</span>: <span class="string">'fade'</span>,</div><div class="line">    <span class="attr">captions</span>: <span class="literal">true</span></div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Modify-index-ejs"><a href="#Modify-index-ejs" class="headerlink" title="Modify index.ejs"></a>Modify index.ejs</h2><p>Add a reference to bxslider:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">bxslider</span>') %&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="Define-slider-in-config-yml"><a href="#Define-slider-in-config-yml" class="headerlink" title="Define slider in _config.yml"></a>Define slider in _config.yml</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sliders:</span></div><div class="line">  <span class="symbol">slider1:</span></div><div class="line">    <span class="symbol">image:</span> /images/slider/<span class="number">1</span>.jpg</div><div class="line">    <span class="symbol">url:</span>   /post1/</div><div class="line">    <span class="symbol">text:</span>  slider1 text</div><div class="line">  <span class="symbol">slider2:</span></div><div class="line">    <span class="symbol">image:</span> /images/slider/<span class="number">2</span>.jpg</div><div class="line">    <span class="symbol">url:</span>   /post2/</div><div class="line">    <span class="symbol">text:</span>  slider2 text</div><div class="line">  <span class="symbol">slider3:</span></div><div class="line">    <span class="symbol">image:</span> /images/slider/<span class="number">3</span>.jpg</div><div class="line">    <span class="symbol">url:</span>   /post3/</div><div class="line">    <span class="symbol">text:</span>  slider3 text</div></pre></td></tr></table></figure>
<h2 id="More-configurations"><a href="#More-configurations" class="headerlink" title="More configurations"></a>More configurations</h2><p>Change default style for .bx-wrapper .bx-viewport in the css, e.g. border, and left</p>
<p>You may change the slider width in style.styl</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/hexo/bxslider.jpg&quot; alt=&quot;Hexo slider&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Download-bxslider&quot;&gt;&lt;a href=&quot;#Download-bxslider&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="hexo" scheme="https://www.yuxifan.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.yuxifan.com/tags/hexo/"/>
    
      <category term="slider" scheme="https://www.yuxifan.com/tags/slider/"/>
    
  </entry>
  
  <entry>
    <title>How to implement hierarchical facets</title>
    <link href="https://www.yuxifan.com/2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/"/>
    <id>https://www.yuxifan.com/2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/</id>
    <published>2016-09-06T08:51:12.000Z</published>
    <updated>2016-10-04T21:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/solr/solr.png" alt=""></p>
<h2 id="0-Environments"><a href="#0-Environments" class="headerlink" title="0. Environments"></a>0. Environments</h2><p>Ubuntu 14.x</p>
<p>Open JDK 7.x</p>
<p>Solr 3.6.x</p>
<p>Apache Tomcat 7.x</p>
<h2 id="1-The-problem"><a href="#1-The-problem" class="headerlink" title="1. The problem"></a>1. The problem</h2><p>The solr documentation summaries approaches to implement hierarchical facets in: <a href="[http://wiki.apache.org/solr/HierarchicalFaceting#Approaches_to_Hierarchical_Facets_in_Solr">http://wiki.apache.org/solr/HierarchicalFaceting#Approaches_to_Hierarchical_Facets_in_Solr</a> in different ways:</p>
<h3 id="1-Use-a-prefix-before-the-data-to-store-hierarchy-information-e-g"><a href="#1-Use-a-prefix-before-the-data-to-store-hierarchy-information-e-g" class="headerlink" title="1) Use a prefix before the data to store hierarchy information, e.g."></a>1) Use a prefix before the data to store hierarchy information, e.g.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Doc#1: 0/Fruit, 1/Apple, 2/Red</div><div class="line">Doc#2: 0/Fruit, 1/Pear</div><div class="line">Doc#3: 0/Fruit, 1/Apple, 2/Yellow</div></pre></td></tr></table></figure>
<p>OR (even worse)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Doc#1: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/Red</div><div class="line">Doc#2: 0/Fruit, 1/Fruit/Pear</div><div class="line">Doc#3: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/Yellow</div></pre></td></tr></table></figure>
<p>The problem of this approach is that we have to store extra data into solr and the hierarchy information is duplicated across solr. </p>
<h3 id="2-“breadcrumbs”"><a href="#2-“breadcrumbs”" class="headerlink" title="2) “breadcrumbs”"></a>2) “breadcrumbs”</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Doc#1: Fruit &gt; Apple &gt; Red</div><div class="line">Doc#2: Fruit &gt; Pear</div><div class="line">Doc#3: Fruit &gt; Apple &gt; Yellow</div></pre></td></tr></table></figure>
<p>The above 2 suggested solutions all contain duplicated data, which is really bad. Actually, the hierarchy information should be stored separately to avoid duplication.</p>
<h2 id="2-The-solution"><a href="#2-The-solution" class="headerlink" title="2. The solution"></a>2. The solution</h2><h3 id="1-Store-hierarchy-information-into-an-XML-e-g-a-data-dictionary"><a href="#1-Store-hierarchy-information-into-an-XML-e-g-a-data-dictionary" class="headerlink" title="1) Store hierarchy information into an XML, e.g. a data dictionary:"></a>1) Store hierarchy information into an XML, e.g. a data dictionary:</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">fruits</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">apple</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">red</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">yellow</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">apple</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">pear</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">pear</span>&gt;</span></div><div class="line">  ......</div><div class="line"><span class="tag">&lt;<span class="name">fruits</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2-Aggregate-the-hierarchy-information-with-the-actual-solr-data-while-retrieving-data-e-g"><a href="#2-Aggregate-the-hierarchy-information-with-the-actual-solr-data-while-retrieving-data-e-g" class="headerlink" title="2) Aggregate the hierarchy information with the actual solr data while retrieving data, e.g."></a>2) Aggregate the hierarchy information with the actual solr data while retrieving data, e.g.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ITERATE ALL FACETS</div><div class="line">    GET DATA DICTIONARY FOR CURRENT FACET</div><div class="line">    ITERATE FACET ITEMS in CURRENT FACET</div><div class="line">      AGGREGATE DD WITH FACET ITEMS AND SAVE TO A HIERARCHICAL LIST</div><div class="line">    END</div><div class="line">END</div></pre></td></tr></table></figure>
<h3 id="3-In-the-client-code-based-on-the-hierarchical-list-constructing-HTML-elements-e-g-in-JSP"><a href="#3-In-the-client-code-based-on-the-hierarchical-list-constructing-HTML-elements-e-g-in-JSP" class="headerlink" title="3) In the client code, based on the hierarchical list, constructing HTML elements, e.g, in JSP."></a>3) In the client code, based on the hierarchical list, constructing HTML elements, e.g, in JSP.</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;c:forEach items="$&#123;availableFacets&#125;" var="fc"&gt;</div><div class="line"></div><div class="line">  &lt;ul class="XXXX"&gt;</div><div class="line">     &lt;c:forEach items="$&#123;fc.iterator&#125;" var="facetElement"&gt;</div><div class="line">        &lt;li class="expanded"&gt;</div><div class="line">          &lt;c:out value="$&#123;facetElement.label&#125;"&gt;&lt;/c:out&gt;[&lt;c:out value="$&#123;facetElement.count&#125;" /&gt;]&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;!-- Second level --&gt;</div><div class="line">        &lt;ul&gt;</div><div class="line">           &lt;c:forEach items="$&#123;facetElement.iterator&#125;" var="secondLevelFacetElement"&gt;</div><div class="line">              &lt;li class="expanded"&gt;</div><div class="line">                 &lt;c:out value="$&#123;secondLevelFacetElement.label&#125;"&gt;&lt;/c:out&gt;[&lt;c:out value="$&#123;secondLevelFacetElement.count&#125;" /&gt;]&lt;/a&gt;</div><div class="line">              &lt;/li&gt;</div><div class="line">              &lt;!-- deeper levels --&gt;</div><div class="line">           &lt;/c:forEach&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">     &lt;/c:forEach&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line">&lt;/c:forEach&gt;</div></pre></td></tr></table></figure>
<h3 id="4-Based-on-the-ul-li-tags-render-the-hierarchical-facets-in-Javascript-e-g-using-jsTree-https-www-jstree-com"><a href="#4-Based-on-the-ul-li-tags-render-the-hierarchical-facets-in-Javascript-e-g-using-jsTree-https-www-jstree-com" class="headerlink" title="4) Based on the ul / li tags, render the hierarchical facets in Javascript, e.g. using jsTree (https://www.jstree.com/)"></a>4) Based on the ul / li tags, render the hierarchical facets in Javascript, e.g. using jsTree (<a href="https://www.jstree.com/" rel="external nofollow" target="_blank">https://www.jstree.com/</a>)</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/solr/solr.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;0-Environments&quot;&gt;&lt;a href=&quot;#0-Environments&quot; class=&quot;headerlink&quot; title=&quot;0. Environments&quot;
    
    </summary>
    
      <category term="solr" scheme="https://www.yuxifan.com/categories/solr/"/>
    
    
      <category term="JSTL" scheme="https://www.yuxifan.com/tags/JSTL/"/>
    
      <category term="solr" scheme="https://www.yuxifan.com/tags/solr/"/>
    
  </entry>
  
  <entry>
    <title>Top Hexo plugins recommended</title>
    <link href="https://www.yuxifan.com/2016/09/05/top-hexo-plugins/"/>
    <id>https://www.yuxifan.com/2016/09/05/top-hexo-plugins/</id>
    <published>2016-09-05T03:51:12.000Z</published>
    <updated>2016-10-07T10:37:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/hexo/plugin.gif" alt="Hexo plugins"></p>
<h2 id="hexo-generator-minify"><a href="#hexo-generator-minify" class="headerlink" title="hexo-generator-minify"></a>hexo-generator-minify</h2><p>This plugin is used to minify CSS / Javascript code.</p>
<p>Install:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-minify --save</div></pre></td></tr></table></figure>
<p>Run:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo gm --cssSafe</div></pre></td></tr></table></figure></p>
<h2 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a>hexo-generator-sitemap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
<p>It generates sitemap and save it to sitemap.xml. If you want to save to another file, then configure it in _config.yml:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sitemap:</span></div><div class="line">  <span class="symbol">path:</span> sitemap.xml</div></pre></td></tr></table></figure></p>
<h2 id="hexo-autonofollow"><a href="#hexo-autonofollow" class="headerlink" title="hexo-autonofollow"></a>hexo-autonofollow</h2><p>This plugin is used to add rel=”external nofollow” to external links.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-autonofollow --save</div></pre></td></tr></table></figure>
<p>You may need to modify _config.yml:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">nofollow:</span></div><div class="line">    <span class="symbol">enable:</span> <span class="literal">true</span></div><div class="line">    <span class="symbol">exclude:</span></div><div class="line">    - www.yuxifan.com</div></pre></td></tr></table></figure></p>
<h2 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h2><p>This plugin is used to genearte rss/atom feed.</p>
<p>Install: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
<p>Configuration:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">feed:</span></div><div class="line">  <span class="symbol">type:</span> atom</div><div class="line">  <span class="symbol">path:</span> atom.xml</div><div class="line">  <span class="symbol">limit:</span> <span class="number">20</span></div></pre></td></tr></table></figure></p>
<h2 id="hexo-generator-json-content"><a href="#hexo-generator-json-content" class="headerlink" title="hexo-generator-json-content"></a>hexo-generator-json-content</h2><p>This plugin is used to genearte json content which is required by on-site search<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-json-content --save</div></pre></td></tr></table></figure></p>
<p>The generated content.json may get bigger and bigger while the site contents grow. You may want to use title / keywords ONLY for the generated json file.</p>
<p>Then, you may need to add keyword fileds for your posts. Also modify file: node_modules/hexo-generator-json-content/index.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (posts) &#123;</div><div class="line">    <span class="keyword">var</span> postsPropertyNames = <span class="built_in">Object</span>.getOwnPropertyNames(posts).filter(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</div><div class="line">      <span class="keyword">return</span> posts[item];</div><div class="line">    &#125;);</div><div class="line">    content = site.posts.sort(<span class="string">'-date'</span>).filter(<span class="function"><span class="keyword">function</span> (<span class="params">post</span>) </span>&#123;</div><div class="line">      <span class="keyword">return</span> post.published;</div><div class="line">    &#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">post</span>) </span>&#123;</div><div class="line">      <span class="keyword">var</span> actualPost = &#123;&#125;;</div><div class="line">      postsPropertyNames.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span> (item === <span class="string">'excerpt'</span>) &#123;</div><div class="line">          actualPost[item] = minify(post.excerpt);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item === <span class="string">'text'</span>) &#123;</div><div class="line">          <span class="keyword">if</span>(post.keywords) &#123;</div><div class="line">            actualPost[item] = minify(post.keywords);</div><div class="line">          &#125;<span class="keyword">else</span> <span class="keyword">if</span>(post.description) &#123;</div><div class="line">            actualPost[item] = minify(post.description);</div><div class="line">          &#125;<span class="keyword">else</span> &#123;</div><div class="line">            actualPost[item] = minify(post.title);</div><div class="line">          &#125;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item === <span class="string">'categories'</span>) &#123;</div><div class="line">          actualPost[item] = post.categories.map(<span class="function"><span class="keyword">function</span> (<span class="params">cat</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">              <span class="attr">name</span>: cat.name,</div><div class="line">              <span class="attr">slug</span>: cat.slug,</div><div class="line">              <span class="attr">permalink</span>: cat.permalink</div><div class="line">            &#125;;</div><div class="line">          &#125;);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item === <span class="string">'tags'</span>) &#123;</div><div class="line">          actualPost[item] = post.tags.map(<span class="function"><span class="keyword">function</span> (<span class="params">tag</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">              <span class="attr">name</span>: tag.name,</div><div class="line">              <span class="attr">slug</span>: tag.slug,</div><div class="line">              <span class="attr">permalink</span>: tag.permalink</div><div class="line">            &#125;;</div><div class="line">          &#125;);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item === <span class="string">'keywords'</span> &amp;&amp; cfg.keywords) &#123;</div><div class="line">          actualPost[item] = getKeywords(minify(post.excerpt));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">          actualPost[item] = post[item];</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">      <span class="keyword">return</span> actualPost;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/hexo/plugin.gif&quot; alt=&quot;Hexo plugins&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;hexo-generator-minify&quot;&gt;&lt;a href=&quot;#hexo-generator-minify&quot; class=&quot;headerl
    
    </summary>
    
      <category term="hexo" scheme="https://www.yuxifan.com/categories/hexo/"/>
    
    
      <category term="minify" scheme="https://www.yuxifan.com/tags/minify/"/>
    
      <category term="hexo" scheme="https://www.yuxifan.com/tags/hexo/"/>
    
      <category term="plugin" scheme="https://www.yuxifan.com/tags/plugin/"/>
    
      <category term="seo" scheme="https://www.yuxifan.com/tags/seo/"/>
    
      <category term="nofollow" scheme="https://www.yuxifan.com/tags/nofollow/"/>
    
      <category term="sitemap" scheme="https://www.yuxifan.com/tags/sitemap/"/>
    
      <category term="feed" scheme="https://www.yuxifan.com/tags/feed/"/>
    
  </entry>
  
  <entry>
    <title>How to close an iframe within iframe itself</title>
    <link href="https://www.yuxifan.com/2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/"/>
    <id>https://www.yuxifan.com/2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/</id>
    <published>2016-09-02T08:51:12.000Z</published>
    <updated>2016-10-04T21:17:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javascript/iframe.png" alt=""></p>
<p>It depends on how the iframe window is created. For example, if the iframe window has an ID or name which can be used to identify the iframe, the iframe can be closed from the parent window.</p>
<p>In iframe, the javascript code is:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">parent.closeIframe();</div></pre></td></tr></table></figure>
<p>In parent, the code is:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">closeIframe</span>(<span class="params"></span>) </span>&#123;</div><div class="line"> $(<span class="string">'#iframeID'</span>).remove();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>If you don’t know the iframe ID, iframe usually can be closed by clicking anywhere in the parent window. For instance, the iframe opened by thickbox. The javascript code in iframe is:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">parent.document.elementFromPoint(<span class="number">0</span>, <span class="number">0</span>).click();</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/javascript/iframe.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;It depends on how the iframe window is created. For example, if the iframe window
    
    </summary>
    
      <category term="javascript" scheme="https://www.yuxifan.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="https://www.yuxifan.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to pass multiple parameters with same name to JSTL</title>
    <link href="https://www.yuxifan.com/2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/"/>
    <id>https://www.yuxifan.com/2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/</id>
    <published>2016-08-31T08:51:12.000Z</published>
    <updated>2016-10-04T14:22:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/java/glassfish.png" alt=""></p>
<p>In JSP EL, param can be used to retrieve URL parameters. For example:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;c:forEach items="$&#123;param&#125;" var="currentParam"&gt;</div><div class="line">XXX</div><div class="line">&lt;/c:forEach&gt;</div></pre></td></tr></table></figure>
<p>However, if multiple values with same name are passed, only the first value can be retrieved. I’m not sure if it’s a bug of JSTL or it has been designed to work this way. The easiest solution is to get all parameters in JSP scriptlet and pass it to JSTL.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">Map&lt;String, String[]&gt; allparams = request.getParameterMap();</div><div class="line">pageContext.setAttribute(<span class="string">"allparams"</span>, allparams);</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<p>Then use it in JSTL:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;c:forEach items="$&#123;allparams&#125;" var="currentParam"&gt;</div><div class="line">	&lt;c:out value='$&#123;currentParam.key&#125;' /&gt;:</div><div class="line">	&lt;c:forEach items="$&#123;currentParam.value&#125;" var="currentValue"&gt;</div><div class="line">		&lt;c:out value='$&#123;currentValue&#125;' /&gt; /</div><div class="line">	&lt;/c:forEach&gt;</div><div class="line">	&lt;br/&gt;</div><div class="line">&lt;/c:forEach&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/java/glassfish.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;In JSP EL, param can be used to retrieve URL parameters. For example:&lt;/p&gt;
&lt;figure cl
    
    </summary>
    
      <category term="java" scheme="https://www.yuxifan.com/categories/java/"/>
    
    
      <category term="java" scheme="https://www.yuxifan.com/tags/java/"/>
    
      <category term="JSTL" scheme="https://www.yuxifan.com/tags/JSTL/"/>
    
  </entry>
  
</feed>
