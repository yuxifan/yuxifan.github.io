<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuxi Fan</title>
  <subtitle>Yuxi&#39;s development blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.yuxifan.com/"/>
  <updated>2018-04-26T12:07:30.669Z</updated>
  <id>https://www.yuxifan.com/</id>
  
  <author>
    <name>Yuxi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The problem with plataformatec simple_form checkboxes and the fix</title>
    <link href="https://www.yuxifan.com/2017/12/12/simple_form_checkbox_problem/"/>
    <id>https://www.yuxifan.com/2017/12/12/simple_form_checkbox_problem/</id>
    <published>2017-12-12T02:10:12.000Z</published>
    <updated>2018-04-26T12:07:30.669Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/simple-form.jpg" alt=""></p>
<p><a href="https://github.com/plataformatec/simple_form" rel="external nofollow noopener noreferrer" target="_blank">Plataformatec Simple Form</a> is a popular gem, helping Rails developers to build forms. I have experienced a problem with checkboxes and managed to fix it.  </p>
<h2 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h2><p>When I use a checkbox in simple form, like:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;%= f.input <span class="symbol">:subject</span>, <span class="symbol">as:</span> <span class="symbol">:check_boxes</span>,</div><div class="line">    <span class="symbol">collection:</span> subject_list,</div><div class="line">    <span class="symbol">input_html:</span> &#123; <span class="symbol">multiple:</span> <span class="literal">true</span> &#125;</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<p>The checkbox shows ok and I can see that the ticked checkbox items have been saved in Rails console. However, when I want to edit the saved data, non of the checkbox items have been ticked.</p>
<h2 id="The-fix"><a href="#The-fix" class="headerlink" title="The fix"></a>The fix</h2><p>The fix is quite simple, e.g.:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;%= f.input <span class="symbol">:subject</span>, <span class="symbol">as:</span> <span class="symbol">:check_boxes</span>,</div><div class="line">    <span class="symbol">collection:</span> subject_list,</div><div class="line">    <span class="symbol">value_method:</span> lambda &#123;<span class="params">|v|</span> v.last.to_s &#125;,</div><div class="line">    <span class="symbol">input_html:</span> &#123; <span class="symbol">multiple:</span> <span class="literal">true</span> &#125;</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/simple-form.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/plataformatec/simple_form&quot; rel=&quot;external nofollow noop
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="rails" scheme="https://www.yuxifan.com/tags/rails/"/>
    
      <category term="simple_form" scheme="https://www.yuxifan.com/tags/simple-form/"/>
    
  </entry>
  
  <entry>
    <title>How to use imagemagick in Ruby</title>
    <link href="https://www.yuxifan.com/2017/09/27/how-to-use-imagemagick-in-ruby/"/>
    <id>https://www.yuxifan.com/2017/09/27/how-to-use-imagemagick-in-ruby/</id>
    <published>2017-09-27T01:10:12.000Z</published>
    <updated>2017-09-27T09:17:25.662Z</updated>
    
    <content type="html"><![CDATA[<p>Using imagemagick is quite straightforward, here is how:</p>
<p><img src="/images/linuximagemagick.jpg" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libmagickwand-dev imagemagick</div><div class="line">gem install rmagick</div></pre></td></tr></table></figure>
<p>The Ruby code:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">require <span class="string">'rmagick'</span></div><div class="line"></div><div class="line">class ImageProcessor</div><div class="line"></div><div class="line">  def self.resize(srcimg,tgtimg,width,height)</div><div class="line">    img = Magick::Image.read(srcimg).first</div><div class="line">    target = Magick::Image.new(width, height) <span class="keyword">do</span></div><div class="line">          <span class="comment">#self.background_color = 'white'</span></div><div class="line">        end</div><div class="line">        img.resize_to_fit!(width, height)</div><div class="line">        target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg)</div><div class="line">  end</div><div class="line"></div><div class="line">  <span class="comment"># !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! make tgtimg is PNG to be loseless</span></div><div class="line">  def self.scale(srcimg,tgtimg,width,height)</div><div class="line">    img = Magick::Image.read(srcimg).first</div><div class="line">    target = Magick::Image.new(width, height) <span class="keyword">do</span></div><div class="line">          <span class="comment">#self.background_color = 'white'</span></div><div class="line">        end</div><div class="line">        img.scale!(width, height)</div><div class="line">        target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg)</div><div class="line">  end</div><div class="line"></div><div class="line">  def self.scale_width_only(srcimg,tgtimg,width)</div><div class="line">    img = Magick::Image.read(srcimg).first</div><div class="line">    x = img.columns</div><div class="line">    y = img.rows</div><div class="line">    ratio = (1.0*x)/y</div><div class="line">    height = width / ratio</div><div class="line">    target = Magick::Image.new(width, height)</div><div class="line">    target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg)</div><div class="line">  end</div><div class="line"></div><div class="line">end</div><div class="line"></div><div class="line">ImageProcessor.resize(<span class="string">"test.png"</span>,<span class="string">"test_resize1.png"</span>, 100, 60)</div><div class="line">ImageProcessor.resize(<span class="string">"test.png"</span>,<span class="string">"test_resize2.png"</span>, 200, 400)</div><div class="line"></div><div class="line">ImageProcessor.scale(<span class="string">"test.png"</span>,<span class="string">"test_scale1.png"</span>, 100, 60)</div><div class="line">ImageProcessor.scale(<span class="string">"test.png"</span>,<span class="string">"test_scale2.png"</span>, 200, 400)</div><div class="line"></div><div class="line">ImageProcessor.scale_width_only(<span class="string">"test.png"</span>,<span class="string">"test_scale3.png"</span>, 200)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Using imagemagick is quite straightforward, here is how:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/linuximagemagick.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highli
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://www.yuxifan.com/tags/ruby/"/>
    
      <category term="imagemagick" scheme="https://www.yuxifan.com/tags/imagemagick/"/>
    
  </entry>
  
  <entry>
    <title>How to check if an email address is managed by google</title>
    <link href="https://www.yuxifan.com/2017/09/26/check-mail-domain/"/>
    <id>https://www.yuxifan.com/2017/09/26/check-mail-domain/</id>
    <published>2017-09-26T01:10:12.000Z</published>
    <updated>2017-09-26T10:20:41.255Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/google.jpg" alt=""></p>
<p>Lots of institutions have used Google’s mail service and there is a simple way to check if a mail domain is managed by Google, or NOT.</p>
<p>For example, </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">host -tmx sheffield.ac.uk</div></pre></td></tr></table></figure>
<p>The result is:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sheffield.ac.uk mail is handled by 20 alt1.aspmx.l.google.com.</div><div class="line">sheffield.ac.uk mail is handled by 30 aspmx2.googlemail.com.</div><div class="line">sheffield.ac.uk mail is handled by 30 aspmx3.googlemail.com.</div><div class="line">sheffield.ac.uk mail is handled by 20 alt2.aspmx.l.google.com.</div><div class="line">sheffield.ac.uk mail is handled by 10 aspmx.l.google.com.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/google.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Lots of institutions have used Google’s mail service and there is a simple way to chec
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="gmail" scheme="https://www.yuxifan.com/tags/gmail/"/>
    
      <category term="google" scheme="https://www.yuxifan.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>How to use HTML5 clipboard API to paste image in HTML</title>
    <link href="https://www.yuxifan.com/2017/09/07/paste-image-by-using-html5-clipboard-api/"/>
    <id>https://www.yuxifan.com/2017/09/07/paste-image-by-using-html5-clipboard-api/</id>
    <published>2017-09-07T01:10:12.000Z</published>
    <updated>2017-09-11T08:31:26.508Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javascript/clipboard-api.jpg" alt=""></p>
<p><a href="https://w3c.github.io/clipboard-apis/" rel="external nofollow noopener noreferrer" target="_blank">HTML5 Clipboard API</a> allows user to paste image from their operating system clipboard which makes users’ life much easier. Here is how:</p>
<p>First, create an HTML file, together with javascript and css stylesheet:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">  .pastebox &#123;</div><div class="line">    background: lightgreen; </div><div class="line">	border-style: dashed; </div><div class="line">	width: 400px; </div><div class="line">	height: 200px;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="xml"></span></div><div class="line">window.onload = function() &#123;</div><div class="line">    document.getElementById("pasteDiv").addEventListener("paste", pasteHandler);</div><div class="line">&#125;;</div><div class="line">  </div><div class="line">function pasteHandler(e) &#123;</div><div class="line">    var items = e.clipboardData.items;</div><div class="line">	for (var i = 0 ; i <span class="tag">&lt; <span class="attr">items.length</span> ; <span class="attr">i</span>++) &#123;</span></div><div class="line">		<span class="attr">var</span> <span class="attr">item</span> = <span class="string">items[i];</span></div><div class="line"></div><div class="line">		<span class="attr">if</span> (<span class="attr">item.type.indexOf</span>("<span class="attr">image</span>") &gt;=0) &#123;</div><div class="line">			var xhr = new XMLHttpRequest();</div><div class="line">			xhr.onload = function() &#123;</div><div class="line">				if (xhr.status == 200) &#123;</div><div class="line">					console.log("uploaded.");</div><div class="line">				&#125; else &#123;</div><div class="line">					console.log("oops, something wrong.")</div><div class="line">				&#125;</div><div class="line">			&#125;;</div><div class="line">			xhr.onerror = function() &#123;</div><div class="line">				console.log("cannot connect to server.");</div><div class="line">			&#125;;</div><div class="line">			xhr.open("POST", "/servlet/upload", true);</div><div class="line">			xhr.setRequestHeader("Content-Type", item.getAsFile().type);</div><div class="line">			xhr.send(item.getAsFile());</div><div class="line">		&#125; else &#123;</div><div class="line">			console.log("Ignoring non-image.");</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pastebox"</span> <span class="attr">id</span>=<span class="string">"pasteDiv"</span>&gt;</span></div><div class="line">		Paste image here.</div><div class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>The server side Java code to receive and process pasted image data:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">String fileName = <span class="string">"/tmp/"</span> + UUID.randomUUID() + <span class="string">".png"</span>;</div><div class="line"></div><div class="line">InputStream in = request.getInputStream();</div><div class="line">FileOutputStream o = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    File f = <span class="keyword">new</span> File(fileName);</div><div class="line">	o = <span class="keyword">new</span> FileOutputStream(f);</div><div class="line">    <span class="keyword">byte</span> buffer[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span> ((n = in.read(buffer)) != -<span class="number">1</span>) &#123;</div><div class="line">        o.write(buffer, <span class="number">0</span>, n);</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">    <span class="comment">// error handling code</span></div><div class="line">&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	o.close();</div><div class="line">    in.close();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Another example using Javascript and PHP:</p>
<p>The html:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="xml"></span></div><div class="line">window.onload = function() &#123;</div><div class="line">    document.getElementById("pasteDiv").addEventListener("paste", pasteHandler);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">function pasteHandler(e) &#123;</div><div class="line">    var filename = Math.floor((1 + Math.random()) * 0x10000).toString(16)+".png";</div><div class="line"></div><div class="line">    var items = e.clipboardData.items;</div><div class="line">    for (var i = 0 ; i <span class="tag">&lt; <span class="attr">items.length</span> ; <span class="attr">i</span>++) &#123;</span></div><div class="line">        <span class="attr">var</span> <span class="attr">item</span> = <span class="string">items[i];</span></div><div class="line"></div><div class="line">        <span class="attr">if</span> (<span class="attr">item.type.indexOf</span>("<span class="attr">image</span>") &gt;=0) &#123;</div><div class="line">            var xhr = new XMLHttpRequest();</div><div class="line">            xhr.onload = function() &#123;</div><div class="line">                if (xhr.status == 200) &#123;</div><div class="line">                    console.log("uploaded.");</div><div class="line">                    var imgdiv = document.getElementById("imgbox");</div><div class="line">                    imgdiv.innerHTML = imgdiv.innerHTML + "<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"/<span class="attr">uploads</span>/" + <span class="attr">filename</span> + "\"/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>";</div><div class="line"></div><div class="line">                    var pastediv = document.getElementById("pasteDiv");</div><div class="line">                    pastediv.value = pastediv.value + "![](/uploads/"+filename+")";</div><div class="line">                &#125; else &#123;</div><div class="line">                    console.log("oops, something wrong.")</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line">            xhr.onerror = function() &#123;</div><div class="line">                console.log("cannot connect to server.");</div><div class="line">            &#125;;</div><div class="line">            xhr.open("POST", "upload.php?filename="+filename, true);</div><div class="line">            xhr.setRequestHeader("Content-Type", item.getAsFile().type);</div><div class="line">            xhr.send(item.getAsFile());</div><div class="line">        &#125; else &#123;</div><div class="line">            console.log("Ignoring non-image.");</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">Paste the image into the textbox below:<span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"100"</span> <span class="attr">id</span>=<span class="string">"pasteDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"imgbox"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>The PHP code is:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">define(<span class="string">'ROOTPATH'</span>, <span class="keyword">__DIR__</span>);</div><div class="line"></div><div class="line">file_put_contents(ROOTPATH.<span class="string">'/uploads/'</span>.$_GET[<span class="string">"filename"</span>], file_get_contents(<span class="string">'php://input'</span>));</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>Make sure you create upload folder in your web server root folder and change the ownership to USER:www-data, e.g.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drwxrwxr-x  2 root  www-data 4.0K Sep  9 02:34 uploads</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/javascript/clipboard-api.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot; rel=&quot;external nofollow noo
    
    </summary>
    
      <category term="javascript" scheme="https://www.yuxifan.com/categories/javascript/"/>
    
    
      <category term="java" scheme="https://www.yuxifan.com/tags/java/"/>
    
      <category term="javascript" scheme="https://www.yuxifan.com/tags/javascript/"/>
    
      <category term="html5" scheme="https://www.yuxifan.com/tags/html5/"/>
    
      <category term="clipboard API" scheme="https://www.yuxifan.com/tags/clipboard-API/"/>
    
  </entry>
  
  <entry>
    <title>How to run a temporary http server without installing Nginx / Apache in Ubuntu</title>
    <link href="https://www.yuxifan.com/2017/09/05/run-temporary-http-server/"/>
    <id>https://www.yuxifan.com/2017/09/05/run-temporary-http-server/</id>
    <published>2017-09-05T01:10:12.000Z</published>
    <updated>2017-09-05T11:19:10.831Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/web-server.jpg" alt=""></p>
<p>Sometimes we only want to open HTTP ports temporarily, here is how:</p>
<p>If you have enabled ufw, add ufw rule to allow the port being used by HTTP server. For example. to open port 3000 for HTTP server:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ufw allow from any to any port 3000</div></pre></td></tr></table></figure>
<p>Now check all ufw rules:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ufw status numbered</div></pre></td></tr></table></figure>
<p>Go to your website folder. Create html files, e.g. index.html if you don’t have them.</p>
<p>Run the following command to start your web server by typing: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python3 -m http.server 3000</div></pre></td></tr></table></figure>
<p>Now you can access that page in your browser.</p>
<p>After running it, delete the rule (the number can be found from above command, e.g. sudo ufw status numbered):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ufw delete THE_RULE_NUMBER</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/web-server.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Sometimes we only want to open HTTP ports temporarily, here is how:&lt;/p&gt;
&lt;p&gt;If you 
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
      <category term="python" scheme="https://www.yuxifan.com/tags/python/"/>
    
      <category term="http server" scheme="https://www.yuxifan.com/tags/http-server/"/>
    
  </entry>
  
  <entry>
    <title>Setup python development environment for Steem on Ubuntu 16</title>
    <link href="https://www.yuxifan.com/2017/07/28/setup-python-steem-development-environment/"/>
    <id>https://www.yuxifan.com/2017/07/28/setup-python-steem-development-environment/</id>
    <published>2017-07-28T04:51:12.000Z</published>
    <updated>2017-07-28T08:21:26.600Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/steem/python-steem.png" alt="Python &amp; Steem"></p>
<h2 id="Install-python-3"><a href="#Install-python-3" class="headerlink" title="Install python 3"></a>Install python 3</h2><p>Both Python 3 and Python 2 have been pre-installed on Ubuntu 16, you just need to make sure you have the latest versions by running:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get -y upgrade</div></pre></td></tr></table></figure>
<p>Then run the following command to check the version of Python 3:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -v</div></pre></td></tr></table></figure>
<p>You also need to install pip to manage software packages:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y python3-pip</div></pre></td></tr></table></figure>
<p>Install development libraries:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install build-essential libffi-dev libssl-dev python3-dev</div></pre></td></tr></table></figure>
<h2 id="Setting-up-a-virtual-environment"><a href="#Setting-up-a-virtual-environment" class="headerlink" title="Setting up a virtual environment"></a>Setting up a virtual environment</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python3-venv</div><div class="line">mkdir environments</div><div class="line"><span class="built_in">cd</span> environments</div><div class="line">python3 -m venv myenv</div><div class="line"><span class="built_in">source</span> myenv/bin/activate</div></pre></td></tr></table></figure>
<h2 id="Setting-up-python-steem-libraries"><a href="#Setting-up-python-steem-libraries" class="headerlink" title="Setting up python steem libraries"></a>Setting up python steem libraries</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip3 install wheel </div><div class="line">pip3 install piston-lib</div><div class="line">pip3 install steem</div></pre></td></tr></table></figure>
<h2 id="Test-it-works"><a href="#Test-it-works" class="headerlink" title="Test it works"></a>Test it works</h2><p>To test the development environment has been set up correctly, run the following script to list the tags used by latest posts:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> piston <span class="keyword">import</span> Steem</div><div class="line">steem = Steem()</div><div class="line"><span class="keyword">for</span> c <span class="keyword">in</span> steem.stream_comments():</div><div class="line">  <span class="keyword">if</span> c.is_main_post():</div><div class="line">    <span class="keyword">print</span> (c.meta[<span class="string">"tags"</span>])</div></pre></td></tr></table></figure>
<p><img src="/images/yuxi-steemit.png" alt="@yuxi"></p>
<p>Thank you for reading my post, feel free to FOLLOW and Upvote <a href="https://steemit.com/@yuxi" rel="external nofollow noopener noreferrer" target="_blank">@yuxi</a>, which will motivate me to create more quality posts.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/steem/python-steem.png&quot; alt=&quot;Python &amp;amp; Steem&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-python-3&quot;&gt;&lt;a href=&quot;#Install-python-3&quot; class
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="Linux" scheme="https://www.yuxifan.com/tags/Linux/"/>
    
      <category term="Python" scheme="https://www.yuxifan.com/tags/Python/"/>
    
      <category term="Steem" scheme="https://www.yuxifan.com/tags/Steem/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Steem tutorial 4 - Claim rewards automatically</title>
    <link href="https://www.yuxifan.com/2017/07/28/ruby-steem-4/"/>
    <id>https://www.yuxifan.com/2017/07/28/ruby-steem-4/</id>
    <published>2017-07-28T04:51:12.000Z</published>
    <updated>2017-11-17T21:56:40.710Z</updated>
    
    <content type="html"><![CDATA[<p>In the previous tutorial, we discussed how to get Steem account and post information via radiator, today we will learn how to claim rewards automatically by writing a Ruby program. </p>
<h2 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h2><p>Everytime when the rewards arrive, user need to login and click the “Redeem Rewards (Transfer To Balance)” button to claim. Repeating doing this is very tedious. In this tutorial, we will find a solution to do this job automatically for us.</p>
<p><img src="/images/ruby/steem-rewards.png" alt=""></p>
<h2 id="Write-Ruby-code-to-do-the-job"><a href="#Write-Ruby-code-to-do-the-job" class="headerlink" title="Write Ruby code to do the job"></a>Write Ruby code to do the job</h2><p>In the following code, your private posting key will be needed. </p>
<p>First we need to use Radiator Api to find if there are any rewards available to claim. If yes, Transaction Api can be used to claim the rewards.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"></div><div class="line">user = <span class="string">'yuxi'</span></div><div class="line">pkey = <span class="string">'YOUR_PRIVATE_POSTING_KEY'</span></div><div class="line"></div><div class="line">api = Radiator::Api.new()</div><div class="line">account = api.find_account(user)</div><div class="line">reward_sbd     = account.reward_sbd_balance</div><div class="line">reward_steem   = account.reward_steem_balance</div><div class="line">reward_vesting = account.reward_vesting_balance</div><div class="line"></div><div class="line"><span class="keyword">if</span> reward_sbd!=<span class="string">'0.000 SBD'</span> <span class="keyword">or</span> reward_steem!=<span class="string">'0.000 STEEM'</span> <span class="keyword">or</span> reward_vesting!=<span class="string">'0.000 VESTS'</span></div><div class="line">  tx = Radiator::Transaction.new(<span class="symbol">wif:</span> pkey)</div><div class="line">  claim = &#123;</div><div class="line">    <span class="symbol">type:</span>     <span class="symbol">:claim_reward_balance</span>,</div><div class="line">    <span class="symbol">account:</span>  user</div><div class="line">  &#125;</div><div class="line">  claim[<span class="symbol">:reward_steem</span>] = reward_steem</div><div class="line">  claim[<span class="symbol">:reward_sbd</span>]   = reward_sbd</div><div class="line">  claim[<span class="symbol">:reward_vests</span>] = reward_vesting</div><div class="line">  tx.operations &lt;&lt; claim</div><div class="line">  tx.process(<span class="literal">true</span>)</div><div class="line">  print <span class="string">'Claimed: '</span></div><div class="line">  print reward_steem + <span class="string">' '</span> <span class="keyword">if</span> reward_steem != <span class="string">'0.000 STEEM'</span></div><div class="line">  print reward_sbd + <span class="string">' '</span>   <span class="keyword">if</span> reward_sbd != <span class="string">'0.000 SBD'</span></div><div class="line">  print reward_vesting     <span class="keyword">if</span> reward_vesting !=<span class="string">'0.000 VESTS'</span></div><div class="line">  puts</div><div class="line"><span class="keyword">else</span></div><div class="line">  puts <span class="string">'Nothing to claim.'</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>Now we can test the above Ruby script by running:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby auto_claim.rb</div></pre></td></tr></table></figure>
<p>The output looks like:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Nothing to claim.</div></pre></td></tr></table></figure>
<p>If there are any rewards being claimed, the output looks like:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Claimed: 47.236998 VESTS</div></pre></td></tr></table></figure></p>
<h2 id="Setup-a-cron-job"><a href="#Setup-a-cron-job" class="headerlink" title="Setup a cron job"></a>Setup a cron job</h2><p>To make the scripts automatically run, we can config a cron job, e.g. in Ubuntu OS, just type:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nano /home/yuxi/claim.sh</div></pre></td></tr></table></figure>
<p>Enter the following content:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">ruby /home/yuxi/auto_claim.rb</div></pre></td></tr></table></figure>
<p>Then add the bash script into the cron job list by typing:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">crontab -e</div><div class="line">``` </div><div class="line"></div><div class="line">Add the following link <span class="keyword">in</span> the editor:</div><div class="line"></div><div class="line">```bash</div><div class="line">00 * * * * /home/yuxi/claim.sh &gt;&gt; /home/yuxi/logs/claims.log 2&gt;&amp;1</div></pre></td></tr></table></figure>
<p>Then your script will run every hour automatically to claim all rewards for you. </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In the previous tutorial, we discussed how to get Steem account and post information via radiator, today we will learn how to claim rewar
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="Ubuntu" scheme="https://www.yuxifan.com/tags/Ubuntu/"/>
    
      <category term="Ruby" scheme="https://www.yuxifan.com/tags/Ruby/"/>
    
      <category term="Steem" scheme="https://www.yuxifan.com/tags/Steem/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Steem tutorial 3 - Get Steem posts information</title>
    <link href="https://www.yuxifan.com/2017/07/27/ruby-steem-3/"/>
    <id>https://www.yuxifan.com/2017/07/27/ruby-steem-3/</id>
    <published>2017-07-27T04:51:12.000Z</published>
    <updated>2017-11-16T09:25:14.025Z</updated>
    
    <content type="html"><![CDATA[<p>In the previous tutorial, we discussed how to get Steem account information via radiator, today we will learn how to get Steem post information, e.g. author, votes, pending payouts, also we will see how to vote a post in Ruby program. If you haven’t setup your development environments, please check my <a href="2017/07/25/ruby-steem-1/">first tutorial</a>.</p>
<p><img src="/images/ruby/post.jpg" alt=""></p>
<p>Image credit to: pixabay.com</p>
<h2 id="Read-user’s-most-recent-posts"><a href="#Read-user’s-most-recent-posts" class="headerlink" title="Read user’s most recent posts"></a>Read user’s most recent posts</h2><p>FollowApi class can be used to access posts from a particular user, or from user’s feed. The following code will read a user’s latest three posts.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"></div><div class="line">user = <span class="string">'yuxid'</span></div><div class="line"></div><div class="line">followapi = Radiator::FollowApi.new</div><div class="line"></div><div class="line"><span class="comment"># get latest posts from a particular user</span></div><div class="line">posts = followapi.get_blog_entries(user, -<span class="number">1</span>, <span class="number">3</span>)</div><div class="line"><span class="keyword">for</span> post <span class="keyword">in</span> posts.result</div><div class="line">  puts post.permlink</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Get-latest-posts-from-user’s-feed"><a href="#Get-latest-posts-from-user’s-feed" class="headerlink" title="Get latest posts from user’s feed"></a>Get latest posts from user’s feed</h2><p>FollowApi can be used to get posts from user’s feed as well.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">feeds = followapi.get_feed_entries(user, -<span class="number">1</span>, <span class="number">3</span>)</div><div class="line"><span class="keyword">for</span> feed <span class="keyword">in</span> feeds.result</div><div class="line">  puts <span class="string">'@'</span> + feed.author + <span class="string">'/'</span> + feed.permlink</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Get-posts-by-payout"><a href="#Get-posts-by-payout" class="headerlink" title="Get posts by payout"></a>Get posts by payout</h2><p>We may be interested in the top posts in a particular category. For example, get top 5 posts by payout in utopian-io category:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">dbapi = Radiator::DatabaseApi.new</div><div class="line">posts = dbapi.get_post_discussions_by_payout(&#123;<span class="string">"tag"</span><span class="symbol">:<span class="string">"utopian-io"</span></span>,<span class="string">"limit"</span><span class="symbol">:</span><span class="number">5</span>&#125;)</div><div class="line"><span class="keyword">for</span> post <span class="keyword">in</span> posts.result</div><div class="line">  puts <span class="string">'--------------'</span></div><div class="line">  puts post.author</div><div class="line">  puts post.title</div><div class="line">  puts post.created</div><div class="line">  puts post.pending_payout_value</div><div class="line">  puts post.url</div><div class="line">  puts post.net_votes</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Get-comments-by-payout"><a href="#Get-comments-by-payout" class="headerlink" title="Get comments by payout"></a>Get comments by payout</h2><p>Comments work in the similar way to posts. To get comments by payout in utopian-io category:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">comments = dbapi.get_comment_discussions_by_payout(&#123;<span class="string">"tag"</span><span class="symbol">:<span class="string">"utopian-io"</span></span>,<span class="string">"limit"</span><span class="symbol">:</span><span class="number">5</span>&#125;)</div><div class="line"><span class="keyword">for</span> comment <span class="keyword">in</span> comments.result</div><div class="line">  puts <span class="string">'--------------'</span></div><div class="line">  puts comment.author</div><div class="line">  puts comment.created</div><div class="line">  puts comment.pending_payout_value</div><div class="line">  puts comment.url</div><div class="line">  puts comment.net_votes</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="vote"><a href="#vote" class="headerlink" title="vote"></a>vote</h2><p>To cast a vote to a post, we need to get the private posting key. Replace PRIVATE_POSTING_KEY by your private posting key in the following code:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"></div><div class="line">tx = Radiator::Transaction.new(<span class="symbol">wif:</span> <span class="string">'PRIVATE_POSTING_KEY'</span>)</div><div class="line">vote = &#123;</div><div class="line">  <span class="symbol">type:</span>   <span class="symbol">:vote</span>,</div><div class="line">  <span class="symbol">voter:</span>  <span class="string">'yuxid'</span>,</div><div class="line">  <span class="symbol">author:</span> <span class="string">'elear'</span>,</div><div class="line">  <span class="symbol">permlink:</span> <span class="string">'utopian-the-landing-page-is-finally-out-have-a-look'</span>,</div><div class="line">  <span class="symbol">weight:</span> <span class="number">10000</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">tx.operations &lt;&lt; vote</div><div class="line">tx.process(<span class="literal">true</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In the previous tutorial, we discussed how to get Steem account information via radiator, today we will learn how to get Steem post infor
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="Ubuntu" scheme="https://www.yuxifan.com/tags/Ubuntu/"/>
    
      <category term="Ruby" scheme="https://www.yuxifan.com/tags/Ruby/"/>
    
      <category term="Steem" scheme="https://www.yuxifan.com/tags/Steem/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Steem tutorial 2 - Get Steem account information</title>
    <link href="https://www.yuxifan.com/2017/07/26/ruby-steem-2/"/>
    <id>https://www.yuxifan.com/2017/07/26/ruby-steem-2/</id>
    <published>2017-07-26T04:51:12.000Z</published>
    <updated>2017-11-14T22:37:02.698Z</updated>
    
    <content type="html"><![CDATA[<p>In this tutorial, we will focus on how to get Steem account information via <a href="https://github.com/inertia186/radiator" rel="external nofollow noopener noreferrer" target="_blank">radiator</a>. By using this gem, we can easily get Steem users’ profile, balances, followers etc. If you haven’t setup your development environments, please check my <a href="2017/07/25/ruby-steem-1/">first tutorial</a>. </p>
<p><img src="/images/ruby/account.png" alt=""></p>
<h2 id="Get-basic-account-information"><a href="#Get-basic-account-information" class="headerlink" title="Get basic account information"></a>Get basic account information</h2><p>First, we need to use Api class defined in radiator:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"></div><div class="line">user = ’yuxi’</div><div class="line">api  = Radiator::Api.new</div><div class="line">account = api.find_account(user)</div><div class="line">puts account.name</div><div class="line">puts <span class="string">"Voting power: %.2f"</span> % (account.voting_power/<span class="number">100</span>.to_f)</div></pre></td></tr></table></figure>
<p>User’s reputation needs a bit calculation:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">puts <span class="string">"Reputation:   %.2f"</span> % (Math::log1<span class="number">0</span>(account.reputation.to_f)*<span class="number">9</span>-<span class="number">56</span>)</div></pre></td></tr></table></figure>
<p>Radiator supports alternative nodes in case of the official node becoming unresponsive. Just define a list of alternatives and pass it to Api class as follows:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">options = &#123;</div><div class="line">  <span class="symbol">ur:</span> <span class="string">'https://api.steemit.com'</span>,</div><div class="line">  <span class="symbol">failover_urls:</span> [</div><div class="line">    <span class="string">'https://api.steemitstage.com'</span></div><div class="line">  ]</div><div class="line">&#125;</div><div class="line"></div><div class="line">api = Radiator::Api.new(options)</div></pre></td></tr></table></figure>
<h2 id="Parse-json-metadata"><a href="#Parse-json-metadata" class="headerlink" title="Parse json metadata"></a>Parse json metadata</h2><p>In Steem blockchain, user’s profile is stored in json_metadata. To parse json string, we need to install json gem:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install json</div></pre></td></tr></table></figure>
<p>Now we can parse json_metadata</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'json'</span></div><div class="line"></div><div class="line">api = Radiator::Api.new</div><div class="line"></div><div class="line">j=JSON.parse(account.json_metadata)</div><div class="line">puts j[<span class="string">"profile"</span>][<span class="string">"about"</span>]</div><div class="line">puts j[<span class="string">"profile"</span>][<span class="string">"profile_image"</span>]</div><div class="line">puts j[<span class="string">"profile"</span>][<span class="string">"website"</span>]</div></pre></td></tr></table></figure>
<h2 id="Read-account-balances"><a href="#Read-account-balances" class="headerlink" title="Read account balances"></a>Read account balances</h2><p>With the same account object we have just obtained, STEEM / SBD balances can be accessed: </p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">puts <span class="string">"SBD: %.2f"</span>   % (account.sbd_balance.to_f)</div><div class="line">puts <span class="string">"STEEM: %.2f"</span> % (account.balance.to_f)</div></pre></td></tr></table></figure>
<h2 id="Get-follower-following-information"><a href="#Get-follower-following-information" class="headerlink" title="Get follower / following information"></a>Get follower / following information</h2><p>To access user’s follower / following information, we need to use FollowApi class, which makes call to steem API.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">followapi = Radiator::FollowApi.new</div><div class="line"></div><div class="line">response  = followapi.get_followers(user, <span class="number">0</span>, <span class="string">'blog'</span>, <span class="number">10</span>)</div><div class="line">followers = response.result.map(&amp;<span class="symbol">:follower</span>)</div><div class="line">puts <span class="string">'followers'</span></div><div class="line">puts followers</div><div class="line"></div><div class="line">response  = followapi.get_following(user, <span class="number">0</span>, <span class="string">'blog'</span>, <span class="number">10</span>)</div><div class="line">following = response.result.map(&amp;<span class="symbol">:following</span>)</div><div class="line">puts <span class="string">"\nfollowing"</span></div><div class="line">puts following</div></pre></td></tr></table></figure>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>In this tutorial, we use radiator to get Steem user information, including user’s profile, balances, followers/following. There are much more the radiator API can offer, I would leave it to you to explore. </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In this tutorial, we will focus on how to get Steem account information via &lt;a href=&quot;https://github.com/inertia186/radiator&quot; rel=&quot;externa
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="Ubuntu" scheme="https://www.yuxifan.com/tags/Ubuntu/"/>
    
      <category term="Ruby" scheme="https://www.yuxifan.com/tags/Ruby/"/>
    
      <category term="Steem" scheme="https://www.yuxifan.com/tags/Steem/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Steem tutorial 1 - Setup Ruby development environment for Steem blockchain on Ubuntu 16</title>
    <link href="https://www.yuxifan.com/2017/07/25/ruby-steem-1/"/>
    <id>https://www.yuxifan.com/2017/07/25/ruby-steem-1/</id>
    <published>2017-07-25T04:51:12.000Z</published>
    <updated>2017-11-14T22:16:49.858Z</updated>
    
    <content type="html"><![CDATA[<p>Written by @inertia, Radiator is a Ruby API library for interacting with Steem blockchain network. I will write a series of tutorials to introduce how to use it. Let’s start with the environment setup now.</p>
<p><img src="/images/ruby/ruby.png" alt=""></p>
<h2 id="Install-development-libraries"><a href="#Install-development-libraries" class="headerlink" title="Install development libraries"></a>Install development libraries</h2><p>First, we need to install essential libraries:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get -y update</div><div class="line">sudo apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev</div></pre></td></tr></table></figure>
<h2 id="Install-rbenv"><a href="#Install-rbenv" class="headerlink" title="Install rbenv"></a>Install rbenv</h2><p>If you haven’t heard rbenv yet, I would highly recommend it. It makes your life much easier while managing different versions of Ruby and gems. Here are how to install rbenv:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~</div><div class="line">git <span class="built_in">clone</span> git://github.com/sstephenson/rbenv.git .rbenv</div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$HOME/.rbenv/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</div><div class="line"><span class="built_in">echo</span> <span class="string">'eval "$(rbenv init -)"'</span> &gt;&gt; ~/.bash_profile</div><div class="line">git <span class="built_in">clone</span> git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure>
<h2 id="Install-ruby"><a href="#Install-ruby" class="headerlink" title="Install ruby"></a>Install ruby</h2><p>Now we are ready to install Ruby, let’s use the latest version, e.g. version 2.4.2:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rbenv install -v 2.4.2</div><div class="line">rbenv global 2.4.2</div></pre></td></tr></table></figure>
<p>Now we can run this command to test if Ruby is installed correctly:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby -v</div></pre></td></tr></table></figure>
<h2 id="Install-radiator"><a href="#Install-radiator" class="headerlink" title="Install radiator"></a>Install radiator</h2><p>We are ready to install radiator now, just type command as follows:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install radiator </div><div class="line">rbenv <span class="built_in">rehash</span></div></pre></td></tr></table></figure>
<h2 id="Test-if-it-works"><a href="#Test-if-it-works" class="headerlink" title="Test if it works"></a>Test if it works</h2><p>Now let’s write a script to monitor all transfers in Steem blockchain:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'radiator'</span></div><div class="line"></div><div class="line">stream = Radiator::Stream.new</div><div class="line"></div><div class="line">stream.operations(<span class="symbol">:transfer</span>) <span class="keyword">do</span> <span class="params">|op|</span></div><div class="line">  puts <span class="string">"<span class="subst">#&#123;op.amount&#125;</span>: <span class="subst">#&#123;op.from&#125;</span> -&gt; <span class="subst">#&#123;op.to&#125;</span>"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>The output looks like:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">0.100 STEEM: leyargoz -&gt; steemdice1</div><div class="line">1.400 STEEM: steemdice1 -&gt; jameslano</div><div class="line">0.045 SBD: boomerang -&gt; connecteconomy</div><div class="line">0.196 STEEM: steemdice1 -&gt; leyargoz</div><div class="line">0.001 SBD: boomerang -&gt; crypto-btc</div><div class="line">0.131 SBD: boomerang -&gt; danielsaori</div><div class="line">3.065 SBD: tezmel -&gt; buildawhale</div><div class="line">0.001 SBD: biddle -&gt; null</div><div class="line">0.179 SBD: boomerang -&gt; dhouse</div><div class="line">0.100 SBD: fury123 -&gt; nettybot</div></pre></td></tr></table></figure>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>We have setup Ruby development environments for Steem blockchains. In the following tutorials, we will see how to write interesting programs to interact with Steem blockchain.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Written by @inertia, Radiator is a Ruby API library for interacting with Steem blockchain network. I will write a series of tutorials to 
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="Ubuntu" scheme="https://www.yuxifan.com/tags/Ubuntu/"/>
    
      <category term="Ruby" scheme="https://www.yuxifan.com/tags/Ruby/"/>
    
      <category term="Steem" scheme="https://www.yuxifan.com/tags/Steem/"/>
    
  </entry>
  
  <entry>
    <title>Multi-select facting in Java</title>
    <link href="https://www.yuxifan.com/2017/07/21/multi-select-faceting/"/>
    <id>https://www.yuxifan.com/2017/07/21/multi-select-faceting/</id>
    <published>2017-07-21T21:51:12.000Z</published>
    <updated>2017-07-21T14:47:44.170Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/java/solr.png" alt="Apache Solr"></p>
<h2 id="What-is-multi-select-facting"><a href="#What-is-multi-select-facting" class="headerlink" title="What is multi-select facting?"></a>What is multi-select facting?</h2><p>Multi-select faceting means that users can see and select multiple facet items (facet values) for particular facets. Thanks to Solr’s filter tagging and excluding features to support this type of faceting.</p>
<h2 id="Online-PC-shop-example"><a href="#Online-PC-shop-example" class="headerlink" title="Online PC shop example"></a>Online PC shop example</h2><p>For example, we have 2 facets: memory, and brand. We want to support multi-select faceting because while searching, users may want to choose a range of memory size e.g. 4GB-8GB and a list of interested brands, e.g. Lenovo and HP. </p>
<p>From the initial search of keyword “Home desktop PC”, the result looks like:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">------memory------     ------brand------      </div><div class="line">[  ]  2GB (30)             [  ] Acer (13)</div><div class="line">[  ]  4GB (50)             [  ] HP (20)</div><div class="line">[  ]  8GB (25)             [  ] Lenovo (33)</div><div class="line">[  ]  16GB (10)            [  ] Toshiba (20)</div></pre></td></tr></table></figure>
<p>Then user may want to narrow down the search results by selecting 4GB and 8GB in memory facet,  also HP and Lenovo in the brand facet. </p>
<p>Ideally, after selecting 4GB and 8GB, users expect to see:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">------memory------     ------brand------      </div><div class="line">[ ]  2GB (30)             [  ] Acer (5)</div><div class="line">[x]  4GB (50)             [  ] HP (10)</div><div class="line">[x]  8GB (25)             [  ] Lenovo (13)</div><div class="line">[ ]  16GB (10)            [  ] Toshiba (10)</div></pre></td></tr></table></figure>
<p>You may notice that the numbers after each brand facet item is also changed. That is just because the search results have been narrowed down after first select of “4GB” and “8GB” in memory facet. </p>
<h2 id="Solr-query-to-support-multi-select-faceting"><a href="#Solr-query-to-support-multi-select-faceting" class="headerlink" title="Solr query to support multi-select faceting"></a>Solr query to support multi-select faceting</h2><p>According to <a href="https://wiki.apache.org/solr/SimpleFacetParameters#Multi-Select_Faceting_and_LocalParams" rel="external nofollow noopener noreferrer" target="_blank">solr’s documentation</a>, tagging and excluding filters can be used to perform the multi-select faceting.</p>
<p>The solr query is:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">q=Home%20desktop%20PC&amp;facet=on&amp;facet.field=&#123;!ex=tagmem&#125;&amp;fq=&#123;!tag=tagmem&#125; memory:%28%224GB%208GB%22%29&amp;facet.field=&#123;!ex=tagbrand&#125;&amp;fq=&#123;!tag=tagbrand&#125;brand:%28%22Lenobo%20HP%22%29</div></pre></td></tr></table></figure>
<p>Human readable version (should not send it to Solr in your application):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">q=Home desktop PC&amp;facet=on&amp;facet.field=&#123;!ex=tagmem&#125;&amp;fq=&#123;!tag=tagmem&#125;memory:(<span class="string">"4GB"</span> <span class="string">"8GB"</span>)&amp;facet.field=&#123;!ex=tagbrand&#125;&amp;fq=&#123;!tag=tagbrand&#125;brand:(<span class="string">"Lenobo"</span> <span class="string">"HP"</span>)</div></pre></td></tr></table></figure>
<h2 id="Solrj-implementation"><a href="#Solrj-implementation" class="headerlink" title="Solrj implementation"></a>Solrj implementation</h2><p>For facet:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SolrQuery query = <span class="keyword">new</span> SolrQuery();</div><div class="line">......</div><div class="line">query.addFacetField(<span class="string">"&#123;!ex=tagmem&#125;memory"</span>;</div><div class="line">......</div><div class="line">query.addFacetField(<span class="string">"&#123;!ex=tagbrand&#125;brand"</span>;</div></pre></td></tr></table></figure>
<p>For facet items:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">query.addFilterQuery(<span class="string">"&#123;!tag=tagbrand&#125;brand:"</span>+YOUR_BRAND_FACET_VALUES_FROM_FRONTEND)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      multi-select facting in Java
    
    </summary>
    
      <category term="java" scheme="https://www.yuxifan.com/categories/java/"/>
    
    
      <category term="java" scheme="https://www.yuxifan.com/tags/java/"/>
    
      <category term="solr" scheme="https://www.yuxifan.com/tags/solr/"/>
    
      <category term="faceting" scheme="https://www.yuxifan.com/tags/faceting/"/>
    
  </entry>
  
  <entry>
    <title>Upload via SFTP in Java</title>
    <link href="https://www.yuxifan.com/2017/07/14/upload-via-sftp-in-java/"/>
    <id>https://www.yuxifan.com/2017/07/14/upload-via-sftp-in-java/</id>
    <published>2017-07-14T11:51:12.000Z</published>
    <updated>2017-07-20T08:30:21.552Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/sftp.png" alt=""></p>
<h2 id="1-Add-Maven-dependency"><a href="#1-Add-Maven-dependency" class="headerlink" title="1) Add Maven dependency"></a>1) Add Maven dependency</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jcraft<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1.42<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="2-Java-code"><a href="#2-Java-code" class="headerlink" title="2) Java code"></a>2) Java code</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.Channel;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.ChannelSftp;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.JSch;</div><div class="line"><span class="keyword">import</span> com.jcraft.jsch.Session;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJSftp</span> </span>&#123;</div><div class="line">       </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">upload</span><span class="params">(String username,</span></span></div><div class="line">                              String password,</div><div class="line">                              String host,</div><div class="line">                              <span class="keyword">int</span> port,</div><div class="line">                              String workingDir,</div><div class="line">                              String localFilename)&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            JSch jsch = <span class="keyword">new</span> JSch();</div><div class="line">            Session session = jsch.getSession(username, host, port);</div><div class="line">            session.setPassword(password);</div><div class="line">            java.util.Properties config = <span class="keyword">new</span> java.util.Properties();</div><div class="line">            config.put(<span class="string">"StrictHostKeyChecking"</span>, <span class="string">"no"</span>);</div><div class="line">            session.setConfig(config);</div><div class="line">            session.connect();</div><div class="line">            Channel channel = session.openChannel(<span class="string">"sftp"</span>);</div><div class="line">            channel.connect();</div><div class="line">            ChannelSftp channelSftp = (ChannelSftp) channel;</div><div class="line">            channelSftp.cd(workingDir);</div><div class="line">    </div><div class="line">            File f1 = <span class="keyword">new</span> File(localFilename);</div><div class="line">            channelSftp.put(<span class="keyword">new</span> FileInputStream(f1), f1.getName(), ChannelSftp.OVERWRITE);</div><div class="line">                </div><div class="line">            channelSftp.exit();</div><div class="line">            session.disconnect();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Upload via SFTP in Java
    
    </summary>
    
      <category term="java" scheme="https://www.yuxifan.com/categories/java/"/>
    
    
      <category term="java" scheme="https://www.yuxifan.com/tags/java/"/>
    
      <category term="sftp" scheme="https://www.yuxifan.com/tags/sftp/"/>
    
  </entry>
  
  <entry>
    <title>Implementing Shibboleth login in Rails application</title>
    <link href="https://www.yuxifan.com/2017/07/07/implementing-shibboleth-in-rails/"/>
    <id>https://www.yuxifan.com/2017/07/07/implementing-shibboleth-in-rails/</id>
    <published>2017-07-07T11:51:12.000Z</published>
    <updated>2017-07-07T14:48:09.295Z</updated>
    
    <content type="html"><![CDATA[<p>Further to the basic configuration to <a href="/2017/07/04/configure-shibboleth-service-provider-ubuntu-16/">make Shibboleth working with Apache 2</a>, it’s time to configure Rails application with Shibboleth. You may want to get Phusion Passenger working first, here is the tutorial: <a href="/2017/07/07/phusion-passenger/">Setting up Phusion Passenger with Apache2</a>.</p>
<p><img src="/images/ruby/rails.png" alt="Rails"></p>
<h2 id="0-Environements"><a href="#0-Environements" class="headerlink" title="0) Environements"></a>0) Environements</h2><p>Ubuntu: 16<br>Apache: 2.4.7<br>Ruby: 2.3.1<br>Phusion Passenger: 5.1.5<br>Shibboleth: 2.5.2</p>
<h2 id="1-Configure-Apache2"><a href="#1-Configure-Apache2" class="headerlink" title="1) Configure Apache2"></a>1) Configure Apache2</h2><p>First, edit /etc/apache2/sites-enabled/default-ssl.conf and add:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;Location <span class="string">"/Shibboleth.sso"</span>&gt;</div><div class="line">  Require all granted</div><div class="line">  PassengerEnabled off</div><div class="line">&lt;/Location&gt;</div></pre></td></tr></table></figure>
<p>and</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Location <span class="string">"/users/auth/shibboleth"</span>&gt;</div><div class="line">  AuthType shibboleth</div><div class="line">  ShibRequestSetting requireSession 1</div><div class="line">  require valid-user</div><div class="line">&lt;/Location&gt;</div></pre></td></tr></table></figure>
<p>You may want to comment out the following line in /etc/apache2/apache2.conf, otherwise, you have to grant acess to each individual path.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#&lt;Directory /&gt;</span></div><div class="line"><span class="comment">#       Options FollowSymLinks</span></div><div class="line"><span class="comment">#       AllowOverride None</span></div><div class="line"><span class="comment">#       Require all denied</span></div><div class="line"><span class="comment">#&lt;/Directory&gt;</span></div></pre></td></tr></table></figure>
<h2 id="2-Configure-develop-Rails-application-to-support-Shibooleth"><a href="#2-Configure-develop-Rails-application-to-support-Shibooleth" class="headerlink" title="2) Configure/develop Rails application to support Shibooleth"></a>2) Configure/develop Rails application to support Shibooleth</h2><h3 id="2-1-Add-gem-‘omniauth-shibboleth’-into-Gemfile-and-run"><a href="#2-1-Add-gem-‘omniauth-shibboleth’-into-Gemfile-and-run" class="headerlink" title="2.1) Add gem ‘omniauth-shibboleth’ into Gemfile and run"></a>2.1) Add gem ‘omniauth-shibboleth’ into Gemfile and run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bundle install</div></pre></td></tr></table></figure>
<h3 id="2-2-Edit-config-initializers-devise-rb"><a href="#2-2-Edit-config-initializers-devise-rb" class="headerlink" title="2.2) Edit config/initializers/devise.rb:"></a>2.2) Edit config/initializers/devise.rb:</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">config.omniauth <span class="symbol">:shibboleth</span>, &#123;<span class="symbol">:uid_field</span> =&gt; <span class="string">'eppn'</span>,</div><div class="line">                                <span class="symbol">:info_fields</span> =&gt; &#123;</div><div class="line">                                <span class="symbol">:affiliation</span> =&gt; lambda &#123;<span class="params">|request_param|</span> request_param.call(<span class="string">'unscoped-affiliation'</span>).split(<span class="string">';'</span>)&#125;,</div><div class="line">                                &#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-3-Edit-app-models-user-rb"><a href="#2-3-Edit-app-models-user-rb" class="headerlink" title="2.3) Edit app/models/user.rb"></a>2.3) Edit app/models/user.rb</h3><p>Add method:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">from_omniauth</span><span class="params">(auth)</span></span></div><div class="line">    where(<span class="symbol">provider:</span> auth.provider, <span class="symbol">uid:</span> auth.uid).first_or_create <span class="keyword">do</span> <span class="params">|user|</span></div><div class="line">      user.provider = auth.provider</div><div class="line">      user.uid      = auth.uid</div><div class="line">      user.email    = auth.uid</div><div class="line">      user.password = Devise.friendly_token[<span class="number">0</span>,<span class="number">20</span>]</div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>Also add :omniauthable to declaration in user.rb</p>
<h3 id="2-4-Add-a-controller-e-g-app-controllers-omniauthcallbacks-controller-rb"><a href="#2-4-Add-a-controller-e-g-app-controllers-omniauthcallbacks-controller-rb" class="headerlink" title="2.4) Add a controller, e.g. app/controllers/omniauthcallbacks_controller.rb"></a>2.4) Add a controller, e.g. app/controllers/omniauthcallbacks_controller.rb</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OmniauthcallbacksController</span> &lt; Devise::OmniauthCallbacksController</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">shibboleth</span></span></div><div class="line">    @user = User.from_omniauth(request.env[<span class="string">"omniauth.auth"</span>])</div><div class="line">    session[<span class="string">'shib_user_data'</span>] = request.env[<span class="string">"omniauth.auth"</span>]</div><div class="line">    sign_in_and_redirect @user</div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">failure</span></span></div><div class="line">    redirect_to new_local_user_session_path, <span class="symbol">:notice</span> =&gt; <span class="string">"Cannot login via Shibboleth - redirect to local login ..."</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h3 id="2-5-edit-config-routes-rb"><a href="#2-5-edit-config-routes-rb" class="headerlink" title="2.5) edit config/routes.rb"></a>2.5) edit config/routes.rb</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devise_for <span class="symbol">:users</span>, <span class="symbol">:controllers</span> =&gt; &#123; <span class="symbol">:omniauth_callbacks</span> =&gt; <span class="string">"omniauthcallbacks"</span> &#125;, <span class="symbol">:skip</span> =&gt; [<span class="symbol">:sessions</span>]</div></pre></td></tr></table></figure>
<p>Run:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rails g migration AddColumnsToUsers provider uid</div><div class="line">rake db:migrate</div></pre></td></tr></table></figure></p>
<h3 id="2-6-edit-routes-rb-and-add"><a href="#2-6-edit-routes-rb-and-add" class="headerlink" title="2.6) edit routes.rb and add:"></a>2.6) edit routes.rb and add:</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">devise_scope <span class="symbol">:user</span> <span class="keyword">do</span></div><div class="line">    match <span class="string">"/users/auth/shibboleth"</span> =&gt; <span class="string">"omniauth_callbacks#passthru"</span>, <span class="symbol">as:</span> <span class="string">"new_user_session"</span>,       <span class="symbol">via:</span> [<span class="symbol">:get</span>]</div><div class="line">    match <span class="string">"/users/sign_in"</span>         =&gt; <span class="string">"devise/sessions#new"</span>,         <span class="symbol">as:</span> <span class="string">"new_local_user_session"</span>, <span class="symbol">via:</span> [<span class="symbol">:get</span>]</div><div class="line">    match <span class="string">"/users/sign_in"</span>         =&gt; <span class="string">"devise/sessions#create"</span>,      <span class="symbol">as:</span> <span class="string">"user_session"</span>,           <span class="symbol">via:</span> [<span class="symbol">:post</span>]</div><div class="line">    match <span class="string">"/users/sign_out"</span>        =&gt; <span class="string">"devise/sessions#destroy"</span>,     <span class="symbol">as:</span> <span class="string">"destroy_user_session"</span>,   <span class="symbol">via:</span> [<span class="symbol">:get</span>]</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Further to the basic configuration to &lt;a href=&quot;/2017/07/04/configure-shibboleth-service-provider-ubuntu-16/&quot;&gt;make Shibboleth working with
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="rails" scheme="https://www.yuxifan.com/tags/rails/"/>
    
      <category term="shibboleth" scheme="https://www.yuxifan.com/tags/shibboleth/"/>
    
      <category term="passenger" scheme="https://www.yuxifan.com/tags/passenger/"/>
    
  </entry>
  
  <entry>
    <title>Setting up Phusion Passenger with Apache 2.4 on Ubuntu</title>
    <link href="https://www.yuxifan.com/2017/07/07/phusion-passenger/"/>
    <id>https://www.yuxifan.com/2017/07/07/phusion-passenger/</id>
    <published>2017-07-07T08:51:12.000Z</published>
    <updated>2017-07-07T10:55:12.189Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/phusion-passenger.jpg" alt="Phusion Passenger"></p>
<h2 id="Install-Apache-2"><a href="#Install-Apache-2" class="headerlink" title="Install Apache 2"></a>Install Apache 2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install apache2</div><div class="line">sudo a2enmod headers</div><div class="line">sudo a2enmod expires</div></pre></td></tr></table></figure>
<h2 id="Configure-Apache-SSL"><a href="#Configure-Apache-SSL" class="headerlink" title="Configure Apache SSL"></a>Configure Apache SSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo a2enmod ssl</div><div class="line">sudo a2ensite default-ssl.conf</div><div class="line">sudo mkdir /etc/apache2/ssl</div><div class="line">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt</div></pre></td></tr></table></figure>
<h2 id="Install-Phusion-Passenger"><a href="#Install-Phusion-Passenger" class="headerlink" title="Install Phusion Passenger"></a>Install Phusion Passenger</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install passenger</div><div class="line">passenger-install-apache2-module</div></pre></td></tr></table></figure>
<p>Follow on screen instructions, so the apache configuration file /etc/apache2/apache2.conf looks like:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">LoadModule passenger_module /home/yuxi/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/passenger-5.1.5/buildout/apache2/mod_passenger.so</div><div class="line">&lt;IfModule mod_passenger.c&gt;</div><div class="line">     PassengerRoot /home/yuxi/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/passenger-5.1.5</div><div class="line">     PassengerDefaultRuby /home/yuxi/.rbenv/versions/2.3.1/bin/ruby</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure>
<h2 id="Configure-Rails-application-in-Apache-2-x"><a href="#Configure-Rails-application-in-Apache-2-x" class="headerlink" title="Configure Rails application in Apache 2.x"></a>Configure Rails application in Apache 2.x</h2><p>Edit /etc/apache2/sites-enabled/default-ssl.conf:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;IfModule mod_ssl.c&gt;</div><div class="line">  &lt;VirtualHost _default_:443&gt;</div><div class="line">    ServerAdmin info@yuxifan.com</div><div class="line">    ServerName localhost</div><div class="line"></div><div class="line">    SSLEngine on</div><div class="line">    SSLCertificateFile /etc/apache2/ssl/apache.crt</div><div class="line">    SSLCertificateKeyFile /etc/apache2/ssl/apache.key</div><div class="line"></div><div class="line">    RailsEnv production</div><div class="line">    RailsBaseURI /</div><div class="line"></div><div class="line">    Alias / /home/yuxi/rails_app/public</div><div class="line">    &lt;Location /&gt;</div><div class="line">      PassengerBaseURI /</div><div class="line">      PassengerAppRoot /home/yuxi/rails_app</div><div class="line">    &lt;/Location&gt;</div><div class="line">    &lt;Directory /home/yuxi/rails_app/public&gt;</div><div class="line">      Require all granted</div><div class="line">      AllowOverride None</div><div class="line">      Options -MultiViews +FollowSymLinks</div><div class="line">      Require all granted</div><div class="line">    &lt;/Directory&gt;</div><div class="line"></div><div class="line">    &lt;Location /assets/&gt;</div><div class="line">      Require all granted</div><div class="line">      Header <span class="built_in">unset</span> ETag</div><div class="line">      FileETag None</div><div class="line">      ExpiresActive On</div><div class="line">      ExpiresDefault <span class="string">"access plus 1 year"</span></div><div class="line">    &lt;/Location&gt;</div><div class="line">  &lt;/VirtualHost&gt;</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure>
<h2 id="Configurations-within-Rails-application"><a href="#Configurations-within-Rails-application" class="headerlink" title="Configurations within Rails application"></a>Configurations within Rails application</h2><p>Generate assets for production:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rake assets:precompile RAILS_ENV=production</div></pre></td></tr></table></figure>
<p>Edit config/environments/production.rb, make sure:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.public_file_server.enabled = <span class="literal">true</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/phusion-passenger.jpg&quot; alt=&quot;Phusion Passenger&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-Apache-2&quot;&gt;&lt;a href=&quot;#Install-Apache-2&quot; class=&quot;h
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="ubuntu" scheme="https://www.yuxifan.com/tags/ubuntu/"/>
    
      <category term="Phusion Passenger" scheme="https://www.yuxifan.com/tags/Phusion-Passenger/"/>
    
      <category term="Rails" scheme="https://www.yuxifan.com/tags/Rails/"/>
    
      <category term="Apache" scheme="https://www.yuxifan.com/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>Setting up Ruby development environments</title>
    <link href="https://www.yuxifan.com/2017/07/06/setting-up-ruby-development-environments/"/>
    <id>https://www.yuxifan.com/2017/07/06/setting-up-ruby-development-environments/</id>
    <published>2017-07-06T08:51:12.000Z</published>
    <updated>2017-07-07T12:44:32.957Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ruby/ruby.png" alt="Ruby"></p>
<h2 id="Install-development-libraries"><a href="#Install-development-libraries" class="headerlink" title="Install development libraries"></a>Install development libraries</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get -y update</div><div class="line">sudo apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev</div></pre></td></tr></table></figure>
<h2 id="Install-rbenv"><a href="#Install-rbenv" class="headerlink" title="Install rbenv"></a>Install rbenv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~</div><div class="line">git <span class="built_in">clone</span> git://github.com/sstephenson/rbenv.git .rbenv                        </div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$HOME/.rbenv/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</div><div class="line"><span class="built_in">echo</span> <span class="string">'eval "$(rbenv init -)"'</span> &gt;&gt; ~/.bash_profile</div><div class="line">git <span class="built_in">clone</span> git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure>
<h2 id="Install-ruby"><a href="#Install-ruby" class="headerlink" title="Install ruby"></a>Install ruby</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rbenv install -v 2.3.1</div><div class="line">rbenv global 2.3.1</div><div class="line">ruby -v</div></pre></td></tr></table></figure>
<h2 id="Install-gems"><a href="#Install-gems" class="headerlink" title="Install gems"></a>Install gems</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gem install bundler</div><div class="line">gem install nokogiri</div><div class="line">gem install rails</div><div class="line">rbenv <span class="built_in">rehash</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ruby/ruby.png&quot; alt=&quot;Ruby&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-development-libraries&quot;&gt;&lt;a href=&quot;#Install-development-libraries&quot; class=&quot;h
    
    </summary>
    
      <category term="ruby" scheme="https://www.yuxifan.com/categories/ruby/"/>
    
    
      <category term="Ruby" scheme="https://www.yuxifan.com/tags/Ruby/"/>
    
      <category term="rbenv" scheme="https://www.yuxifan.com/tags/rbenv/"/>
    
  </entry>
  
  <entry>
    <title>Configure Shibboleth Service Provider on Ubuntu 16</title>
    <link href="https://www.yuxifan.com/2017/07/04/configure-shibboleth-service-provider-ubuntu-16/"/>
    <id>https://www.yuxifan.com/2017/07/04/configure-shibboleth-service-provider-ubuntu-16/</id>
    <published>2017-07-04T08:51:12.000Z</published>
    <updated>2017-07-13T15:31:57.631Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/shibboleth.png" alt="Shibboleth"></p>
<h2 id="Environments"><a href="#Environments" class="headerlink" title="Environments"></a>Environments</h2><p>Ubuntu 16<br>Apache 2<br>Shibboleth 2</p>
<h2 id="Get-Apache-ready-for-Shibboleth"><a href="#Get-Apache-ready-for-Shibboleth" class="headerlink" title="Get Apache ready for Shibboleth"></a>Get Apache ready for Shibboleth</h2><p>Make sure Apache is installed, otherwise, run:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install apache2</div></pre></td></tr></table></figure>
<p>Enable ssl:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo a2enmod ssl</div></pre></td></tr></table></figure>
<p>Activate the SSL Virtual Host:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo a2ensite default-ssl.conf</div></pre></td></tr></table></figure>
<p>Creating a self-signed SSL certificate:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/apache2/ssl</div><div class="line">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt</div></pre></td></tr></table></figure>
<h2 id="Add-Shibboleth-protected-application-service-for-testing"><a href="#Add-Shibboleth-protected-application-service-for-testing" class="headerlink" title="Add Shibboleth protected application/service for testing"></a>Add Shibboleth protected application/service for testing</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/www/myservice</div></pre></td></tr></table></figure>
<p>Create index page:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /var/www/myservice/index.html</div></pre></td></tr></table></figure></p>
<p>Add content to index.html, e.g. </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">Shibboleth protected service</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Install-Shibboleth"><a href="#Install-Shibboleth" class="headerlink" title="Install Shibboleth"></a>Install Shibboleth</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libapache2-mod-shib2</div><div class="line">sudo a2enmod auth_basic</div><div class="line">sudo a2enmod shib2</div></pre></td></tr></table></figure>
<p>Set up a Shibboleth certificate: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo shib-keygen -h localhost</div></pre></td></tr></table></figure>
<p>Check certificate:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl x509 -text -noout -<span class="keyword">in</span> /etc/shibboleth/sp-cert.pem</div></pre></td></tr></table></figure>
<p>Edit /etc/shibboleth/shibboleth2.xml. Make sure <strong>backup the original file</strong> before editing!</p>
<p>Actually, by providing the hostname, testshib.org can generate a sample configuration, e.g. shibboleth2.xml for you automatically at:</p>
<p><a href="https://www.testshib.org/configure.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.testshib.org/configure.html</a> </p>
<p>Sample content below:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">SPConfig</span> <span class="attr">xmlns</span>=<span class="string">"urn:mace:shibboleth:2.0:native:sp:config"</span> <span class="attr">xmlns:md</span>=<span class="string">"urn:oasis:names:tc:SAML:2.0:metadata"</span> <span class="attr">clockSkew</span>=<span class="string">"1800"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ApplicationDefaults</span> <span class="attr">entityID</span>=<span class="string">"https://localhost/shibboleth"</span> <span class="attr">REMOTE_USER</span>=<span class="string">"eppn"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Sessions</span> <span class="attr">lifetime</span>=<span class="string">"28800"</span> <span class="attr">timeout</span>=<span class="string">"3600"</span> <span class="attr">checkAddress</span>=<span class="string">"false"</span> <span class="attr">relayState</span>=<span class="string">"ss:mem"</span> <span class="attr">handlerSSL</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">SSO</span> <span class="attr">entityID</span>=<span class="string">"https://idp.testshib.org/idp/shibboleth"</span>&gt;</span> SAML2 SAML1 <span class="tag">&lt;/<span class="name">SSO</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Logout</span>&gt;</span>SAML2 Local<span class="tag">&lt;/<span class="name">Logout</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Handler</span> <span class="attr">type</span>=<span class="string">"MetadataGenerator"</span> <span class="attr">Location</span>=<span class="string">"/Metadata"</span> <span class="attr">signing</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Handler</span> <span class="attr">type</span>=<span class="string">"Status"</span> <span class="attr">Location</span>=<span class="string">"/Status"</span> <span class="attr">acl</span>=<span class="string">"127.0.0.1 ::1"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Handler</span> <span class="attr">type</span>=<span class="string">"Session"</span> <span class="attr">Location</span>=<span class="string">"/Session"</span> <span class="attr">showAttributeValues</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Handler</span> <span class="attr">type</span>=<span class="string">"DiscoveryFeed"</span> <span class="attr">Location</span>=<span class="string">"/DiscoFeed"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Sessions</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Errors</span> <span class="attr">supportContact</span>=<span class="string">"root@localhost"</span> <span class="attr">logoLocation</span>=<span class="string">"/shibboleth-sp/logo.jpg"</span> <span class="attr">styleSheet</span>=<span class="string">"/shibboleth-sp/main.css"</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">MetadataProvider</span> <span class="attr">type</span>=<span class="string">"XML"</span> <span class="attr">uri</span>=<span class="string">"http://www.testshib.org/metadata/testshib-providers.xml"</span> <span class="attr">backingFilePath</span>=<span class="string">"testshib-two-idp-metadata.xml"</span> <span class="attr">reloadInterval</span>=<span class="string">"180000"</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">AttributeExtractor</span> <span class="attr">type</span>=<span class="string">"XML"</span> <span class="attr">validate</span>=<span class="string">"true"</span> <span class="attr">path</span>=<span class="string">"attribute-map.xml"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">AttributeResolver</span> <span class="attr">type</span>=<span class="string">"Query"</span> <span class="attr">subjectMatch</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">AttributeFilter</span> <span class="attr">type</span>=<span class="string">"XML"</span> <span class="attr">validate</span>=<span class="string">"true"</span> <span class="attr">path</span>=<span class="string">"attribute-policy.xml"</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">CredentialResolver</span> <span class="attr">type</span>=<span class="string">"File"</span> <span class="attr">key</span>=<span class="string">"sp-key.pem"</span> <span class="attr">certificate</span>=<span class="string">"sp-cert.pem"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ApplicationDefaults</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">SecurityPolicyProvider</span> <span class="attr">type</span>=<span class="string">"XML"</span> <span class="attr">validate</span>=<span class="string">"true"</span> <span class="attr">path</span>=<span class="string">"security-policy.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ProtocolProvider</span> <span class="attr">type</span>=<span class="string">"XML"</span> <span class="attr">validate</span>=<span class="string">"true"</span> <span class="attr">reloadChanges</span>=<span class="string">"false"</span> <span class="attr">path</span>=<span class="string">"protocols.xml"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">SPConfig</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Add-protected-service-into-Apache-configuration"><a href="#Add-protected-service-into-Apache-configuration" class="headerlink" title="Add protected service into Apache configuration"></a>Add protected service into Apache configuration</h2><p>Edit /etc/apache2/sites-available/default-ssl.conf with content:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;IfModule mod_ssl.c&gt;</div><div class="line">        &lt;VirtualHost _default_:443&gt;</div><div class="line">                ServerAdmin info@yuxifan.com</div><div class="line">                ServerName localhost</div><div class="line">                DocumentRoot /var/www/html</div><div class="line"></div><div class="line">                ErrorLog <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</div><div class="line">                CustomLog <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</div><div class="line">                SSLEngine on</div><div class="line">                SSLCertificateFile /etc/apache2/ssl/apache.crt</div><div class="line">                SSLCertificateKeyFile /etc/apache2/ssl/apache.key</div><div class="line"></div><div class="line">                &lt;FilesMatch <span class="string">"\.(cgi|shtml|phtml|php)$"</span>&gt;</div><div class="line">                                SSLOptions +StdEnvVars</div><div class="line">                &lt;/FilesMatch&gt;</div><div class="line">                &lt;Directory /usr/lib/cgi-bin&gt;</div><div class="line">                                SSLOptions +StdEnvVars</div><div class="line">                &lt;/Directory&gt;</div><div class="line"></div><div class="line">                BrowserMatch <span class="string">"MSIE [2-6]"</span> \</div><div class="line">                                nokeepalive ssl-unclean-shutdown \</div><div class="line">                                downgrade-1.0 force-response-1.0</div><div class="line">                BrowserMatch <span class="string">"MSIE [17-9]"</span> ssl-unclean-shutdown</div><div class="line"></div><div class="line">               Alias /myservice/ /var/www/myservice/</div><div class="line">              &lt;Location /myservice/&gt;</div><div class="line">                     AuthType shibboleth</div><div class="line">                     ShibRequestSetting requireSession 1</div><div class="line">                     Require valid-user</div><div class="line">              &lt;/Location&gt;</div><div class="line"></div><div class="line">        &lt;/VirtualHost&gt;</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure>
<h2 id="Start-Shibboleth-service"><a href="#Start-Shibboleth-service" class="headerlink" title="Start Shibboleth service"></a>Start Shibboleth service</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service shibd start</div></pre></td></tr></table></figure>
<p>You may want to enable Shibboleth at startup:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl <span class="built_in">enable</span> shibd</div></pre></td></tr></table></figure>
<p>Test Shibboleth SP:<br><a href="https://localhost/Shibboleth.sso/DiscoFeed" rel="external nofollow noopener noreferrer" target="_blank">https://localhost/Shibboleth.sso/DiscoFeed</a></p>
<p>Download Metadata:<br><a href="https://FQDN/Shibboleth.sso/Metadata" rel="external nofollow noopener noreferrer" target="_blank">https://FQDN/Shibboleth.sso/Metadata</a></p>
<p>NB: Status page may <strong>NOT</strong> work, e.g. <a href="https://localhost/Shibboleth.sso/Status" rel="external nofollow noopener noreferrer" target="_blank">https://localhost/Shibboleth.sso/Status</a> may returns 403 Error.</p>
<p>Now accessing <a href="https://localhost/myservice/" rel="external nofollow noopener noreferrer" target="_blank">https://localhost/myservice/</a> will redirect you to testshib site.</p>
<p>Upload SP metadata on <a href="https://www.testshib.org/register.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.testshib.org/register.html</a></p>
<p>Now you should be redirected to TestShib login page. </p>
<p>Enter the default name/password and you will be redirected back to your secure service page, e.g. /myservice/index.html (/var/www/myservice/index.html)</p>
<h2 id="Further-configuration"><a href="#Further-configuration" class="headerlink" title="Further configuration"></a>Further configuration</h2><p>Allow access only to users from www.XYZ.com (On Apache 2.4)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Location /myservice/&gt;</div><div class="line">        AuthType shibboleth</div><div class="line">        ShibRequestSetting requireSession 1</div><div class="line">        Require shib-attr affiliation ~ ^.+@www\.XYZ\.com$</div><div class="line">&lt;/Location&gt;</div></pre></td></tr></table></figure>
<p>Allow access to specified user</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Location /myservice/&gt;</div><div class="line">        AuthType shibboleth</div><div class="line">        ShibRequestSetting requireSession 1</div><div class="line">        Require user xxxx@XYZ.com</div><div class="line">&lt;/Location&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/shibboleth.png&quot; alt=&quot;Shibboleth&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Environments&quot;&gt;&lt;a href=&quot;#Environments&quot; class=&quot;headerlink&quot; title=&quot;Env
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://www.yuxifan.com/tags/ubuntu/"/>
    
      <category term="shibboleth" scheme="https://www.yuxifan.com/tags/shibboleth/"/>
    
  </entry>
  
  <entry>
    <title>GraphicsMagick</title>
    <link href="https://www.yuxifan.com/2017/06/28/graphicsmagick/"/>
    <id>https://www.yuxifan.com/2017/06/28/graphicsmagick/</id>
    <published>2017-06-28T01:10:12.000Z</published>
    <updated>2017-06-28T10:22:44.373Z</updated>
    
    <content type="html"><![CDATA[<p>GraphicsMagick is originally derived from ImageMagick 5.5.2 as of November 2002 but has been completely independent of the ImageMagick project since then. As states in <a href="http://www.graphicsmagick.org/index.html" rel="external nofollow noopener noreferrer" target="_blank">GraphicsMagick’s website</a>: GraphicsMagick is better than ImageMagick.</p>
<p><img src="/images/linux/graphicsmagick.jpg" alt="GraphicsMagick"></p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install graphicsmagick</div></pre></td></tr></table></figure>
<h2 id="Identify-images"><a href="#Identify-images" class="headerlink" title="Identify images"></a>Identify images</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm identify filename.jpg</div></pre></td></tr></table></figure>
<p>Identify image height only:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm identify -format %h filename.jpg</div></pre></td></tr></table></figure></p>
<p>Identify image and output filename, size, height, and width:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm identify -format %f/%b/%h/%w filename.jpg</div></pre></td></tr></table></figure></p>
<h2 id="Resize-images"><a href="#Resize-images" class="headerlink" title="Resize images"></a>Resize images</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gm convert -monitor -resize 50% source.jpg target.jpg</div><div class="line">gm convert -monitor -resize 600x source.jpg target.jpg</div></pre></td></tr></table></figure>
<h2 id="Convert"><a href="#Convert" class="headerlink" title="Convert"></a>Convert</h2><p>To convert a multi-page PostScript document to individual FAX pages:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm convert -monochrome document.ps fax:page</div></pre></td></tr></table></figure></p>
<h2 id="Rotating-Images"><a href="#Rotating-Images" class="headerlink" title="Rotating Images"></a>Rotating Images</h2><h3 id="Clockwise-Rotation"><a href="#Clockwise-Rotation" class="headerlink" title="Clockwise Rotation"></a>Clockwise Rotation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm convert -monitor rotate 45 source.jpg target.jpg</div></pre></td></tr></table></figure>
<h3 id="Anti-clockwise-Rotation"><a href="#Anti-clockwise-Rotation" class="headerlink" title="Anti-clockwise Rotation"></a>Anti-clockwise Rotation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gm convert -monitor rotate -45 source.jpg target.jpg</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GraphicsMagick is originally derived from ImageMagick 5.5.2 as of November 2002 but has been completely independent of the ImageMagick pr
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.yuxifan.com/tags/linux/"/>
    
      <category term="ImageMagick" scheme="https://www.yuxifan.com/tags/ImageMagick/"/>
    
      <category term="GraphicsMagick" scheme="https://www.yuxifan.com/tags/GraphicsMagick/"/>
    
  </entry>
  
  <entry>
    <title>How to remove ads from Android screen while charging?</title>
    <link href="https://www.yuxifan.com/2017/05/09/how-to-remove-ads-from-android-charging-screen/"/>
    <id>https://www.yuxifan.com/2017/05/09/how-to-remove-ads-from-android-charging-screen/</id>
    <published>2017-05-09T20:51:12.000Z</published>
    <updated>2017-06-16T10:17:52.230Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/mobile/android-charging-screen-ads.jpg" alt="Android lock screen ads"></p>
<p>Recently a large number of users have been complaining that while charging their Android phone, instead of just showing date, time, battery status, the screen also shows advertisements. </p>
<p>While googling the solution for it, lots of posts are saying it is caused by some particular APPs and from the list they provided, non of them worked for me. Here is the solution I finially found - so simple!</p>
<p>Just click the dots/gear on the top right corner of the screen, as shown in the screen shot above, then click ‘turn off’. that is it!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/mobile/android-charging-screen-ads.jpg&quot; alt=&quot;Android lock screen ads&quot;&gt;&lt;/p&gt;
&lt;p&gt;Recently a large number of users have bee
    
    </summary>
    
      <category term="mobile" scheme="https://www.yuxifan.com/categories/mobile/"/>
    
    
      <category term="ads" scheme="https://www.yuxifan.com/tags/ads/"/>
    
  </entry>
  
  <entry>
    <title>Install Android Nougat into Samsung Galaxy S5 step by step</title>
    <link href="https://www.yuxifan.com/2017/05/04/install-android-nougat-into-galaxy-s5/"/>
    <id>https://www.yuxifan.com/2017/05/04/install-android-nougat-into-galaxy-s5/</id>
    <published>2017-05-04T20:51:12.000Z</published>
    <updated>2017-06-16T10:17:52.230Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/mobile/s5/android-nougat.jpg" alt="Android Nougat"></p>
<h2 id="1-Install-Odin-to-Windows-PC"><a href="#1-Install-Odin-to-Windows-PC" class="headerlink" title="1) Install Odin to Windows PC"></a>1) Install Odin to Windows PC</h2><p>Download Odin from: <a href="http://odindownload.com/SamsungOdin/" rel="external nofollow noopener noreferrer" target="_blank">http://odindownload.com/SamsungOdin/</a></p>
<p>Extract download Odin zip file to Windows PC, then double click app to run it:</p>
<p><img src="/images/mobile/s5/odin.jpg" alt="Install odin"></p>
<h2 id="2-Install-TWRP"><a href="#2-Install-TWRP" class="headerlink" title="2) Install TWRP"></a>2) Install TWRP</h2><p>Download TWRP to your PC from: <a href="https://twrp.me/" rel="external nofollow noopener noreferrer" target="_blank">https://twrp.me/</a></p>
<p><img src="/images/mobile/s5/odin-2.jpg" alt="Install TWRP in odin"></p>
<p>Switch off your phone and press Volume up + Home + Power to Download mode. Connect your phone to PC via USB cable, then Odin should detect your phone. Now press ‘Start’ to flash TWRP to your phone.</p>
<p>Power off your phone. </p>
<h2 id="3-Install-Cyanogenmod-14-1-and-GAPPS-7-1"><a href="#3-Install-Cyanogenmod-14-1-and-GAPPS-7-1" class="headerlink" title="3) Install Cyanogenmod 14.1 and GAPPS 7.1"></a>3) Install Cyanogenmod 14.1 and GAPPS 7.1</h2><p>Download Cyanogenmod(CM) 14.1 from: <a href="http://mirror41.download.highonandroid.com/download/CM14.1/GalaxyS5/" rel="external nofollow noopener noreferrer" target="_blank">http://mirror41.download.highonandroid.com/download/CM14.1/GalaxyS5/</a><br>Download GAPPS 7.1 from: <a href="http://opengapps.org/" rel="external nofollow noopener noreferrer" target="_blank">http://opengapps.org/</a></p>
<p><strong>NB</strong>: I have tried the recommended version of GAPPS, e.g. ‘stock’ but it won’t work in my phone and gives me “Unfortunately, Google Play Services has stopped “ error. When I switched to the minimal version, e.g. ‘pico’, it works fine.</p>
<p>Copy downloaded GAPPS and Cyanogenmod zip files into your phone’s SD card. </p>
<p>Now press Volume up + Home + Power to enter TWRP screen. Then Wipe your phone and install from Cyanogenmod and GAPPS zip files. </p>
<p>Restart your phone and it’s ready to use!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/mobile/s5/android-nougat.jpg&quot; alt=&quot;Android Nougat&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Install-Odin-to-Windows-PC&quot;&gt;&lt;a href=&quot;#1-Install-Odin-
    
    </summary>
    
      <category term="mobile" scheme="https://www.yuxifan.com/categories/mobile/"/>
    
    
      <category term="odin" scheme="https://www.yuxifan.com/tags/odin/"/>
    
      <category term="twrp" scheme="https://www.yuxifan.com/tags/twrp/"/>
    
      <category term="cyanogenmod" scheme="https://www.yuxifan.com/tags/cyanogenmod/"/>
    
      <category term="gapps" scheme="https://www.yuxifan.com/tags/gapps/"/>
    
      <category term="samsung" scheme="https://www.yuxifan.com/tags/samsung/"/>
    
  </entry>
  
  <entry>
    <title>Host multiple domains in Nginx</title>
    <link href="https://www.yuxifan.com/2017/03/14/suppport-multiple-domains-in-nginx/"/>
    <id>https://www.yuxifan.com/2017/03/14/suppport-multiple-domains-in-nginx/</id>
    <published>2017-03-14T05:51:12.000Z</published>
    <updated>2017-06-16T10:17:52.230Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/linux/nginx.jpg" alt="Host multiple domains in Nginx"></p>
<p>By default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents at /var/www/html.</p>
<p>To serve multiple sites/domains. We need to do the following:</p>
<h2 id="Create-directories"><a href="#Create-directories" class="headerlink" title="Create directories"></a>Create directories</h2><p>We need to create these directories for each of our domains:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /var/www/DOMAIN-1.com/html</div><div class="line">sudo mkdir -p /var/www/DOMAIN-2.com/html</div><div class="line"></div><div class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /var/www/DOMAIN-1.com/html</div><div class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /var/www/DOMAIN-2.com/html</div></pre></td></tr></table></figure>
<h2 id="Create-Server-Block-Files-for-Each-Domain"><a href="#Create-Server-Block-Files-for-Each-Domain" class="headerlink" title="Create Server Block Files for Each Domain"></a>Create Server Block Files for Each Domain</h2><p>File: /etc/nginx/sites-available/DOMAIN-1.com</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        listen [::]:80;</div><div class="line"></div><div class="line">        root /var/www/DOMAIN-1/html;</div><div class="line"></div><div class="line">        index index.html index.htm;</div><div class="line"></div><div class="line">        server_name www.DOMAIN-1.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>File: /etc/nginx/sites-available/DOMAIN-2.com</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        listen [::]:80;</div><div class="line"></div><div class="line">        root /var/www/DOMAIN-2/html;</div><div class="line"></div><div class="line">        index index.html index.htm;</div><div class="line"></div><div class="line">        server_name www.DOMAIN-2.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Run:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /etc/nginx/sites-available/DOMAIN-1.com /etc/nginx/sites-enabled/</div><div class="line">sudo ln -s /etc/nginx/sites-available/DOMAIN-2.com /etc/nginx/sites-enabled/</div></pre></td></tr></table></figure></p>
<p>In order to avoid a possible hash bucket memory problem while adding additional server names, modify /etc/nginx/nginx.conf. </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<p>Uncomment this line:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_names_hash_bucket_size 64;</div></pre></td></tr></table></figure>
<p>Test:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -t</div></pre></td></tr></table></figure></p>
<p>Restart Nginx:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl restart nginx</div></pre></td></tr></table></figure></p>
<h2 id="Add-hosts"><a href="#Add-hosts" class="headerlink" title="Add hosts"></a>Add hosts</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/hosts</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">YOUR_IP www.DOMAIN-1.com</div><div class="line">YOUR_IP www.DOMAIN-2.com</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/linux/nginx.jpg&quot; alt=&quot;Host multiple domains in Nginx&quot;&gt;&lt;/p&gt;
&lt;p&gt;By default, Nginx on Ubuntu 16.04 has one server block en
    
    </summary>
    
      <category term="linux" scheme="https://www.yuxifan.com/categories/linux/"/>
    
    
      <category term="Linux" scheme="https://www.yuxifan.com/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://www.yuxifan.com/tags/Nginx/"/>
    
      <category term="Ubuntu" scheme="https://www.yuxifan.com/tags/Ubuntu/"/>
    
  </entry>
  
</feed>
