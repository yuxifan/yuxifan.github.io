{"meta":{"title":"Yuxi Fan","subtitle":"Yuxi's development blog","description":"Yuxi's development blog, Java, Ruby, Rails, Web, Linux, Puppet, Git","author":"Yuxi","url":"https://www.yuxifan.com"},"pages":[{"title":"","date":"2017-09-14T14:54:31.782Z","updated":"2017-09-14T14:54:31.782Z","comments":true,"path":"404.html","permalink":"https://www.yuxifan.com/404.html","excerpt":"","text":"Sorry, the page you are visiting doesnot exist!"}],"posts":[{"title":"How to use HTML5 clipboard API to paste image in HTML","slug":"paste-image-by-using-html5-clipboard-api","date":"2017-09-07T01:10:12.000Z","updated":"2017-09-11T08:31:26.508Z","comments":true,"path":"2017/09/07/paste-image-by-using-html5-clipboard-api/","link":"","permalink":"https://www.yuxifan.com/2017/09/07/paste-image-by-using-html5-clipboard-api/","excerpt":"","text":"HTML5 Clipboard API allows user to paste image from their operating system clipboard which makes users’ life much easier. Here is how: First, create an HTML file, together with javascript and css stylesheet: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;html&gt;&lt;head&gt;&lt;style&gt; .pastebox &#123; background: lightgreen; border-style: dashed; width: 400px; height: 200px; &#125;&lt;/style&gt;&lt;script type=\"text/javascript\"&gt;window.onload = function() &#123; document.getElementById(\"pasteDiv\").addEventListener(\"paste\", pasteHandler);&#125;; function pasteHandler(e) &#123; var items = e.clipboardData.items; for (var i = 0 ; i &lt; items.length ; i++) &#123; var item = items[i]; if (item.type.indexOf(\"image\") &gt;=0) &#123; var xhr = new XMLHttpRequest(); xhr.onload = function() &#123; if (xhr.status == 200) &#123; console.log(\"uploaded.\"); &#125; else &#123; console.log(\"oops, something wrong.\") &#125; &#125;; xhr.onerror = function() &#123; console.log(\"cannot connect to server.\"); &#125;; xhr.open(\"POST\", \"/servlet/upload\", true); xhr.setRequestHeader(\"Content-Type\", item.getAsFile().type); xhr.send(item.getAsFile()); &#125; else &#123; console.log(\"Ignoring non-image.\"); &#125; &#125;&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"pastebox\" id=\"pasteDiv\"&gt; Paste image here. &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; The server side Java code to receive and process pasted image data: 12345678910111213141516171819String fileName = \"/tmp/\" + UUID.randomUUID() + \".png\";InputStream in = request.getInputStream();FileOutputStream o = null;try &#123; File f = new File(fileName); o = new FileOutputStream(f); byte buffer[] = new byte[1024 * 1024]; int n; while ((n = in.read(buffer)) != -1) &#123; o.write(buffer, 0, n); &#125;&#125; catch (IOException e) &#123; // error handling code&#125; finally &#123; o.close(); in.close();&#125; Another example using Javascript and PHP: The html: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;html&gt;&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;script type=\"text/javascript\"&gt;window.onload = function() &#123; document.getElementById(\"pasteDiv\").addEventListener(\"paste\", pasteHandler);&#125;;function pasteHandler(e) &#123; var filename = Math.floor((1 + Math.random()) * 0x10000).toString(16)+\".png\"; var items = e.clipboardData.items; for (var i = 0 ; i &lt; items.length ; i++) &#123; var item = items[i]; if (item.type.indexOf(\"image\") &gt;=0) &#123; var xhr = new XMLHttpRequest(); xhr.onload = function() &#123; if (xhr.status == 200) &#123; console.log(\"uploaded.\"); var imgdiv = document.getElementById(\"imgbox\"); imgdiv.innerHTML = imgdiv.innerHTML + \"&lt;img src=\\\"/uploads/\" + filename + \"\\\"/&gt;&lt;br/&gt;\"; var pastediv = document.getElementById(\"pasteDiv\"); pastediv.value = pastediv.value + \"![](/uploads/\"+filename+\")\"; &#125; else &#123; console.log(\"oops, something wrong.\") &#125; &#125;; xhr.onerror = function() &#123; console.log(\"cannot connect to server.\"); &#125;; xhr.open(\"POST\", \"upload.php?filename=\"+filename, true); xhr.setRequestHeader(\"Content-Type\", item.getAsFile().type); xhr.send(item.getAsFile()); &#125; else &#123; console.log(\"Ignoring non-image.\"); &#125; &#125;&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;Paste the image into the textbox below:&lt;br/&gt; &lt;textarea rows=\"10\" cols=\"100\" id=\"pasteDiv\"&gt;&lt;/textarea&gt; &lt;div id=\"imgbox\"&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; The PHP code is: 12345&lt;?phpdefine('ROOTPATH', __DIR__);file_put_contents(ROOTPATH.'/uploads/'.$_GET[\"filename\"], file_get_contents('php://input'));?&gt; Make sure you create upload folder in your web server root folder and change the ownership to USER:www-data, e.g. 1drwxrwxr-x 2 root www-data 4.0K Sep 9 02:34 uploads","categories":[{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/categories/javascript/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/tags/javascript/"},{"name":"html5","slug":"html5","permalink":"https://www.yuxifan.com/tags/html5/"},{"name":"clipboard API","slug":"clipboard-API","permalink":"https://www.yuxifan.com/tags/clipboard-API/"}]},{"title":"How to run a temporary http server without installing Nginx / Apache in Ubuntu","slug":"run-temporary-http-server","date":"2017-09-05T01:10:12.000Z","updated":"2017-09-05T11:19:10.831Z","comments":true,"path":"2017/09/05/run-temporary-http-server/","link":"","permalink":"https://www.yuxifan.com/2017/09/05/run-temporary-http-server/","excerpt":"","text":"Sometimes we only want to open HTTP ports temporarily, here is how: If you have enabled ufw, add ufw rule to allow the port being used by HTTP server. For example. to open port 3000 for HTTP server: 1sudo ufw allow from any to any port 3000 Now check all ufw rules: 1sudo ufw status numbered Go to your website folder. Create html files, e.g. index.html if you don’t have them. Run the following command to start your web server by typing: 1python3 -m http.server 3000 Now you can access that page in your browser. After running it, delete the rule (the number can be found from above command, e.g. sudo ufw status numbered): 1sudo ufw delete THE_RULE_NUMBER","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"python","slug":"python","permalink":"https://www.yuxifan.com/tags/python/"},{"name":"http server","slug":"http-server","permalink":"https://www.yuxifan.com/tags/http-server/"}]},{"title":"Setup python development environment for Steem on Ubuntu 16","slug":"setup-python-steem-development-environment","date":"2017-07-28T04:51:12.000Z","updated":"2017-07-28T08:21:26.600Z","comments":true,"path":"2017/07/28/setup-python-steem-development-environment/","link":"","permalink":"https://www.yuxifan.com/2017/07/28/setup-python-steem-development-environment/","excerpt":"","text":"Install python 3Both Python 3 and Python 2 have been pre-installed on Ubuntu 16, you just need to make sure you have the latest versions by running: 12sudo apt-get updatesudo apt-get -y upgrade Then run the following command to check the version of Python 3: 1python -v You also need to install pip to manage software packages: 1sudo apt-get install -y python3-pip Install development libraries: 1sudo apt-get install build-essential libffi-dev libssl-dev python3-dev Setting up a virtual environment12345sudo apt-get install python3-venvmkdir environmentscd environmentspython3 -m venv myenvsource myenv/bin/activate Setting up python steem libraries123pip3 install wheel pip3 install piston-libpip3 install steem Test it worksTo test the development environment has been set up correctly, run the following script to list the tags used by latest posts: 12345from piston import Steemsteem = Steem()for c in steem.stream_comments(): if c.is_main_post(): print (c.meta[\"tags\"]) Thank you for reading my post, feel free to FOLLOW and Upvote @yuxi, which will motivate me to create more quality posts.","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://www.yuxifan.com/tags/Linux/"},{"name":"Python","slug":"Python","permalink":"https://www.yuxifan.com/tags/Python/"},{"name":"Steem","slug":"Steem","permalink":"https://www.yuxifan.com/tags/Steem/"}]},{"title":"Multi-select facting in Java","slug":"multi-select-faceting","date":"2017-07-21T21:51:12.000Z","updated":"2017-07-21T14:47:44.170Z","comments":true,"path":"2017/07/21/multi-select-faceting/","link":"","permalink":"https://www.yuxifan.com/2017/07/21/multi-select-faceting/","excerpt":"","text":"What is multi-select facting?Multi-select faceting means that users can see and select multiple facet items (facet values) for particular facets. Thanks to Solr’s filter tagging and excluding features to support this type of faceting. Online PC shop exampleFor example, we have 2 facets: memory, and brand. We want to support multi-select faceting because while searching, users may want to choose a range of memory size e.g. 4GB-8GB and a list of interested brands, e.g. Lenovo and HP. From the initial search of keyword “Home desktop PC”, the result looks like: 12345------memory------ ------brand------ [ ] 2GB (30) [ ] Acer (13)[ ] 4GB (50) [ ] HP (20)[ ] 8GB (25) [ ] Lenovo (33)[ ] 16GB (10) [ ] Toshiba (20) Then user may want to narrow down the search results by selecting 4GB and 8GB in memory facet, also HP and Lenovo in the brand facet. Ideally, after selecting 4GB and 8GB, users expect to see: 12345------memory------ ------brand------ [ ] 2GB (30) [ ] Acer (5)[x] 4GB (50) [ ] HP (10)[x] 8GB (25) [ ] Lenovo (13)[ ] 16GB (10) [ ] Toshiba (10) You may notice that the numbers after each brand facet item is also changed. That is just because the search results have been narrowed down after first select of “4GB” and “8GB” in memory facet. Solr query to support multi-select facetingAccording to solr’s documentation, tagging and excluding filters can be used to perform the multi-select faceting. The solr query is: 1q=Home%20desktop%20PC&amp;facet=on&amp;facet.field=&#123;!ex=tagmem&#125;&amp;fq=&#123;!tag=tagmem&#125; memory:%28%224GB%208GB%22%29&amp;facet.field=&#123;!ex=tagbrand&#125;&amp;fq=&#123;!tag=tagbrand&#125;brand:%28%22Lenobo%20HP%22%29 Human readable version (should not send it to Solr in your application): 1q=Home desktop PC&amp;facet=on&amp;facet.field=&#123;!ex=tagmem&#125;&amp;fq=&#123;!tag=tagmem&#125;memory:(\"4GB\" \"8GB\")&amp;facet.field=&#123;!ex=tagbrand&#125;&amp;fq=&#123;!tag=tagbrand&#125;brand:(\"Lenobo\" \"HP\") Solrj implementationFor facet: 12345SolrQuery query = new SolrQuery();......query.addFacetField(\"&#123;!ex=tagmem&#125;memory\";......query.addFacetField(\"&#123;!ex=tagbrand&#125;brand\"; For facet items: 1query.addFilterQuery(\"&#123;!tag=tagbrand&#125;brand:\"+YOUR_BRAND_FACET_VALUES_FROM_FRONTEND)","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"solr","slug":"solr","permalink":"https://www.yuxifan.com/tags/solr/"},{"name":"faceting","slug":"faceting","permalink":"https://www.yuxifan.com/tags/faceting/"}],"keywords":"multi-select facting"},{"title":"Upload via SFTP in Java","slug":"upload-via-sftp-in-java","date":"2017-07-14T11:51:12.000Z","updated":"2017-07-20T08:30:21.552Z","comments":true,"path":"2017/07/14/upload-via-sftp-in-java/","link":"","permalink":"https://www.yuxifan.com/2017/07/14/upload-via-sftp-in-java/","excerpt":"","text":"1) Add Maven dependency12345&lt;dependency&gt; &lt;groupId&gt;com.jcraft&lt;/groupId&gt; &lt;artifactId&gt;jsch&lt;/artifactId&gt; &lt;version&gt;0.1.42&lt;/version&gt;&lt;/dependency&gt; 2) Java code12345678910111213141516171819202122232425262728293031323334353637383940import java.io.File;import java.io.FileInputStream;import com.jcraft.jsch.Channel;import com.jcraft.jsch.ChannelSftp;import com.jcraft.jsch.JSch;import com.jcraft.jsch.Session;public class TestJSftp &#123; public static void upload(String username, String password, String host, int port, String workingDir, String localFilename)&#123; try &#123; JSch jsch = new JSch(); Session session = jsch.getSession(username, host, port); session.setPassword(password); java.util.Properties config = new java.util.Properties(); config.put(\"StrictHostKeyChecking\", \"no\"); session.setConfig(config); session.connect(); Channel channel = session.openChannel(\"sftp\"); channel.connect(); ChannelSftp channelSftp = (ChannelSftp) channel; channelSftp.cd(workingDir); File f1 = new File(localFilename); channelSftp.put(new FileInputStream(f1), f1.getName(), ChannelSftp.OVERWRITE); channelSftp.exit(); session.disconnect(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"sftp","slug":"sftp","permalink":"https://www.yuxifan.com/tags/sftp/"}],"keywords":"sftp"},{"title":"Implementing Shibboleth login in Rails application","slug":"implementing-shibboleth-in-rails","date":"2017-07-07T11:51:12.000Z","updated":"2017-07-07T14:48:09.295Z","comments":true,"path":"2017/07/07/implementing-shibboleth-in-rails/","link":"","permalink":"https://www.yuxifan.com/2017/07/07/implementing-shibboleth-in-rails/","excerpt":"","text":"Further to the basic configuration to make Shibboleth working with Apache 2, it’s time to configure Rails application with Shibboleth. You may want to get Phusion Passenger working first, here is the tutorial: Setting up Phusion Passenger with Apache2. 0) EnvironementsUbuntu: 16Apache: 2.4.7Ruby: 2.3.1Phusion Passenger: 5.1.5Shibboleth: 2.5.2 1) Configure Apache2First, edit /etc/apache2/sites-enabled/default-ssl.conf and add: 1234&lt;Location \"/Shibboleth.sso\"&gt; Require all granted PassengerEnabled off&lt;/Location&gt; and 12345&lt;Location \"/users/auth/shibboleth\"&gt; AuthType shibboleth ShibRequestSetting requireSession 1 require valid-user&lt;/Location&gt; You may want to comment out the following line in /etc/apache2/apache2.conf, otherwise, you have to grant acess to each individual path. 12345#&lt;Directory /&gt;# Options FollowSymLinks# AllowOverride None# Require all denied#&lt;/Directory&gt; 2) Configure/develop Rails application to support Shibooleth2.1) Add gem ‘omniauth-shibboleth’ into Gemfile and run1bundle install 2.2) Edit config/initializers/devise.rb:12345config.omniauth :shibboleth, &#123;:uid_field =&gt; 'eppn', :info_fields =&gt; &#123; :affiliation =&gt; lambda &#123;|request_param| request_param.call('unscoped-affiliation').split(';')&#125;, &#125;,&#125; 2.3) Edit app/models/user.rbAdd method: 12345678def self.from_omniauth(auth) where(provider: auth.provider, uid: auth.uid).first_or_create do |user| user.provider = auth.provider user.uid = auth.uid user.email = auth.uid user.password = Devise.friendly_token[0,20] endend Also add :omniauthable to declaration in user.rb 2.4) Add a controller, e.g. app/controllers/omniauthcallbacks_controller.rb1234567891011class OmniauthcallbacksController &lt; Devise::OmniauthCallbacksController def shibboleth @user = User.from_omniauth(request.env[\"omniauth.auth\"]) session['shib_user_data'] = request.env[\"omniauth.auth\"] sign_in_and_redirect @user end def failure redirect_to new_local_user_session_path, :notice =&gt; \"Cannot login via Shibboleth - redirect to local login ...\" endend 2.5) edit config/routes.rb1devise_for :users, :controllers =&gt; &#123; :omniauth_callbacks =&gt; \"omniauthcallbacks\" &#125;, :skip =&gt; [:sessions] Run:12rails g migration AddColumnsToUsers provider uidrake db:migrate 2.6) edit routes.rb and add:123456devise_scope :user do match \"/users/auth/shibboleth\" =&gt; \"omniauth_callbacks#passthru\", as: \"new_user_session\", via: [:get] match \"/users/sign_in\" =&gt; \"devise/sessions#new\", as: \"new_local_user_session\", via: [:get] match \"/users/sign_in\" =&gt; \"devise/sessions#create\", as: \"user_session\", via: [:post] match \"/users/sign_out\" =&gt; \"devise/sessions#destroy\", as: \"destroy_user_session\", via: [:get]end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"rails","slug":"rails","permalink":"https://www.yuxifan.com/tags/rails/"},{"name":"shibboleth","slug":"shibboleth","permalink":"https://www.yuxifan.com/tags/shibboleth/"},{"name":"passenger","slug":"passenger","permalink":"https://www.yuxifan.com/tags/passenger/"}]},{"title":"Setting up Phusion Passenger with Apache 2.4 on Ubuntu","slug":"phusion-passenger","date":"2017-07-07T08:51:12.000Z","updated":"2017-07-07T10:55:12.189Z","comments":true,"path":"2017/07/07/phusion-passenger/","link":"","permalink":"https://www.yuxifan.com/2017/07/07/phusion-passenger/","excerpt":"","text":"Install Apache 2123sudo apt-get install apache2sudo a2enmod headerssudo a2enmod expires Configure Apache SSL1234sudo a2enmod sslsudo a2ensite default-ssl.confsudo mkdir /etc/apache2/sslsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt Install Phusion Passenger12gem install passengerpassenger-install-apache2-module Follow on screen instructions, so the apache configuration file /etc/apache2/apache2.conf looks like: 12345LoadModule passenger_module /home/yuxi/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/passenger-5.1.5/buildout/apache2/mod_passenger.so&lt;IfModule mod_passenger.c&gt; PassengerRoot /home/yuxi/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/passenger-5.1.5 PassengerDefaultRuby /home/yuxi/.rbenv/versions/2.3.1/bin/ruby&lt;/IfModule&gt; Configure Rails application in Apache 2.xEdit /etc/apache2/sites-enabled/default-ssl.conf: 123456789101112131415161718192021222324252627282930313233&lt;IfModule mod_ssl.c&gt; &lt;VirtualHost _default_:443&gt; ServerAdmin info@yuxifan.com ServerName localhost SSLEngine on SSLCertificateFile /etc/apache2/ssl/apache.crt SSLCertificateKeyFile /etc/apache2/ssl/apache.key RailsEnv production RailsBaseURI / Alias / /home/yuxi/rails_app/public &lt;Location /&gt; PassengerBaseURI / PassengerAppRoot /home/yuxi/rails_app &lt;/Location&gt; &lt;Directory /home/yuxi/rails_app/public&gt; Require all granted AllowOverride None Options -MultiViews +FollowSymLinks Require all granted &lt;/Directory&gt; &lt;Location /assets/&gt; Require all granted Header unset ETag FileETag None ExpiresActive On ExpiresDefault \"access plus 1 year\" &lt;/Location&gt; &lt;/VirtualHost&gt;&lt;/IfModule&gt; Configurations within Rails applicationGenerate assets for production: 1rake assets:precompile RAILS_ENV=production Edit config/environments/production.rb, make sure: 1config.public_file_server.enabled = true","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"},{"name":"Phusion Passenger","slug":"Phusion-Passenger","permalink":"https://www.yuxifan.com/tags/Phusion-Passenger/"},{"name":"Rails","slug":"Rails","permalink":"https://www.yuxifan.com/tags/Rails/"},{"name":"Apache","slug":"Apache","permalink":"https://www.yuxifan.com/tags/Apache/"}]},{"title":"Setting up Ruby development environments","slug":"setting-up-ruby-development-environments","date":"2017-07-06T08:51:12.000Z","updated":"2017-07-07T12:44:32.957Z","comments":true,"path":"2017/07/06/setting-up-ruby-development-environments/","link":"","permalink":"https://www.yuxifan.com/2017/07/06/setting-up-ruby-development-environments/","excerpt":"","text":"Install development libraries12sudo apt-get -y updatesudo apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev Install rbenv1234567cd ~git clone git://github.com/sstephenson/rbenv.git .rbenv echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.bash_profileecho 'eval \"$(rbenv init -)\"' &gt;&gt; ~/.bash_profilegit clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-buildecho 'export PATH=\"$HOME/.rbenv/plugins/ruby-build/bin:$PATH\"' &gt;&gt; ~/.bash_profilesource ~/.bash_profile Install ruby123rbenv install -v 2.3.1rbenv global 2.3.1ruby -v Install gems1234gem install bundlergem install nokogirigem install railsrbenv rehash","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"Ruby","slug":"Ruby","permalink":"https://www.yuxifan.com/tags/Ruby/"},{"name":"rbenv","slug":"rbenv","permalink":"https://www.yuxifan.com/tags/rbenv/"}]},{"title":"Configure Shibboleth Service Provider on Ubuntu 16","slug":"configure-shibboleth-service-provider-ubuntu-16","date":"2017-07-04T08:51:12.000Z","updated":"2017-07-13T15:31:57.631Z","comments":true,"path":"2017/07/04/configure-shibboleth-service-provider-ubuntu-16/","link":"","permalink":"https://www.yuxifan.com/2017/07/04/configure-shibboleth-service-provider-ubuntu-16/","excerpt":"","text":"EnvironmentsUbuntu 16Apache 2Shibboleth 2 Get Apache ready for ShibbolethMake sure Apache is installed, otherwise, run: 1sudo apt-get install apache2 Enable ssl: 1sudo a2enmod ssl Activate the SSL Virtual Host: 1sudo a2ensite default-ssl.conf Creating a self-signed SSL certificate: 12sudo mkdir /etc/apache2/sslsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt Add Shibboleth protected application/service for testing1sudo mkdir /var/www/myservice Create index page:1sudo nano /var/www/myservice/index.html Add content to index.html, e.g. 12345&lt;html&gt;&lt;body&gt;Shibboleth protected service&lt;/body&gt;&lt;/html&gt; Install Shibboleth123sudo apt-get install libapache2-mod-shib2sudo a2enmod auth_basicsudo a2enmod shib2 Set up a Shibboleth certificate: 1sudo shib-keygen -h localhost Check certificate: 1openssl x509 -text -noout -in /etc/shibboleth/sp-cert.pem Edit /etc/shibboleth/shibboleth2.xml. Make sure backup the original file before editing! Actually, by providing the hostname, testshib.org can generate a sample configuration, e.g. shibboleth2.xml for you automatically at: https://www.testshib.org/configure.html Sample content below: 12345678910111213141516171819202122232425262728&lt;SPConfig xmlns=\"urn:mace:shibboleth:2.0:native:sp:config\" xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" clockSkew=\"1800\"&gt; &lt;ApplicationDefaults entityID=\"https://localhost/shibboleth\" REMOTE_USER=\"eppn\"&gt; &lt;Sessions lifetime=\"28800\" timeout=\"3600\" checkAddress=\"false\" relayState=\"ss:mem\" handlerSSL=\"true\"&gt; &lt;SSO entityID=\"https://idp.testshib.org/idp/shibboleth\"&gt; SAML2 SAML1 &lt;/SSO&gt; &lt;Logout&gt;SAML2 Local&lt;/Logout&gt; &lt;Handler type=\"MetadataGenerator\" Location=\"/Metadata\" signing=\"false\"/&gt; &lt;Handler type=\"Status\" Location=\"/Status\" acl=\"127.0.0.1 ::1\"/&gt; &lt;Handler type=\"Session\" Location=\"/Session\" showAttributeValues=\"true\"/&gt; &lt;Handler type=\"DiscoveryFeed\" Location=\"/DiscoFeed\"/&gt; &lt;/Sessions&gt; &lt;Errors supportContact=\"root@localhost\" logoLocation=\"/shibboleth-sp/logo.jpg\" styleSheet=\"/shibboleth-sp/main.css\"/&gt; &lt;MetadataProvider type=\"XML\" uri=\"http://www.testshib.org/metadata/testshib-providers.xml\" backingFilePath=\"testshib-two-idp-metadata.xml\" reloadInterval=\"180000\"/&gt; &lt;AttributeExtractor type=\"XML\" validate=\"true\" path=\"attribute-map.xml\"/&gt; &lt;AttributeResolver type=\"Query\" subjectMatch=\"true\"/&gt; &lt;AttributeFilter type=\"XML\" validate=\"true\" path=\"attribute-policy.xml\"/&gt; &lt;CredentialResolver type=\"File\" key=\"sp-key.pem\" certificate=\"sp-cert.pem\"/&gt; &lt;/ApplicationDefaults&gt; &lt;SecurityPolicyProvider type=\"XML\" validate=\"true\" path=\"security-policy.xml\"/&gt; &lt;ProtocolProvider type=\"XML\" validate=\"true\" reloadChanges=\"false\" path=\"protocols.xml\"/&gt;&lt;/SPConfig&gt; Add protected service into Apache configurationEdit /etc/apache2/sites-available/default-ssl.conf with content: 123456789101112131415161718192021222324252627282930313233&lt;IfModule mod_ssl.c&gt; &lt;VirtualHost _default_:443&gt; ServerAdmin info@yuxifan.com ServerName localhost DocumentRoot /var/www/html ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined SSLEngine on SSLCertificateFile /etc/apache2/ssl/apache.crt SSLCertificateKeyFile /etc/apache2/ssl/apache.key &lt;FilesMatch \"\\.(cgi|shtml|phtml|php)$\"&gt; SSLOptions +StdEnvVars &lt;/FilesMatch&gt; &lt;Directory /usr/lib/cgi-bin&gt; SSLOptions +StdEnvVars &lt;/Directory&gt; BrowserMatch \"MSIE [2-6]\" \\ nokeepalive ssl-unclean-shutdown \\ downgrade-1.0 force-response-1.0 BrowserMatch \"MSIE [17-9]\" ssl-unclean-shutdown Alias /myservice/ /var/www/myservice/ &lt;Location /myservice/&gt; AuthType shibboleth ShibRequestSetting requireSession 1 Require valid-user &lt;/Location&gt; &lt;/VirtualHost&gt;&lt;/IfModule&gt; Start Shibboleth service1sudo service shibd start You may want to enable Shibboleth at startup: 1sudo systemctl enable shibd Test Shibboleth SP:https://localhost/Shibboleth.sso/DiscoFeed Download Metadata:https://FQDN/Shibboleth.sso/Metadata NB: Status page may NOT work, e.g. https://localhost/Shibboleth.sso/Status may returns 403 Error. Now accessing https://localhost/myservice/ will redirect you to testshib site. Upload SP metadata on https://www.testshib.org/register.html Now you should be redirected to TestShib login page. Enter the default name/password and you will be redirected back to your secure service page, e.g. /myservice/index.html (/var/www/myservice/index.html) Further configurationAllow access only to users from www.XYZ.com (On Apache 2.4) 12345&lt;Location /myservice/&gt; AuthType shibboleth ShibRequestSetting requireSession 1 Require shib-attr affiliation ~ ^.+@www\\.XYZ\\.com$&lt;/Location&gt; Allow access to specified user 12345&lt;Location /myservice/&gt; AuthType shibboleth ShibRequestSetting requireSession 1 Require user xxxx@XYZ.com&lt;/Location&gt;","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"},{"name":"shibboleth","slug":"shibboleth","permalink":"https://www.yuxifan.com/tags/shibboleth/"}]},{"title":"GraphicsMagick","slug":"graphicsmagick","date":"2017-06-28T01:10:12.000Z","updated":"2017-06-28T10:22:44.373Z","comments":true,"path":"2017/06/28/graphicsmagick/","link":"","permalink":"https://www.yuxifan.com/2017/06/28/graphicsmagick/","excerpt":"","text":"GraphicsMagick is originally derived from ImageMagick 5.5.2 as of November 2002 but has been completely independent of the ImageMagick project since then. As states in GraphicsMagick’s website: GraphicsMagick is better than ImageMagick. Installation1sudo apt-get install graphicsmagick Identify images1gm identify filename.jpg Identify image height only:1gm identify -format %h filename.jpg Identify image and output filename, size, height, and width:1gm identify -format %f/%b/%h/%w filename.jpg Resize images12gm convert -monitor -resize 50% source.jpg target.jpggm convert -monitor -resize 600x source.jpg target.jpg ConvertTo convert a multi-page PostScript document to individual FAX pages:1gm convert -monochrome document.ps fax:page Rotating ImagesClockwise Rotation1gm convert -monitor rotate 45 source.jpg target.jpg Anti-clockwise Rotation1gm convert -monitor rotate -45 source.jpg target.jpg","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"ImageMagick","slug":"ImageMagick","permalink":"https://www.yuxifan.com/tags/ImageMagick/"},{"name":"GraphicsMagick","slug":"GraphicsMagick","permalink":"https://www.yuxifan.com/tags/GraphicsMagick/"}]},{"title":"How to remove ads from Android screen while charging?","slug":"how-to-remove-ads-from-android-charging-screen","date":"2017-05-09T20:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/05/09/how-to-remove-ads-from-android-charging-screen/","link":"","permalink":"https://www.yuxifan.com/2017/05/09/how-to-remove-ads-from-android-charging-screen/","excerpt":"","text":"Recently a large number of users have been complaining that while charging their Android phone, instead of just showing date, time, battery status, the screen also shows advertisements. While googling the solution for it, lots of posts are saying it is caused by some particular APPs and from the list they provided, non of them worked for me. Here is the solution I finially found - so simple! Just click the dots/gear on the top right corner of the screen, as shown in the screen shot above, then click ‘turn off’. that is it!","categories":[{"name":"mobile","slug":"mobile","permalink":"https://www.yuxifan.com/categories/mobile/"}],"tags":[{"name":"ads","slug":"ads","permalink":"https://www.yuxifan.com/tags/ads/"}]},{"title":"Install Android Nougat into Samsung Galaxy S5 step by step","slug":"install-android-nougat-into-galaxy-s5","date":"2017-05-04T20:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/05/04/install-android-nougat-into-galaxy-s5/","link":"","permalink":"https://www.yuxifan.com/2017/05/04/install-android-nougat-into-galaxy-s5/","excerpt":"","text":"1) Install Odin to Windows PCDownload Odin from: http://odindownload.com/SamsungOdin/ Extract download Odin zip file to Windows PC, then double click app to run it: 2) Install TWRPDownload TWRP to your PC from: https://twrp.me/ Switch off your phone and press Volume up + Home + Power to Download mode. Connect your phone to PC via USB cable, then Odin should detect your phone. Now press ‘Start’ to flash TWRP to your phone. Power off your phone. 3) Install Cyanogenmod 14.1 and GAPPS 7.1Download Cyanogenmod(CM) 14.1 from: http://mirror41.download.highonandroid.com/download/CM14.1/GalaxyS5/Download GAPPS 7.1 from: http://opengapps.org/ NB: I have tried the recommended version of GAPPS, e.g. ‘stock’ but it won’t work in my phone and gives me “Unfortunately, Google Play Services has stopped “ error. When I switched to the minimal version, e.g. ‘pico’, it works fine. Copy downloaded GAPPS and Cyanogenmod zip files into your phone’s SD card. Now press Volume up + Home + Power to enter TWRP screen. Then Wipe your phone and install from Cyanogenmod and GAPPS zip files. Restart your phone and it’s ready to use!","categories":[{"name":"mobile","slug":"mobile","permalink":"https://www.yuxifan.com/categories/mobile/"}],"tags":[{"name":"odin","slug":"odin","permalink":"https://www.yuxifan.com/tags/odin/"},{"name":"twrp","slug":"twrp","permalink":"https://www.yuxifan.com/tags/twrp/"},{"name":"cyanogenmod","slug":"cyanogenmod","permalink":"https://www.yuxifan.com/tags/cyanogenmod/"},{"name":"gapps","slug":"gapps","permalink":"https://www.yuxifan.com/tags/gapps/"},{"name":"samsung","slug":"samsung","permalink":"https://www.yuxifan.com/tags/samsung/"}]},{"title":"Host multiple domains in Nginx","slug":"suppport-multiple-domains-in-nginx","date":"2017-03-14T05:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/03/14/suppport-multiple-domains-in-nginx/","link":"","permalink":"https://www.yuxifan.com/2017/03/14/suppport-multiple-domains-in-nginx/","excerpt":"","text":"By default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents at /var/www/html. To serve multiple sites/domains. We need to do the following: Create directoriesWe need to create these directories for each of our domains: 12345sudo mkdir -p /var/www/DOMAIN-1.com/htmlsudo mkdir -p /var/www/DOMAIN-2.com/htmlsudo chown -R $USER:$USER /var/www/DOMAIN-1.com/htmlsudo chown -R $USER:$USER /var/www/DOMAIN-2.com/html Create Server Block Files for Each DomainFile: /etc/nginx/sites-available/DOMAIN-1.com 1234567891011121314server &#123; listen 80; listen [::]:80; root /var/www/DOMAIN-1/html; index index.html index.htm; server_name www.DOMAIN-1.com; location / &#123; try_files $uri $uri/ =404; &#125;&#125; File: /etc/nginx/sites-available/DOMAIN-2.com 1234567891011121314server &#123; listen 80; listen [::]:80; root /var/www/DOMAIN-2/html; index index.html index.htm; server_name www.DOMAIN-2.com; location / &#123; try_files $uri $uri/ =404; &#125;&#125; Run:12sudo ln -s /etc/nginx/sites-available/DOMAIN-1.com /etc/nginx/sites-enabled/sudo ln -s /etc/nginx/sites-available/DOMAIN-2.com /etc/nginx/sites-enabled/ In order to avoid a possible hash bucket memory problem while adding additional server names, modify /etc/nginx/nginx.conf. 1sudo nano /etc/nginx/nginx.conf Uncomment this line: 1server_names_hash_bucket_size 64; Test:1sudo nginx -t Restart Nginx:1sudo systemctl restart nginx Add hosts1sudo nano /etc/hosts 12YOUR_IP www.DOMAIN-1.comYOUR_IP www.DOMAIN-2.com","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://www.yuxifan.com/tags/Linux/"},{"name":"Nginx","slug":"Nginx","permalink":"https://www.yuxifan.com/tags/Nginx/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.yuxifan.com/tags/Ubuntu/"}]},{"title":"Install LEMP + Wordpress in Ubuntu 16.04 LTS step by step","slug":"install-lemp-and-wordpress-in-ubuntu-16-lts","date":"2017-02-28T05:51:12.000Z","updated":"2017-07-25T09:04:58.025Z","comments":true,"path":"2017/02/28/install-lemp-and-wordpress-in-ubuntu-16-lts/","link":"","permalink":"https://www.yuxifan.com/2017/02/28/install-lemp-and-wordpress-in-ubuntu-16-lts/","excerpt":"","text":"User and authenticationsCreate userLogin as root 12adduser --gecos \"\" yuxi [OR YOUR_USER_NAME]gpasswd -a yuxi sudo OR 1usermod -aG sudo yuxi Get your public keys ready, e.g. running “ssh-keygen” in Linux machines which will be connecting to your WP server via SSH. Login as the new user just being created, and type: 1234mkdir ~/.sshchmod 700 ~/.sshtouch ~/.ssh/authorized_keyschmod 600 ~/.ssh/authorized_keys Add your public keys to authorized_keys. It can be done manually or run the following command: 123cat &gt;&gt; ~/.ssh/authorized_keys &lt;&lt; EOFYOUR_PUBLIC_KEYSEOF Switch to root user and run:1echo 'YOUR_USER_NAME ALL=(ALL) NOPASSWD: ALL' &gt;&gt; /etc/sudoers System update:12345678sudo apt-get -y update sudo apt-get -y upgrade ```bashUpdate user profile```bashecho 'export LS_COLORS=$(echo $LS_COLORS | sed \"s/di=\\(..\\);../di=\\1;32/\") ' &gt;&gt; ~/.bashrcecho \"PS1='\\\\$ '\" &gt;&gt; ~/.bashrc AuthenticationsRun 1sudo nano /etc/ssh/sshd_config Then make the following changes: 123PasswordAuthentication noPubkeyAuthentication yesChallengeResponseAuthentication no Also, change port from default ‘22’ to other number, e.g. 2244 Reload sshd service: 1sudo systemctl reload sshd Basic firewall settings1234sudo ufw enablesudo ufw delete allow OpenSSHsudo ufw allow from any to any port 2224sudo ufw status SystemBasic libraries123456789101112sudo apt-get install -qq -y curl sudo apt-get install -qq -y lynx-cursudo apt-get install -qq -y gitsudo apt-get install -qq -y whoissudo apt-get install -qq -y apache2-utilssudo apt-get install -qq -y unzipsudo -H -u root bash -c \"echo 'Europe/London' &gt; /etc/timezone\" sudo dpkg-reconfigure -f noninteractive tzdata sudo apt-get install -qq -y ntp &gt; /dev/null 2&gt;err.log git config --global user.email \"YOUR_EMAIL\"git config --global user.name \"YOUR NAME\" Swap spaceYou may want to create a swap space: 12345sudo fallocate -l $SWAP_SPACE_SIZE /swapfilesudo chmod 600 /swapfilesudo mkswap /swapfilesudo swapon /swapfilesudo sh -c 'echo \"/swapfile none swap sw 0 0\" &gt;&gt; /etc/fstab' Nginx123sudo apt-get updatesudo apt-get install nginxsudo ufw allow 'Nginx HTTP' To find out the IP of VM, run: 1ip addr show eth0 | grep inet | awk '&#123; print $2; &#125;' | sed 's/\\/.*$//' Change server_name in Nginx: 1nano /etc/nginx/sites-enabled/default MySQL12sudo apt-get install mysql-serversudo mysql_secure_installation PHP1sudo apt-get install -y php-fpm php-mysql Change PHP configuration:1sudo nano /etc/php/7.0/fpm/php.ini Change this:cgi.fix_pathinfo=0 1sudo systemctl restart php7.0-fpm Change Nginx settings to support PHP: 1nano /etc/nginx/sites-available/default With content: 12345678910111213141516171819202122server &#123; listen 80 default_server; listen [::]:80 default_server; root /var/www/html; index index.php index.html index.htm index.nginx-debian.html; server_name server_domain_or_IP; location / &#123; try_files $uri $uri/ =404; &#125; location ~ \\.php$ &#123; include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php7.0-fpm.sock; &#125; location ~ /\\.ht &#123; deny all; &#125;&#125; PHP Extensions123sudo apt-get -y update sudo apt-get -y install php-curl php-gd php-mbstring php-mcrypt php-xml php-xmlrpcsudo systemctl restart php7.0-fpm WordpressFirst, create database for wordpress: 12345mysql -u root -pCREATE DATABASE wordpress DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;GRANT ALL ON wordpress.* TO 'wordpressuser'@'localhost' IDENTIFIED BY 'password';FLUSH PRIVILEGES;exit Modify Nginx configuration: 123456location = /favicon.ico &#123; log_not_found off; access_log off; &#125;location = /robots.txt &#123; log_not_found off; access_log off; allow all; &#125;location ~* \\.(css|gif|ico|jpeg|jpg|js|png)$ &#123; expires max; log_not_found off;&#125; And: 123location / &#123; try_files $uri $uri/ /index.php$is_args$args; &#125; Reload: 1sudo systemctl reload nginx Install Wordpress 1234567cd /tmpcurl -O https://wordpress.org/latest.tar.gztar xvf latest.tar.gzcp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.phpsudo cp -a /tmp/wordpress/. /var/www/htmlmkdir /var/www/html/wp-content/uploadsmkdir /var/www/html/wp-content/upgrade Change permissions:1sudo chown -R yuxi:www-data /var/www/html Next, we will set the setgid bit on each of the directories within the document root. This causes new files created within these directories to inherit the group of the parent directory (which we just set to www-data) instead of the creating user’s primary group.1sudo find /var/www/html -type d -exec chmod g+s &#123;&#125; \\; There are a few other fine-grained permissions we’ll adjust. First, we’ll give group write access to the wp-content directory so that the web interface can make theme and plugin changes:1sudo chmod g+w /var/www/html/wp-content As part of this process, we will give the web server write access to all of the content in these two directories: 12sudo chmod -R g+w /var/www/html/wp-content/themessudo chmod -R g+w /var/www/html/wp-content/plugins When we open the file, our first order of business will be to adjust some secret keys to provide some security for our installation. WordPress provides a secure generator for these values so that you do not have to try to come up with good values on your own. To grab secure values from the WordPress secret key generator, type: 1curl -s https://api.wordpress.org/secret-key/1.1/salt/ Open /var/www/html/wp-config.php, update these lines with the keys just being generated:12345678define('AUTH_KEY', 'put your unique phrase here');define('SECURE_AUTH_KEY', 'put your unique phrase here');define('LOGGED_IN_KEY', 'put your unique phrase here');define('NONCE_KEY', 'put your unique phrase here');define('AUTH_SALT', 'put your unique phrase here');define('SECURE_AUTH_SALT', 'put your unique phrase here');define('LOGGED_IN_SALT', 'put your unique phrase here');define('NONCE_SALT', 'put your unique phrase here'); Config database: change the following lines in /var/www/html/wp-config.php: 123define('DB_NAME', 'wordpress');define('DB_USER', 'wordpressuser');define('DB_PASSWORD', 'password'); The other change we need to make is to set the method that WordPress should use to write to the filesystem. Since we’ve given the web server permission to write where it needs to, we can explicitly set the filesystem method to “direct”. Failure to set this with our current settings would result in WordPress prompting for FTP credentials when we perform some actions. Just after DB settings, add:1define('FS_METHOD', 'direct'); Complete the Installation via Web UI WP toolwp-cli123curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.pharchmod +x wp-cli.phar sudo mv wp-cli.phar /usr/local/bin/wp You can install WP if you haven’t done it via Web Admin UI:12345wp core install --url=http://ADDRESS --title=\"\" --admin_user= --admin_password= --admin_email=wp core language install zh_CNwp core language activate zh_CNwp option set blog_public 1 WP plugins12345678910111213141516171819202122232425cd /var/www/htmlwp plugin delete hellowp plugin install wordfencewp plugin activate wordfencewp plugin install wordpress-seowp plugin activate wordpress-seowp plugin install google-sitemap-generatorwp plugin activate google-sitemap-generatorwp plugin install disable-google-fontswp plugin activate disable-google-fontswp plugin install miniorange-2-factor-authenticationwp plugin activate miniorange-2-factor-authenticationwp plugin install nofollow-for-external-linkwp plugin activate nofollow-for-external-linkwp plugin install wp-super-cachewp plugin activate wp-super-cachewp plugin update --all Go to web admin UI to configure these plugins WP themes12wp theme delete twentyfifteenwp theme delete twentysixteen Install your own themes BackupsInstall Amazon command line tool12345678sudo apt-get install -qq -y python-pipsudo pip install --upgrade pipsudo pip install -U setuptoolssudo pip -q install awsclisudo apt-get install -qq -y awsclimkdir ~/.awsnano ~/.aws/credentials Content of credentials: 123[default]aws_access_key_id = aws_secret_access_key = nano ~/.aws/config 12[default]region = eu-central-1 nano ~/scripts/syncbackups.sh The content of syncbackups.sh is:12345678DATE=`date +%Y%m%d`cd /var/www/htmlwp db export ~/backups/db$DATE.sqlcd ~/backupsaws s3 sync . s3://YOUR_S3_BUCKET/YOUR_DB_FOLDER_IN_S3cd /var/www/html/wp-content/uploadsaws s3 sync . s3://YOUR_S3_BUCKET/YOUR_UPLOAD_FOLDER_IN_S3 --delete 1chmod 700 ~/scripts/syncbackups.sh Run crontab -e to add a cron job Security settingsSystem updatesnano ~/scripts/systemupdats.sh 123cd /var/www/htmlwp plugin update --allwp core update 1chmod 700 ~/scripts/systemupdats.sh You may want to add it into cron job list fails2ban12sudo apt-get install -qq -y fail2bansudo nano /etc/fail2ban/jail.local Content of jail.local 1234567891011121314151617181920212223[DEFAULT]bantime = 3600ignoreip = 127.0.0.1/8 YOUR_IPs[nginx-http-auth]enabled = truefilter = nginx-http-authport = http,httpslogpath = %(nginx_error_log)s[nginx-badbots]enabled = trueport = http,httpsfilter = nginx-badbotslogpath = /var/log/nginx/access.logmaxretry = 2[nginx-noproxy]enabled = trueport = http,httpsfilter = nginx-noproxylogpath = /var/log/nginx/access.logmaxretry = 2 1sudo nano /etc/fail2ban/filter.d/nginx-http-auth.conf Update file with: 12failregex = ^ \\[error\\] \\d+#\\d+: \\*\\d+ user \"\\S+\":? (password mismatch|was not found in \".*\"), client: &lt;HOST&gt;, server: \\S+, request: \"\\S+ \\S+ HTTP/\\d+\\.\\d+\", host: \"\\S+\"\\s*$ ^ \\[error\\] \\d+#\\d+: \\*\\d+ no user/password was provided for basic authentication, client: &lt;HOST&gt;, server: \\S+, request: \"\\S+ \\S+ HTTP/\\d+\\.\\d+\", host: \"\\S+\"\\s*$ 123sudo cp /etc/fail2ban/filter.d/apache-badbots.conf /etc/fail2ban/filter.d/nginx-badbots.confcd /etc/fail2ban/filter.dsudo nano nginx-nohome.conf Content of nginx-nohome.conf 12345[Definition]failregex = ^&lt;HOST&gt; -.*GET .*/~.*ignoreregex = 1sudo nano nginx-noproxy.conf Content:12345[Definition]failregex = ^&lt;HOST&gt; -.*GET http.*ignoreregex = Run:1sudo service fail2ban restart Protect WP pages with basic auth123456sudo apt-get updatesudo apt-get install apache2-utilssudo htpasswd -c /etc/nginx/.htpasswd sammysudo htpasswd /etc/nginx/.htpasswd another_usercat /etc/nginx/.htpasswd sudo nano /etc/nginx/sites-enabled/default 12345678910111213141516location /wp-admin &#123; auth_basic \"Restricted\"; auth_basic_user_file /etc/nginx/.htpasswd;&#125;location /wp-admin/admin-ajax.php &#123; allow all;&#125;location = /wp-login.php &#123; auth_basic \"Restricted\"; auth_basic_user_file /etc/nginx/.htpasswd; include fastcgi_params; fastcgi_pass unix:/run/php/php7.0-fpm.sock; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#125; Disable xml-rpc.php by using plugin: 123wp plugin install disable-xml-rpcwp plugin activate disable-xml-rpcsudo service nginx restart Disable ping responsesTo temporarily disable ping, under root run: 1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all To permanently disable ping: 1sudo nano /etc/sysctl.conf Then add: 1net.ipv4.icmp_echo_ignore_all = 1","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://www.yuxifan.com/tags/Linux/"},{"name":"Wordpress","slug":"Wordpress","permalink":"https://www.yuxifan.com/tags/Wordpress/"},{"name":"LEMP","slug":"LEMP","permalink":"https://www.yuxifan.com/tags/LEMP/"}]},{"title":"Config Tomcat session timeout","slug":"config-tomcat-session-timeout","date":"2017-02-23T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/02/23/config-tomcat-session-timeout/","link":"","permalink":"https://www.yuxifan.com/2017/02/23/config-tomcat-session-timeout/","excerpt":"","text":"There are three places to config Tomcat web application session timeout: $tomcat_home/conf/web.xml$your_webapp/WEB-INF/web.xmlmanual invocation of HttpSession.setMaxInactiveInterval(int)","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"Tomcat","slug":"Tomcat","permalink":"https://www.yuxifan.com/tags/Tomcat/"}]},{"title":"Parse Excel spreadsheet in Ruby","slug":"parse-excel-spreadsheet-in-ruby","date":"2017-01-29T02:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/01/29/parse-excel-spreadsheet-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2017/01/29/parse-excel-spreadsheet-in-ruby/","excerpt":"","text":"First, install this gem: Roo 1gem install roo Then, use classes/methods provided in Roo to access Excel data, e.g. there is my example to iterate Excel spreadsheet data. 123456789101112131415161718192021222324252627282930313233# gem install roorequire 'roo'xsl = Roo::Spreadsheet.open('./test1.xlsx')xsl.sheets.each do |sheet_name| puts '' puts sheet_name puts '--------------' sheet = xsl.sheet(sheet_name) if !sheet.nil? last_row = sheet.last_row last_column = sheet.last_column if !last_row.nil? and !last_column.nil? for row in 1..last_row for col in 1..last_column v = sheet.cell(row, col) if v.nil? puts \"NIL\" else puts \"[\"+row.to_s+\",\"+col.to_s+\"]: \" + sheet.cell(row, col) end end end else puts 'Seems no data in sheet: ' + sheet_name end endend","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"excel","slug":"excel","permalink":"https://www.yuxifan.com/tags/excel/"},{"name":"spreadsheet","slug":"spreadsheet","permalink":"https://www.yuxifan.com/tags/spreadsheet/"}]},{"title":"SSL certificate error for rubygems.org and the fix","slug":"ssl-certificate-problem-for-ruby-gems-and-solution","date":"2017-01-27T02:10:12.000Z","updated":"2017-06-28T13:13:12.839Z","comments":true,"path":"2017/01/27/ssl-certificate-problem-for-ruby-gems-and-solution/","link":"","permalink":"https://www.yuxifan.com/2017/01/27/ssl-certificate-problem-for-ruby-gems-and-solution/","excerpt":"","text":"While running bundle install in my rails application, I have seen this error message: Fetching source index from https://rubygems.org/Retrying fetcher due to error (2/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn’t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change ‘https’ to ‘http’.Retrying fetcher due to error (3/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn’t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change ‘https’ to ‘http’.Retrying fetcher due to error (4/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn’t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change ‘https’ to ‘http’.Could not verify the SSL certificate for https://rubygems.org/.There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn’t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connectwithout using SSL, edit your Gemfile sources and change ‘https’ to ‘http’. Here is the solution for this problem: Update gem version1234cd /var/tmpwget --no-check-certificate https://rubygems.org/downloads/rubygems-update-2.6.7.gemgem install --local /var/tmp/rubygems-update-2.6.7.gemupdate_rubygems --no-ri --no-rdoc Restart VM and try to run bundle install again. If the above solution is not workingIf this process does not work for you, you can try manually adding the new certificate. Step 1: Download certificate manually1wget https://raw.githubusercontent.com/rubygems/rubygems/master/lib/rubygems/ssl_certs/index.rubygems.org/GlobalSignRootCA.pem -O /var/tmp/GlobalSignRootCA.pem Step 2: Locate RubyGems certificate directory in your installation123gem which rubygemscd /home/yuxi/.rbenv/versions/2.3.1/lib/ruby/site_ruby/2.3.0/rubygems/ssl_certs/rubygems.orgcp /var/tmp/GlobalSignRootCA.pem .","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gem","slug":"gem","permalink":"https://www.yuxifan.com/tags/gem/"},{"name":"ssl","slug":"ssl","permalink":"https://www.yuxifan.com/tags/ssl/"}]},{"title":"Create a shared folder between VirtualBox host and guest","slug":"create-shared-folder-in-virtualbox-vm","date":"2017-01-11T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/01/11/create-shared-folder-in-virtualbox-vm/","link":"","permalink":"https://www.yuxifan.com/2017/01/11/create-shared-folder-in-virtualbox-vm/","excerpt":"","text":"(1) Configure a shared folder in VM settings (2) Start VM box (3) Click “Devices -&gt; Insert Guest Additions CD Image” (4) Log in to the VM (5) Mount CD-ROM: 12sudo mount /dev/cdrom /media/cdromcd /media/cdrom (6) Install dependencies: 1sudo apt-get install -y dkms build-essential linux-headers-generic linux-headers-$(uname -r) (7)Install Guest Additions 12sudo su -./VBoxLinuxAdditions.run (8)Check that kernel extensions are up and running: 1sudo modprobe vboxsf If cannot find vboxsf, run following commands: 123/opt/VBoxGuestAdditions-4.3.30/init/vboxadd setupsudo apt-get install virtualbox-guest-utilssudo apt-get install virtualbox-guest-dkms (9) When get vboxsf working, 12sudo mkdir /mnt/rubysrcmount -t vboxsf rubysrc /mnt/rubysrc (10) To do auto mount, edit /etc/fstab and add:SharedFolder /mnt/share vboxsf defaults 0 0","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"virtualbox","slug":"virtualbox","permalink":"https://www.yuxifan.com/tags/virtualbox/"}]},{"title":"Useful linux commands","slug":"useful-linux-commands","date":"2017-01-03T05:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2017/01/03/useful-linux-commands/","link":"","permalink":"https://www.yuxifan.com/2017/01/03/useful-linux-commands/","excerpt":"","text":"Fix typos in the command line12dp *.txt /var/tmp^dp^cp Find commands that you don’t know1apropos \"mount file\" Execute command from bash historyExecute the last executed command1!! Execute the command with all the arguments passed to the previous command1!* Get the first argument of the last executed command1!ˆ Get the last argument of the last executed command1!$ Execute the third command in bash history1!3 Use comma and braces to simplify commandsBackup system.yaml to system.bak1cp system.yaml&#123;,.bak&#125; Restore it1mv system.yaml&#123;.bak,&#125; Copy a file, with target filename with prefix ‘bak’1cp system.yaml bak-!#^ Display process tree1ps -aux -forest Ncdu - ncurses disk usage analyzer12sudo apt-get install ncdu ncdu","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"}]},{"title":"Sqlite3 command line","slug":"sqlite3-command-line","date":"2016-12-23T02:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/12/23/sqlite3-command-line/","link":"","permalink":"https://www.yuxifan.com/2016/12/23/sqlite3-command-line/","excerpt":"","text":"To load sqlite3 cli: 1sqlite3 DB_NAME List tables: 1.tables List all table schemas 12.schema.schema TABLE_NAME","categories":[{"name":"database","slug":"database","permalink":"https://www.yuxifan.com/categories/database/"}],"tags":[{"name":"sqlite","slug":"sqlite","permalink":"https://www.yuxifan.com/tags/sqlite/"}]},{"title":"Sending and receiving custom domain emails by mailgun and gmail","slug":"sending-and-receiving-custom-domain-emails-by-mailgun-and-gmail","date":"2016-12-14T09:51:12.000Z","updated":"2017-06-28T13:16:21.028Z","comments":true,"path":"2016/12/14/sending-and-receiving-custom-domain-emails-by-mailgun-and-gmail/","link":"","permalink":"https://www.yuxifan.com/2016/12/14/sending-and-receiving-custom-domain-emails-by-mailgun-and-gmail/","excerpt":"","text":"Setting up a custom domain email address is widely discussed and there are lots of ways to do it, e.g. by using Zoho mail services. However, we have to say the most popular web mail client is Gmail. Gmail is fast, robust and awesome. Here is the way on how to use Mailgun and Gmail to send and receive emails without installing / configuring anything on your server! Create a mailgun accountRegister a mailgun account by using your gmail. Don’t use your custom email account (you want to create later within Mailgun) as it will cause trouble while validating your Mailgun account. You may be asked to validating both your email address and a mobile number. After validation, you will be presented with a dashboard. Add a domainNow under “Domains”, click “Add New Domain”. Follow the instructions and set your DNS records with whoever manages your DNS. Here is my configurations: Create email address under custom domainClick “Manage SMTP Credentials”, then click “New SMTP Credential”. Create your own email address. Add routesClick on the “Routes” link on the top to set up email forwarding. The most simple route is to ‘Catch all’ emails to your domain and forward them to your gmail. Now you can receive emails sending to the custom domain email address. Sending within GmailWithin Gmail, go to the Accounts tab and click “Add another email address you own”. Once you open this window, enter the email address you wish to send from. Then click “Add Account”, now you’re done! As shown below, you can send emails from your custom domain email within Gmail! Enjoy your free email service for up to 10,000 emails a month!","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"gmail","slug":"gmail","permalink":"https://www.yuxifan.com/tags/gmail/"},{"name":"mailgun","slug":"mailgun","permalink":"https://www.yuxifan.com/tags/mailgun/"}]},{"title":"Ruby tutorials - rss","slug":"ruby-tutorials-rss","date":"2016-11-28T02:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/28/ruby-tutorials-rss/","link":"","permalink":"https://www.yuxifan.com/2016/11/28/ruby-tutorials-rss/","excerpt":"","text":"Install gem1gem install feedjira Parse RSS12345678910111213141516require 'feedjira'feedurl = 'https://www.yuxifan.com/atom.xml'feed = Feedjira::Feed.fetch_and_parse feedurlputs feed.titleputs feed.urlputs feed.entries.lengthfeed.entries.each do |item| puts item.title puts '------------' puts item.url puts ' 'end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"rss","slug":"rss","permalink":"https://www.yuxifan.com/tags/rss/"}]},{"title":"Ubuntu image manipulation commands","slug":"image-manipulation-commands-in-ubuntu","date":"2016-11-25T05:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/25/image-manipulation-commands-in-ubuntu/","link":"","permalink":"https://www.yuxifan.com/2016/11/25/image-manipulation-commands-in-ubuntu/","excerpt":"","text":"Resize image (and convert)First, install imagemagick: 12sudo apt-get update sudo apt-get install imagemagick --fix-missing Image resize command:123convert source.jpg -resize 200x100 target.jpgconvert -resize 50% source.jpg target.pngconvert -resize 600x source.jpg target.jpg Compress or Optimize imagesFor JPG images:12sudo apt-get install jpegoptimjpegoptim test.jpg For PNG images:12sudo apt-get install optipngoptipng filename.png","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"image","slug":"image","permalink":"https://www.yuxifan.com/tags/image/"},{"name":"imagemagick","slug":"imagemagick","permalink":"https://www.yuxifan.com/tags/imagemagick/"}]},{"title":"How to check available disk space and email a report in Ruby","slug":"report-disk-space-in-ruby","date":"2016-11-23T02:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/23/report-disk-space-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/11/23/report-disk-space-in-ruby/","excerpt":"","text":"1234567891011121314151617181920212223242526# gem install sys-filesystem# gem install gmailrequire 'sys/filesystem'require 'gmail'threshold = 9000stat = Sys::Filesystem.stat(\"/\")mb_available = stat.block_size * stat.blocks_available / 1024 / 1024mb_s = mb_available.to_sgb_s = (mb_available / 1024).to_sputs 'Available space: ' + mb_s + ' MB / ' + gb_s + ' GB'if mb_available &lt; threshold puts 'Sending email ... ' user = \"YOUR GMAIL\" pass = \"PASSWORD\" gmail = Gmail.connect(user, pass) email = gmail.compose do to \"XXXX@gmail.com\" subject \"Your available disk space\" body \"Space available: \" + mb_s + \"MB / \" + gb_s + \"GB\" end email.deliver!end You may want to add it into cron job list.","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"}]},{"title":"QR code generator","slug":"qrcode-generator","date":"2016-11-17T06:40:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/17/qrcode-generator/","link":"","permalink":"https://www.yuxifan.com/2016/11/17/qrcode-generator/","excerpt":"","text":"Enter url： var qrcode = new QRCode(document.getElementById(\"qrcode\"), { width : 150, height : 150 }); function makeCode () { var elText = document.getElementById(\"text\"); if (!elText.value) { alert(\"Input a text\"); elText.focus(); return; } qrcode.makeCode(elText.value); } makeCode(); $(\"#text\"). on(\"blur\", function () { makeCode(); }). on(\"keydown\", function (e) { if (e.keyCode == 13) { makeCode(); } });","categories":[{"name":"tool","slug":"tool","permalink":"https://www.yuxifan.com/categories/tool/"}],"tags":[{"name":"QR code","slug":"QR-code","permalink":"https://www.yuxifan.com/tags/QR-code/"}],"keywords":"QR code generator"},{"title":"How to implement a distributed Redis message processing system by using Redis / Resque in Rails","slug":"implement-a-distributed-redis-message-processing-system-in-rails","date":"2016-11-15T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/15/implement-a-distributed-redis-message-processing-system-in-rails/","link":"","permalink":"https://www.yuxifan.com/2016/11/15/implement-a-distributed-redis-message-processing-system-in-rails/","excerpt":"","text":"I’ve written a post introducing how to implement a distributed message processing system in standalone Ruby application. Now I will do the same, but in Rails. Architecture design Add dependenciesadd it in Gemfile:1gem 'resque' Also, modify Rakefile:12require \"resque\"require \"resque/tasks\" Add resque web admin UI:In Gemfile: 1gem 'resque-web', require: 'resque_web' Later you should be able to access it via: http://SERVER:PORT/resque Define a worker (message consumer)Add file app/workers/my_worker.rb12345678910111213class MyWorker @queue = \"mymessages\" def self.perform(message) puts \"worker is processing job: #&#123;message&#125;\" # implement your logic here ... puts \"Successfully processed: #&#123;message&#125;\" endend Don’t forget to update Rakefile: 1require_relative \"app/workers/my_worker.rb\" Connect to your remote Redis server in your Rails application1RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rails s -b0.0.0.0 If you want to set up a basic HTTP authentication for your Resque web admin UI, run: 1RESQUE_WEB_HTTP_BASIC_AUTH_USER=YOUR_USERNAME RESQUE_WEB_HTTP_BASIC_AUTH_PASSWORD=YOUR_PASSWORD RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rails s -b0.0.0.0 To load the worker1RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rake environment resque:work QUEUE=* Note: there is an additional parameter ‘environment’ which is required by Rails 5 (don’t know why - it just works) The client side (message producer)First, you need to copy over ‘MyWorker.rb’ to your client application, e.g. the message producer. In the appropriate class, e.g. controller / actor class, add: 1require_relative 'my_worker' Also, make a call to send message to Redis, which will be consumed by your worker later. 1Resque.enqueue(MyWorker, your_message)","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"redis","slug":"redis","permalink":"https://www.yuxifan.com/tags/redis/"},{"name":"rails","slug":"rails","permalink":"https://www.yuxifan.com/tags/rails/"}]},{"title":"Convert between simplified Chinese and traditional Chinese","slug":"simplified-chinese-traditional-chinese-converter","date":"2016-11-15T06:40:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/15/simplified-chinese-traditional-chinese-converter/","link":"","permalink":"https://www.yuxifan.com/2016/11/15/simplified-chinese-traditional-chinese-converter/","excerpt":"","text":"From: Traditional Chinese Simplified Chinese To: Simplified Chinese Traditional Chinese Convert Enter text to convert： Result： Source language encoding： Target language encoding： Trans.init();","categories":[{"name":"tool","slug":"tool","permalink":"https://www.yuxifan.com/categories/tool/"}],"tags":[{"name":"Chinese converter","slug":"Chinese-converter","permalink":"https://www.yuxifan.com/tags/Chinese-converter/"}],"keywords":"simplified Chinese and traditional Chinese converter"},{"title":"How to trigger a cron job based on file modifications","slug":"how-to-trigger-a-cron-job-based-on-file-modifications","date":"2016-11-14T06:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/","link":"","permalink":"https://www.yuxifan.com/2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/","excerpt":"","text":"Cron is an amazon tool that allowing Linux and Unix users to run commands or scripts at a given date and time. However, sometimes people want to trigger a job based on file modifications / creations. Here we can use incron to do this kinds of automation. Incron installation1sudo apt-get install incron Using IncronIf /etc/incron.allow exists only users listed here may use incron. Otherwise if /etc/incron.deny exists only users NOT listed here may use incron. If none of these files exists everyone is allowed to use incron. So firstly, we need to modify incron.allow to add users in: 1nano incron.allow Add users e.g. root, yuxi into the list: 12rootyuxi Now we can list all incron jobs: 1incrontab -l Set up incron job for user ‘yuxi’ 1incrontab -e Add the following line to do an auto deployment to git repository: 1/home/yuxi/website_src/ IN_MODIFY /home/yuxi/deploy_website.sh","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"incron","slug":"incron","permalink":"https://www.yuxifan.com/tags/incron/"}]},{"title":"Upload files to Dropbox in Linux command line","slug":"how-to-upload-files-to-dropbox-in-linux-command-line","date":"2016-11-09T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/","link":"","permalink":"https://www.yuxifan.com/2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/","excerpt":"","text":"Here is the instruction on how to upload files to your Dropbox without installing Dropbox: 1) First, install the amazing Dropbox Uploader script1git clone https://github.com/andreafabrizi/Dropbox-Uploader.git 2) Open the following URL in your Browser, and log in using your account: https://www.dropbox.com/developers/apps 3) Click on “Create App”, then select “Dropbox API app” 4) As shown below, configure your dropbox app, choosing the app permissions and access restrictions to your DropBox folder” 5) Enter the “App Name” you like, e.g. YuxiUploader 6) Click on the “Create App” button 7) When your new App is successfully created, click on the Generate button. under the ‘Generated access token’ section, then copy and paste the new access token here to your Linux command line. 8) Now you are ready to upload files to your dropbox, e.g. Upload file:1./dropbox_uploader.sh upload YOUR_LOCAL_FILE_NAME / List files:12./dropbox_uploader.sh list./dropbox_uploader.sh list subfolder Download file:1./dropbox_uploader.sh download subfolder/1.pdf ./1.pdf Create a remote folder:1./dropbox_uploader.sh mkdir /subfolder Delete a remote folder1./dropbox_uploader.sh delete /subfolder","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"dropbox","slug":"dropbox","permalink":"https://www.yuxifan.com/tags/dropbox/"},{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"}]},{"title":"Ruby gem command","slug":"ruby-gem-command","date":"2016-11-06T02:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/06/ruby-gem-command/","link":"","permalink":"https://www.yuxifan.com/2016/11/06/ruby-gem-command/","excerpt":"","text":"Install Ruby gems from Github source repositoryTo to this, you have to install a gem called specific_install first. 12gem install specific_installgem specific_install https://github.com/XXX/YYY.git [BRANCH NAME]","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gem","slug":"gem","permalink":"https://www.yuxifan.com/tags/gem/"}]},{"title":"Two/multi phases XSLT processing","slug":"multi-phases-xslt-processing","date":"2016-11-04T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/11/04/multi-phases-xslt-processing/","link":"","permalink":"https://www.yuxifan.com/2016/11/04/multi-phases-xslt-processing/","excerpt":"","text":"Two/multi phases XSLT is very useful if you do have multiple steps to process your data. Here is an example. I have a data dictionary to store authors: 123456&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;authors&gt; &lt;author&gt;Wyatt, T.&lt;/author&gt; &lt;author&gt;Smith, A.&lt;/author&gt; &lt;author&gt;Davids, D.&lt;/author&gt;&lt;/authors&gt; Everytime when I’ve got a new XML document, I need to check a particular element (fullName) to update data dictionary file. The XML document looks like this: 1234567&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;doc&gt; &lt;creator&gt; &lt;fullName&gt;Wyatt, A.&lt;/fullName&gt; &lt;/creator&gt; ...&lt;/doc&gt; While updating data dictionary, I need to make sure there is no duplicate getting into data dictionary. Multi-phase processing can be used to do this job. The key point for multiphase processing is to store the previous processing result into a variable and use that variable as the initial XML to process in the later phase. The example XSLT is shown below: 12345678910111213141516171819202122232425262728293031323334353637383940&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" exclude-result-prefixes=\"xsl\"&gt; &lt;xsl:strip-space elements=\"*\"/&gt; &lt;xsl:output method=\"xml\" indent=\"yes\"/&gt; &lt;xsl:variable name=\"authorsDoc\" select=\"document('authors.xml', /)\"/&gt; &lt;xsl:template match=\"/\"&gt; &lt;!-- Phase 1 --&gt; &lt;xsl:variable name=\"phase-1-output\"&gt; &lt;authors&gt; &lt;!-- If the newly entered author does not exist in current data dictionary, then add it to DD --&gt; &lt;xsl:for-each select=\"/doc/creator/fullName[.!='']\"&gt; &lt;xsl:variable name=\"currentName\" select=\".[.=$authorsDoc//author]\"/&gt; &lt;xsl:if test=\"not($currentName)\"&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:if&gt; &lt;/xsl:for-each&gt; &lt;!-- Copy all existing DD authors, only once --&gt; &lt;xsl:for-each select=\"$authorsDoc/authors/author[.!='']\"&gt; &lt;xsl:sort select=\".\"/&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:for-each&gt; &lt;/authors&gt; &lt;/xsl:variable&gt; &lt;!-- Phase 2 --&gt; &lt;authors&gt; &lt;xsl:for-each select=\"$phase-1-output/authors/author[.!='' and (not(.=preceding-sibling::author))]\"&gt; &lt;!-- Remove duplicates --&gt; &lt;xsl:sort select=\".\"/&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:for-each&gt; &lt;/authors&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;","categories":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/categories/xslt/"}],"tags":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"}]},{"title":"How to configure a proxy server in ubuntu - step by step","slug":"how-to-configure-a-proxy-server-in-ubuntu-step-by-step","date":"2016-10-31T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/","link":"","permalink":"https://www.yuxifan.com/2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/","excerpt":"","text":"Sometimes people wants to get access to their favorite websites while they are travelling. As some websites are blocked in some countries. Here is the step by step tutorial on how to configure a proxy server on ubuntu. Get a VPS serverFirst you need to get a VPS server up and running. I recommend Vultr’s $5 plan. Install server software1234sudo apt-get install python-gevent pythonsudo apt-get install python-pipsudo pip install setuptoolssudo pip install shadowsocks Then create the configuration file: 123cd ~mkdir proxynano proxy/config.json The content is:12345678&#123; &quot;server&quot;:&quot;YOUR_VPS_IP&quot;, &quot;server_port&quot;:8888, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;YOUR_PROXY_SERVER_PASSWORD&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot;&#125; Run server: 1nohup ssserver -c proxy/config.json You may need to add a new firewall rule if you use ufw: 1sudo ufw allow 8888 Configure client softwareDownload client from: https://shadowsocks.org/en/download/clients.html Configure proxy client as showing in the following screen dump: Then right client the proxy client application icon in the task bar and tick ‘Enable system Proxy’ Enjoy free browsing now!","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"proxy server","slug":"proxy-server","permalink":"https://www.yuxifan.com/tags/proxy-server/"}]},{"title":"ubuntu apt problem and solution","slug":"ubuntu-apt-update-problems-and-solutions","date":"2016-10-24T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/24/ubuntu-apt-update-problems-and-solutions/","link":"","permalink":"https://www.yuxifan.com/2016/10/24/ubuntu-apt-update-problems-and-solutions/","excerpt":"","text":"1234567While running sudo apt-get update, I was hitting this problem:W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://apt.puppetlabs.com precise Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7F438280EF8D349FW: Failed to fetch http://apt.puppetlabs.com/dists/precise/ReleaseW: Some index files failed to download. They have been ignored, or old ones used instead. The solution is to run the following commands:12sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7F438280EF8D349F","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"apt","slug":"apt","permalink":"https://www.yuxifan.com/tags/apt/"}]},{"title":"Ruby tutorials - json","slug":"ruby-tutorials-json","date":"2016-10-17T01:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/17/ruby-tutorials-json/","link":"","permalink":"https://www.yuxifan.com/2016/10/17/ruby-tutorials-json/","excerpt":"","text":"Generate json data12345678910111213require 'json'doc1 = JSON 'test1' =&gt; 12doc2 = JSON['test2' =&gt; 12]puts doc1puts doc2doc3 = JSON.generate [22, 23, &#123;\"a\"=&gt;55&#125;, false, true, nil, 1..12]puts doc3doc4 = JSON.pretty_generate [22, 23, &#123;\"a\"=&gt;55&#125;, false, true, nil, 1..12]puts doc4 Parse json123456789require 'json'json = JSON.parse '&#123;\"foo\":\"bar\", \"ding\":\"dong\"&#125;'puts json[\"ding\"]str = '&#123;\"desc\":&#123;\"key1\":\"value1\",\"key2\":\"value2\"&#125;,\"content\":&#123;\"stats\":&#123;\"a\":8,\"b\":12,\"c\":10&#125;&#125;&#125;'json2 = JSON.parse(str)puts json2[\"desc\"][\"key1\"]puts json2[\"content\"][\"stats\"][\"b\"]","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"json","slug":"json","permalink":"https://www.yuxifan.com/tags/json/"}]},{"title":"Ruby tutorials - nokogiri","slug":"ruby-tutorials-nokogiri","date":"2016-10-16T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/16/ruby-tutorials-nokogiri/","link":"","permalink":"https://www.yuxifan.com/2016/10/16/ruby-tutorials-nokogiri/","excerpt":"","text":"The XML file1234567891011121314151617181920212223242526272829303132333435&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bookstore&gt; &lt;book category=\"cooking\"&gt; &lt;title lang=\"en\"&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=\"children\"&gt; &lt;title lang=\"en\"&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=\"web\"&gt; &lt;title lang=\"en\"&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=\"web\" cover=\"paperback\"&gt; &lt;title lang=\"en\"&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt;&lt;/bookstore&gt; Read from file123456789101112131415161718192021require 'nokogiri'doc = Nokogiri::XML(File.open('books.xml'))books = doc.xpath('/bookstore/book')books.each do |book| puts '------------------' puts 'Category: ' + book.attr('category') puts 'Title: ' + book.xpath('title')[0].content puts 'Author: ' + book.xpath('author')[0].content puts 'Year: ' + book.xpath('year')[0].content puts 'Price: ' + book.xpath('price')[0].contentend# return a single elementcooking_book = doc.at_xpath(\"/bookstore/book[@category='cooking']\")# Update content of an elementcooking_book_author = cooking_book.xpath('author')[0]cooking_book_author.content = 'David Robinson' Read from string12345require 'nokogiri'doc = Nokogiri::XML(\"&lt;staff_list&gt;&lt;staff&gt;&lt;name&gt;Paul&lt;/name&gt;&lt;/staff&gt;&lt;staff&gt;&lt;name&gt;Andrew&lt;/name&gt;&lt;/staff&gt;&lt;/staff_list&gt;\")puts doc.root","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"nokogiri","slug":"nokogiri","permalink":"https://www.yuxifan.com/tags/nokogiri/"},{"name":"tutorials","slug":"tutorials","permalink":"https://www.yuxifan.com/tags/tutorials/"}]},{"title":"How can I get the final URL after redirects using Ruby?","slug":"how-can-i-get-the-final-url-after-redirects-using-ruby","date":"2016-10-13T01:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/","excerpt":"","text":"1234567891011121314151617181920212223242526272829require 'net/http'require 'uri'class UrlUtils def self.get_final_url(url) exit = false while exit==false r = Net::HTTP.get_response(URI.parse(url)) resp = r.inspect.to_s if (resp.include? '301') || (resp.include? '302') url = r['location'] else exit = true end end url endendurl = 'http://bit.ly/2ecC7Cc'print url + ' -&gt; 'final_url = UrlUtils.get_final_url(url)puts final_url","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"URL redirects","slug":"URL-redirects","permalink":"https://www.yuxifan.com/tags/URL-redirects/"}]},{"title":"How to send a vultr account balance report in Ruby","slug":"vultr-account-balance-report-in-ruby","date":"2016-10-12T01:10:12.000Z","updated":"2017-06-28T13:15:34.413Z","comments":true,"path":"2016/10/12/vultr-account-balance-report-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/12/vultr-account-balance-report-in-ruby/","excerpt":"","text":"Vultr is a great VPS provider. I have a couple of VMs hosted in Vultr. However, according to Vultr T&amp;C: “Failure to make payment of Fees for Services when due may result in the suspension or termination of Services.” It would be nice to have an alert when the Vultr account balance reaches a threshold. Here is the implementation in Ruby. I prefer to have a monthly report no matter if the threshold has been reached. However, if you want to have an email alert when the threshold is reached, the following code can be easily modified to do that. Install gems123gem install faradaygem install jsongem install gmail The Ruby code1234567891011121314151617181920212223242526272829require 'faraday'require 'json'require 'gmail'conn = Faraday.new(:url =&gt; 'https://api.vultr.com') do |c| c.use Faraday::Request::UrlEncoded c.use Faraday::Adapter::NetHttpendresponse = conn.get do |req| req.url '/v1/account/info' req.headers['API-Key'] = 'your API key'endresponseStr = response.bodyresponseJson = JSON.parse(responseStr)balance = responseJson['balance']pending_charges = responseJson['pending_charges']user = \"your gmail\"pass = \"your gmail password\"gmail = Gmail.connect(user, pass)email = gmail.compose do to \"the email address receiving reports\" subject \"Your Vultr balance\" body \"Balance: \" + balance + \"\\n\" + \"Pending charges: \" + pending_chargesendemail.deliver!","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"vultr","slug":"vultr","permalink":"https://www.yuxifan.com/tags/vultr/"}]},{"title":"Image Manipulation in Ruby","slug":"image-manipulation-in-ruby","date":"2016-10-11T01:10:12.000Z","updated":"2017-06-28T13:13:24.959Z","comments":true,"path":"2016/10/11/image-manipulation-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/11/image-manipulation-in-ruby/","excerpt":"","text":"Resize an imageInstall RMagick12sudo apt-get install imagemagick libmagickwand-devgem install rmagick Code:123456789101112131415require 'rmagick'class ImageProcessor def self.resize(srcimg, tgtimg, width, height) img = Magick::Image.read(srcimg).first target = Magick::Image.new(width, height) do #self.background_color = 'white' end img.resize_to_fit!(width, height) target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg) endendImageProcessor.resize(\"src.png\",\"tgt.png\", 100, 60) WatermarkWatermark with image12345678910111213141516require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.read(\"cc.jpg\").firstmark.background_color = \"Transparent\"# resize the watermark to 60% of the image we want to watermarkwatermark = mark.resize_to_fit(img.rows * 0.6, img.columns * 0.6)# rotate this mark by 45 degrees anticlockwise (optional)watermark.rotate!(-45)# add watermark with 40% opacity for watermark, 100% opacity for image and position is centernewimg = img.dissolve(watermark, 0.4, 1, Magick::CenterGravity)new.write(\"watermark_img.jpg\") Watermark with text1234567891011121314151617require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.new(img.rows, img.columns) &#123;self.background_color = \"none\"&#125;draw = Magick::Draw.newdraw.annotate(mark, 0, 0, 0, 0, \"www.yuxifan.com\") do draw.gravity = Magick::CenterGravity draw.pointsize = 50 draw.font_family = \"Arial Mono\" # set font draw.fill = \"black\" # set text color draw.stroke = \"none\" # remove strokeendmark = mark.rotate(-45)img2 = img.watermark(mark, 0.2, 0.5, Magick::CenterGravity)img2.write(\"text_watermark.jpg\") Watermark with both image and text1234567891011121314151617181920212223require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.new(img.rows, img.columns) &#123;self.background_color = \"none\"&#125;draw = Magick::Draw.newdraw.annotate(mark, 0, 0, 0, 0, \"www.yuxifan.com\") do draw.gravity = Magick::CenterGravity draw.pointsize = 50 draw.font_family = \"Arial\" draw.fill = \"black\" # set text color draw.stroke = \"none\" # remove strokeendmark = mark.rotate(-45)img2 = img.watermark(mark, 0.2, 0.5, Magick::CenterGravity)markimg = Magick::Image.read(\"cc.jpg\").firstmarkimg.background_color = \"Transparent\"watermark = markimg.resize_to_fit(img2.rows * 0.3, img2.columns * 0.3)img3 = img2.watermark(watermark, 0.2, 0.3, Magick::SouthEastGravity)img3.write(\"watermark_txtimg.jpg\")","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"image","slug":"image","permalink":"https://www.yuxifan.com/tags/image/"}]},{"title":"How to shorten URLs in Ruby","slug":"how-to-shorten-url-in-ruby","date":"2016-10-10T01:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/10/how-to-shorten-url-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/10/how-to-shorten-url-in-ruby/","excerpt":"","text":"Install gems:12gem install bitlygem install google_url_shortener Calling bitly shortener in RubyFile: testbitly.rb123456789101112131415161718require 'bitly'if ARGV.length != 1 puts 'Usage: ruby testbitly.rb URL' exitendbitlyusername = 'YOUR_USERNAME'bitlytoken = 'YOUR_TOKEN'Bitly.use_api_version_3Bitly.configure do |config| config.api_version = 3 config.access_token = bitlytokenendu = Bitly.client.shorten(ARGV[0])puts u.short_url Test 1ruby testbitly.rb https://www.yuxifan.com Calling google shortener in RubyFile: testgoogle.rb 12345678require 'google_url_shortener'Google::UrlShortener::Base.api_key = \"YOUR_API_KEY\"url = \"https://www.yuxifan.com/\"gurl = Google::UrlShortener::Url.new(:long_url =&gt; url)u = gurl.shorten!puts u Test 1ruby testgoogle.rb","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"shortener","slug":"shortener","permalink":"https://www.yuxifan.com/tags/shortener/"}]},{"title":"How to generate QR code in Ruby","slug":"how-to-generate-qrcode-in-ruby","date":"2016-10-10T00:10:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/10/how-to-generate-qrcode-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/10/how-to-generate-qrcode-in-ruby/","excerpt":"","text":"How to generate a QR code in Ruby Install gem:1gem install rqrcode Ruby code12345678910111213require 'rqrcode'qrcode = RQRCode::QRCode.new(\"https://www.yuxifan.com/\")png = qrcode.as_png( resize_gte_to: false, resize_exactly_to: false, fill: 'white', color: 'black', size: 360, border_modules: 4, module_px_size: 6, file: \"/var/tmp/qrx360.png\" )","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"qr","slug":"qr","permalink":"https://www.yuxifan.com/tags/qr/"}]},{"title":"How to implement a distributed message processing system by using Redis / Resque in standalone Ruby applications","slug":"how-to-implement-a-distributed-redis-in-ruby-standalone-application","date":"2016-10-05T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/","link":"","permalink":"https://www.yuxifan.com/2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/","excerpt":"","text":"Most Ruby developers are using Rails for their application. Integrating Redis/Resque in Rails are quite easy and there are lots of resources. But standalone applications are still needed. Here is how to use Reids/Resuqe in a distributed standalone Ruby application (without Rails). Architecture design Define a processor (message consumer)File: file_processor.rb1234567891011class FileProcessor @queue = \"file_process\" def self.perform(file) puts \"Processing file: #&#123;file&#125;\" sleep 3 # fake file processing here ... puts \"Successfully processed: #&#123;file&#125;\" endend Define a client (message producer)File: file_processor_client.rb123456789101112131415require \"yaml\"require \"resque\"require_relative \"file_processor\"# Configuring (remote) redis serverrails_env = ENV['RAILS_ENV'] || 'development'resque_config = YAML.load_file(File.join(__dir__, 'config/', 'resque.yml'))Resque.redis = resque_config[rails_env]params = ARGVputs \"Send files for processing: #&#123;params.join(\" \")&#125;\"params.each do |param| puts \"Sending a file to process: #&#123;param&#125;\" Resque.enqueue(FileProcessor, param)end ConfigurationsFile: config/resque.yml123development: 127.0.0.1:6379test: YOUR_TEST_SERVER:6379production: YOUR_PRODUCTION_SERVER:6379 File: config/initializers/resque.rb123rails_env = ENV['RAILS_ENV'] || 'development'resque_config = YAML.load_file(File.join(__dir__, '../', 'resque.yml'))Resque.redis = resque_config[rails_env] File: Rakefile123456789101112require 'yaml'require \"resque\"require \"resque/tasks\"require_relative \"file_processor\"namespace :resque do desc \"config resque ENV\" rails_env = ENV['RAILS_ENV'] || 'development' resque_config = YAML.load_file(File.join(__dir__, 'config/', 'resque.yml')) Resque.redis = resque_config[rails_env]end Start workerRun:1rake resque:work QUEUE=* Start client to send messages to Redis1RAILS_ENV=production ruby file_processor_client.rb 1.jpg 2.png 3.tif","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"redis","slug":"redis","permalink":"https://www.yuxifan.com/tags/redis/"}]},{"title":"Implement a slider in Hexo","slug":"implement-a-slider-in-hexo","date":"2016-09-10T21:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/09/10/implement-a-slider-in-hexo/","link":"","permalink":"https://www.yuxifan.com/2016/09/10/implement-a-slider-in-hexo/","excerpt":"","text":"Download bxsliderDownload from http://bxslider.com/ and copy jquery.bxslider.css to hexo project css folder and copy js file to js folder. Create file bxslider.ejsAdd file into your theme folder, e.g. themes/YOUR_THEME/layout/common/bxslider.ejs 1234567891011121314151617181920212223&lt;script type=\"text/javascript\" src=\"/js/bxslider/jquery.bxslider.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/css/bxslider/jquery.bxslider.css\" /&gt;&lt;ul class=\"bxslider\"&gt; &lt;% for (var slider in theme.sliders) &#123; %&gt; &lt;% if (slider) &#123; %&gt; &lt;li&gt; &lt;a href=\"&lt;%= theme.sliders[slider]['url']%&gt;\"&gt; &lt;img src=\"&lt;%= theme.sliders[slider]['image']%&gt;\" title=\"&lt;%= theme.sliders[slider]['text'] %&gt;\"/&gt; &lt;/a&gt; &lt;/li&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt;&lt;/ul&gt;&lt;script type=\"text/javascript\"&gt;$(document).ready(function()&#123; $('.bxslider').bxSlider(&#123; mode: 'fade', captions: true &#125;);&#125;);&lt;/script&gt; Modify index.ejsAdd a reference to bxslider:1&lt;%- partial('common/bxslider') %&gt; Define slider in _config.yml12345678910111213sliders: slider1: image: /images/slider/1.jpg url: /post1/ text: slider1 text slider2: image: /images/slider/2.jpg url: /post2/ text: slider2 text slider3: image: /images/slider/3.jpg url: /post3/ text: slider3 text More configurationsChange default style for .bx-wrapper .bx-viewport in the css, e.g. border, and left You may change the slider width in style.styl","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"},{"name":"slider","slug":"slider","permalink":"https://www.yuxifan.com/tags/slider/"}]},{"title":"How to implement hierarchical facets","slug":"2016-09-06-how-to-implement-hierarchical-faces","date":"2016-09-06T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/","link":"","permalink":"https://www.yuxifan.com/2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/","excerpt":"","text":"0. EnvironmentsUbuntu 14.x Open JDK 7.x Solr 3.6.x Apache Tomcat 7.x 1. The problemThe solr documentation summaries approaches to implement hierarchical facets in: http://wiki.apache.org/solr/HierarchicalFaceting#Approaches_to_Hierarchical_Facets_in_Solr in different ways: 1) Use a prefix before the data to store hierarchy information, e.g.123Doc#1: 0/Fruit, 1/Apple, 2/RedDoc#2: 0/Fruit, 1/PearDoc#3: 0/Fruit, 1/Apple, 2/Yellow OR (even worse) 123Doc#1: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/RedDoc#2: 0/Fruit, 1/Fruit/PearDoc#3: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/Yellow The problem of this approach is that we have to store extra data into solr and the hierarchy information is duplicated across solr. 2) “breadcrumbs”123Doc#1: Fruit &gt; Apple &gt; RedDoc#2: Fruit &gt; PearDoc#3: Fruit &gt; Apple &gt; Yellow The above 2 suggested solutions all contain duplicated data, which is really bad. Actually, the hierarchy information should be stored separately to avoid duplication. 2. The solution1) Store hierarchy information into an XML, e.g. a data dictionary:123456789&lt;fruits&gt; &lt;apple&gt; &lt;red/&gt; &lt;yellow/&gt; &lt;/apple&gt; &lt;pear&gt; &lt;/pear&gt; ......&lt;fruits&gt; 2) Aggregate the hierarchy information with the actual solr data while retrieving data, e.g.123456ITERATE ALL FACETS GET DATA DICTIONARY FOR CURRENT FACET ITERATE FACET ITEMS in CURRENT FACET AGGREGATE DD WITH FACET ITEMS AND SAVE TO A HIERARCHICAL LIST ENDEND 3) In the client code, based on the hierarchical list, constructing HTML elements, e.g, in JSP.12345678910111213141516171819&lt;c:forEach items=\"$&#123;availableFacets&#125;\" var=\"fc\"&gt; &lt;ul class=\"XXXX\"&gt; &lt;c:forEach items=\"$&#123;fc.iterator&#125;\" var=\"facetElement\"&gt; &lt;li class=\"expanded\"&gt; &lt;c:out value=\"$&#123;facetElement.label&#125;\"&gt;&lt;/c:out&gt;[&lt;c:out value=\"$&#123;facetElement.count&#125;\" /&gt;]&lt;/a&gt; &lt;/li&gt; &lt;!-- Second level --&gt; &lt;ul&gt; &lt;c:forEach items=\"$&#123;facetElement.iterator&#125;\" var=\"secondLevelFacetElement\"&gt; &lt;li class=\"expanded\"&gt; &lt;c:out value=\"$&#123;secondLevelFacetElement.label&#125;\"&gt;&lt;/c:out&gt;[&lt;c:out value=\"$&#123;secondLevelFacetElement.count&#125;\" /&gt;]&lt;/a&gt; &lt;/li&gt; &lt;!-- deeper levels --&gt; &lt;/c:forEach&gt; &lt;/ul&gt; &lt;/c:forEach&gt; &lt;/ul&gt;&lt;/c:forEach&gt; 4) Based on the ul / li tags, render the hierarchical facets in Javascript, e.g. using jsTree (https://www.jstree.com/)","categories":[{"name":"solr","slug":"solr","permalink":"https://www.yuxifan.com/categories/solr/"}],"tags":[{"name":"JSTL","slug":"JSTL","permalink":"https://www.yuxifan.com/tags/JSTL/"},{"name":"solr","slug":"solr","permalink":"https://www.yuxifan.com/tags/solr/"}]},{"title":"Top Hexo plugins recommended","slug":"top-hexo-plugins","date":"2016-09-05T03:51:12.000Z","updated":"2017-06-28T13:12:51.995Z","comments":true,"path":"2016/09/05/top-hexo-plugins/","link":"","permalink":"https://www.yuxifan.com/2016/09/05/top-hexo-plugins/","excerpt":"","text":"hexo-generator-minifyThis plugin is used to minify CSS / Javascript code. Install: 1npm install hexo-generator-minify --save Run:1hexo gm --cssSafe hexo-generator-sitemap1npm install hexo-generator-sitemap --save It generates sitemap and save it to sitemap.xml. If you want to save to another file, then configure it in _config.yml:12sitemap: path: sitemap.xml hexo-autonofollowThis plugin is used to add rel=”external nofollow” to external links. 1npm install hexo-autonofollow --save You may need to modify _config.yml:1234nofollow: enable: true exclude: - www.yuxifan.com hexo-generator-feedThis plugin is used to genearte rss/atom feed. Install: 1npm install hexo-generator-feed --save Configuration:1234feed: type: atom path: atom.xml limit: 20 hexo-generator-json-contentThis plugin is used to genearte json content which is required by on-site search1npm install hexo-generator-json-content --save The generated content.json may get bigger and bigger while the site contents grow. You may want to use title / keywords ONLY for the generated json file. Then, you may need to add keyword fileds for your posts. Also modify file: node_modules/hexo-generator-json-content/index.js12345678910111213141516171819202122232425262728293031323334353637383940414243if (posts) &#123; var postsPropertyNames = Object.getOwnPropertyNames(posts).filter(function (item) &#123; return posts[item]; &#125;); content = site.posts.sort('-date').filter(function (post) &#123; return post.published; &#125;).map(function (post) &#123; var actualPost = &#123;&#125;; postsPropertyNames.forEach(function(item)&#123; if (item === 'excerpt') &#123; actualPost[item] = minify(post.excerpt); &#125; else if (item === 'text') &#123; if(post.keywords) &#123; actualPost[item] = minify(post.keywords); &#125;else if(post.description) &#123; actualPost[item] = minify(post.description); &#125;else &#123; actualPost[item] = minify(post.title); &#125; &#125; else if (item === 'categories') &#123; actualPost[item] = post.categories.map(function (cat) &#123; return &#123; name: cat.name, slug: cat.slug, permalink: cat.permalink &#125;; &#125;); &#125; else if (item === 'tags') &#123; actualPost[item] = post.tags.map(function (tag) &#123; return &#123; name: tag.name, slug: tag.slug, permalink: tag.permalink &#125;; &#125;); &#125; else if (item === 'keywords' &amp;&amp; cfg.keywords) &#123; actualPost[item] = getKeywords(minify(post.excerpt)); &#125; else &#123; actualPost[item] = post[item]; &#125; &#125;); return actualPost; &#125;); If cannot install Hexo/plugins in Ubuntu 14, Try: 1sudo apt-get install nodejs-legacy Install Hexo in Ubuntu 16.04LTS 123456cd ~curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.shsudo bash nodesource_setup.shsudo apt-get install nodejssudo npm install hexo-cli -g","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"minify","slug":"minify","permalink":"https://www.yuxifan.com/tags/minify/"},{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"},{"name":"plugin","slug":"plugin","permalink":"https://www.yuxifan.com/tags/plugin/"},{"name":"seo","slug":"seo","permalink":"https://www.yuxifan.com/tags/seo/"},{"name":"nofollow","slug":"nofollow","permalink":"https://www.yuxifan.com/tags/nofollow/"},{"name":"sitemap","slug":"sitemap","permalink":"https://www.yuxifan.com/tags/sitemap/"},{"name":"feed","slug":"feed","permalink":"https://www.yuxifan.com/tags/feed/"}]},{"title":"How to close an iframe within iframe itself","slug":"2016-09-02-how-to-close-an-iframe-within-iframe-itself","date":"2016-09-02T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/","link":"","permalink":"https://www.yuxifan.com/2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/","excerpt":"","text":"It depends on how the iframe window is created. For example, if the iframe window has an ID or name which can be used to identify the iframe, the iframe can be closed from the parent window. In iframe, the javascript code is: 1parent.closeIframe(); In parent, the code is: 123function closeIframe() &#123; $('#iframeID').remove();&#125; If you don’t know the iframe ID, iframe usually can be closed by clicking anywhere in the parent window. For instance, the iframe opened by thickbox. The javascript code in iframe is: 1parent.document.elementFromPoint(0, 0).click();","categories":[{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/tags/javascript/"}]},{"title":"How to pass multiple parameters with same name to JSTL","slug":"2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL","date":"2016-08-31T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/","link":"","permalink":"https://www.yuxifan.com/2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/","excerpt":"","text":"In JSP EL, param can be used to retrieve URL parameters. For example: 123&lt;c:forEach items=\"$&#123;param&#125;\" var=\"currentParam\"&gt;XXX&lt;/c:forEach&gt; However, if multiple values with same name are passed, only the first value can be retrieved. I’m not sure if it’s a bug of JSTL or it has been designed to work this way. The easiest solution is to get all parameters in JSP scriptlet and pass it to JSTL. 1234&lt;%Map&lt;String, String[]&gt; allparams = request.getParameterMap();pageContext.setAttribute(\"allparams\", allparams);%&gt; Then use it in JSTL: 1234567&lt;c:forEach items=\"$&#123;allparams&#125;\" var=\"currentParam\"&gt; &lt;c:out value='$&#123;currentParam.key&#125;' /&gt;: &lt;c:forEach items=\"$&#123;currentParam.value&#125;\" var=\"currentValue\"&gt; &lt;c:out value='$&#123;currentValue&#125;' /&gt; / &lt;/c:forEach&gt; &lt;br/&gt;&lt;/c:forEach&gt;","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"JSTL","slug":"JSTL","permalink":"https://www.yuxifan.com/tags/JSTL/"}]},{"title":"Notepad++ not starting - problem and solution","slug":"2016-08-20-notepad-plus-plus-not-starting","date":"2016-08-24T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/08/24/2016-08-20-notepad-plus-plus-not-starting/","link":"","permalink":"https://www.yuxifan.com/2016/08/24/2016-08-20-notepad-plus-plus-not-starting/","excerpt":"","text":"Notepad++ has suddenly stopped launching, e.g. although it shows in the Windows task manager, but no window appears. Somebody has found it is caused by a recent dropbox update. The problem is in the Shell Explorer DLL of Dropbox which manages things like sync icons in Windows Explorer. Uninstalling Dropbox can fix this problem. But for most people, Dropbox is more important than Notepad++. What I did to fix this problem is to disable Explorer plugin of Notepad++, e.g. just move Explorer.dll from Notepad++ plugins folder to its sub folder ‘disabled’. (Make sure you’ve killed all NPP++ processes before moving. I’m sure NPP will release a fix soon.","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/tags/windows/"},{"name":"notepad++","slug":"notepad","permalink":"https://www.yuxifan.com/tags/notepad/"}]},{"title":"How to add hyperlink cues in CSS by using fontawesome","slug":"how-to-add-hyperlink-cues-by-using-fontawesome","date":"2016-05-05T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/05/05/how-to-add-hyperlink-cues-by-using-fontawesome/","link":"","permalink":"https://www.yuxifan.com/2016/05/05/how-to-add-hyperlink-cues-by-using-fontawesome/","excerpt":"","text":"I like the little icons next to hyperlinks that indicate if that link will take me offsite, open a popup, or link to a file (as opposed to another page within the site). Here’s how to do it using fontawesome, purely in CSS. First, add fontawesome CDN url, ideally in your header: 1&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css\"&gt; Then, define the styles (below is in stylus syntax): 123456789101112131415161718a[rel^=\"external\"]:after content \"\\f08e\" font-family FontAwesome font-weight normal font-style normal display inline-block text-decoration none padding-left 3pxa[href^=\"http://www.YOURDOMAIN.com\"]:after, a.no_icon:after content \"\" !important padding-left 0a[href^=\"https://www.YOURDOMAIN.com\"]:after, a.no_icon:after content \"\" !important padding-left 0 If you are not familar with stylus, here is the CSS code: 12345678910111213141516171819a[rel^=\"external\"]:after &#123; content: \"\\f08e\"; font-family: FontAwesome; font-weight: normal; font-style: normal; display: inline-block; text-decoration: none; padding-left: 3px;&#125;a[href^=\"http://www.YOURDOMAIN.com\"]:after,a.no_icon:after &#123; content: \"\" !important; padding-left: 0;&#125;a[href^=\"https://www.YOURDOMAIN.com\"]:after,a.no_icon:after &#123; content: \"\" !important; padding-left: 0;&#125;","categories":[{"name":"css","slug":"css","permalink":"https://www.yuxifan.com/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://www.yuxifan.com/tags/css/"},{"name":"fontawesome","slug":"fontawesome","permalink":"https://www.yuxifan.com/tags/fontawesome/"},{"name":"hyperlink","slug":"hyperlink","permalink":"https://www.yuxifan.com/tags/hyperlink/"}]},{"title":"How to add configuration to Ruby gem","slug":"2016-05-01-how-to-add-configuration-to-ruby-gem","date":"2016-05-01T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/05/01/2016-05-01-how-to-add-configuration-to-ruby-gem/","link":"","permalink":"https://www.yuxifan.com/2016/05/01/2016-05-01-how-to-add-configuration-to-ruby-gem/","excerpt":"","text":"1. Add config into gem definition file directly12345678module XXXX...... class &lt;&lt; self ENV['environment'] = 'production' end......end 2. Use yamlCreate your own yaml files, e.g. config1.yml and config2.yml Link them by adding the following code into gem definition file: 12345678910111213141516171819202122module XXXX...... def self.configure_with(config_file_path) logger = Logger.new('XXXX.log') begin config = YAML::load(IO.read(config_file_path)) rescue Errno::ENOENT logger.warn(\"YAML configuration file couldn't be found. Using defaults.\"); return rescue Exception logger.warn(\"Cannot load YAML configuration. Using defaults.\"); return end configure(config) end configure_with('config/config1.yml') configure_with('config/config2.yml')......end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gem","slug":"gem","permalink":"https://www.yuxifan.com/tags/gem/"}]},{"title":"How to run sudo command without entering password","slug":"2016-02-02-how-to-run-sudo-command-without-password","date":"2016-02-02T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/02/02/2016-02-02-how-to-run-sudo-command-without-password/","link":"","permalink":"https://www.yuxifan.com/2016/02/02/2016-02-02-how-to-run-sudo-command-without-password/","excerpt":"","text":"Note: it’s UNSECURE, so only use it in a controlled environment!!! Run: 1sudo visudo With content: 1your_user_name (USERID) ALL=(ALL) NOPASSWD: ALL","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"}]},{"title":"Standalone Ruby application error messages and fixes","slug":"2016-02-01-standalone-ruby-application-error-messages-and-fixes","date":"2016-02-01T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/02/01/2016-02-01-standalone-ruby-application-error-messages-and-fixes/","link":"","permalink":"https://www.yuxifan.com/2016/02/01/2016-02-01-standalone-ruby-application-error-messages-and-fixes/","excerpt":"","text":"RuntimeError: You’re depending on RAILS_ENV for setting your environment. Please use ENV[‘environment’] for non-rails environment setting: ‘rake foo:bar environment=test’Fix: in your gem definition file, add: 123456module XXXX class &lt;&lt; self ENV['environment'] = 'production' endend You attempted to set the property ‘XXXX’ to a scalar value. However, this property is declared as being multivalued.Fix: pass an array to the method","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"}]},{"title":"How to get latest year in xslt","slug":"2016-01-15-get-latest-year-in-xslt","date":"2016-01-15T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/15/2016-01-15-get-latest-year-in-xslt/","link":"","permalink":"https://www.yuxifan.com/2016/01/15/2016-01-15-get-latest-year-in-xslt/","excerpt":"","text":"###XML 1234567891011121314151617181920212223&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;publications&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;1999&lt;/year&gt; &lt;title&gt;test1&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;2012&lt;/year&gt; &lt;title&gt;test2&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;1980&lt;/year&gt; &lt;title&gt;test3&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;2007&lt;/year&gt; &lt;title&gt;test4&lt;/title&gt; &lt;/publication&gt;&lt;/publications&gt; ###XSLT: 12345678910111213141516171819&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt; &lt;xsl:output method=\"xml\" indent=\"yes\" encoding=\"UTF-8\"/&gt; &lt;xsl:template match=\"/\"&gt; &lt;!-- get latest year --&gt; &lt;xsl:for-each select=\"/publications/publication/year\"&gt; &lt;xsl:variable name=\"currentYear\" select=\"normalize-space(text())\"/&gt; &lt;xsl:if test=\"self::node()[count(../..//year[. &amp;gt; $currentYear])=0]\"&gt; &lt;latestYear&gt; &lt;xsl:value-of select=\"$currentYear\"/&gt; &lt;/latestYear&gt; &lt;/xsl:if&gt; &lt;/xsl:for-each&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;","categories":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/categories/xslt/"}],"tags":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"}]},{"title":"git basic commands and tips","slug":"2016-01-14-git-basic-commands","date":"2016-01-14T09:51:12.000Z","updated":"2017-06-28T13:11:50.064Z","comments":true,"path":"2016/01/14/2016-01-14-git-basic-commands/","link":"","permalink":"https://www.yuxifan.com/2016/01/14/2016-01-14-git-basic-commands/","excerpt":"","text":"BranchCreate a new branch “feature_x” and switch to that branch: 1git checkout -b feature_x Switch back to master: 1git checkout master Push to remote server: 1git push -u origin feature_branch_name Merge 12git checkout &lt;branch_merge_to&gt;git merge &lt;branch_merge_from&gt; Diff branches 1git diff &lt;source_branch&gt; &lt;target_branch&gt; Delete a branch both locally and remotely 12git branch -D &lt;branch_name&gt;git push origin --delete &lt;branch_name&gt; Rollback a merge 12git log # find the commit/merge IDgit reset --hard ID Compare file in 2 branches 1git diff mybranch..master -- myfile.cs TagCreate a new tag 1git tag -a v1.4 -m \"my version 1.4\" List tags 1git tag -l Update git to latest version1234sudo apt-get install python-software-properties sudo add-apt-repository ppa:git-core/ppa sudo apt-get update sudo apt-get install git Reset all changes after last commit to gitFirst reset the changes 1git reset HEAD --hard then clean out everything untracked 1git clean -fd If .gitignore is not workingIf you didn’t create .gitignore before running git init, then you have to remove folders from the cache, for example, .gitignore content 12/target/.idea Just run: 12345git rm -r target --cachedgit rm -r .idea --cachedgit add .git commit -m \"XXX\"git push Then, any further changes to target / .idea will be ignored StatisticsList authors ordered by the number of commits 1git shortlog -s -n List files being changed between SHAs1git diff --name-only SHA1 SHA2 List files being changed between the tenth latest commit and the fifth latest.1git diff --name-only HEAD~10 HEAD~5 List files being changed between days1git diff --name-only \"@&#123;3 days ago&#125;\" \"@&#123;0 days ago&#125;\" Tree view of git commits1git log --graph --oneline","categories":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/tags/git/"}]},{"title":"How to connect to ActiveMQ in Ruby","slug":"2016-01-13-how-to-connect-to-activemq-in-ruby","date":"2016-01-13T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/13/2016-01-13-how-to-connect-to-activemq-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/01/13/2016-01-13-how-to-connect-to-activemq-in-ruby/","excerpt":"","text":"There are some Ruby gems to do the job, e.g. activemessaging and https://github.com/stompgem/stomp Here is the example of using stomp: Publisher’s code 12345678910111213141516171819202122232425262728293031require 'rubygems'require 'stomp'class StompPublisherTest def initialize end def run user = \"\" pass = \"\" host = \"YOUR HOST NAME\" port = '61613' publish_to = '/queue/test_messages' client = Stomp::Client.new(user, pass, host, port) message = \"test_messages #&#123;ARGV[0]&#125;\" for i in (1..5) puts 'Sending message' client.publish(publish_to, \"#&#123;i&#125;: #&#123;message&#125;\", &#123;:persistent =&gt; true&#125;) puts \"(#&#123;Time.now&#125;)Message sent: #&#123;i&#125;\" sleep 0.2 end endendspt = StompPublisherTest.newspt.run And here is the consumer’s code: 123456789101112131415161718192021222324252627282930313233343536373839require 'rubygems'require 'stomp'class StompConsumerTest def initialize end def run user = \"\" pass = \"\" host = \"YOUR HOST NAME\" port = '61613' subscribe_to = '/queue/test_messages' client = Stomp::Client.new(user, pass, host, port) puts 'Subscribing ' + subscribe_to client.subscribe(subscribe_to, &#123;:ack =&gt; \"client\", \"activemq.prefetchSize\" =&gt; 1, \"activemq.exclusive\" =&gt; true &#125;) do |msg| File.open(\"messageclient.log\", \"a\") do |f| puts '----------received message-----------' puts msg.body f.write(msg.body) f.write(\"\\n----------------\\n\") end client.acknowledge(msg) end loop do sleep(1) print \".\" end endendst = StompConsumerTest.newst.run","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"activemq","slug":"activemq","permalink":"https://www.yuxifan.com/tags/activemq/"}]},{"title":"How to push git reposiotry to multiple hosts","slug":"2016-01-12-push-git-repository-to-multiple-hosts","date":"2016-01-12T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/12/2016-01-12-push-git-repository-to-multiple-hosts/","link":"","permalink":"https://www.yuxifan.com/2016/01/12/2016-01-12-push-git-repository-to-multiple-hosts/","excerpt":"","text":"First, add new remote server1git remote add gl git@gitlab.com:USERNAME/PROJECT.git Second, push to multiple servers1234git add .git commit -m \"m\"git push (This pushes to origin)git push gl master Third, if want to add multiple SSH keys, can do it this way:1nano ~/.ssh/config: 123456Host gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/gitsync/idHost github.com ......","categories":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/tags/git/"}]},{"title":"How to get pretty print in nokogiri by using xslt","slug":"2016-01-11-pretty-print-in-nokogiri-by-using-xslt","date":"2016-01-11T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/11/2016-01-11-pretty-print-in-nokogiri-by-using-xslt/","link":"","permalink":"https://www.yuxifan.com/2016/01/11/2016-01-11-pretty-print-in-nokogiri-by-using-xslt/","excerpt":"","text":"###XSLT 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt; &lt;xsl:output method=\"xml\" encoding=\"utf-8\"/&gt; &lt;xsl:param name=\"indent-increment\" select=\"' '\"/&gt; &lt;xsl:template name=\"newline\"&gt; &lt;xsl:text disable-output-escaping=\"yes\"&gt;&lt;/xsl:text&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"comment() | processing-instruction()\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:copy /&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"text()\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:value-of select=\"normalize-space(.)\"/&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"text()[normalize-space(.)='']\"/&gt; &lt;xsl:template match=\"*\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:choose&gt; &lt;xsl:when test=\"count(child::*) &gt; 0\"&gt; &lt;xsl:copy&gt; &lt;xsl:copy-of select=\"@*\"/&gt; &lt;xsl:apply-templates select=\"*|text()\"&gt; &lt;xsl:with-param name=\"indent\" select=\"concat ($indent, $indent-increment)\"/&gt; &lt;/xsl:apply-templates&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;/xsl:copy&gt; &lt;/xsl:when&gt; &lt;xsl:otherwise&gt; &lt;xsl:copy-of select=\".\"/&gt; &lt;/xsl:otherwise&gt; &lt;/xsl:choose&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt; ###Ruby script: 123456require 'nokogiri'require 'nokogiri-pretty'xsl = Nokogiri::XSLT(File.read(\"pretty_print.xsl\"))xml = Nokogiri(File.read(\"XML_FILE_NAME\"))File.open(\"output.xml\", \"w:UTF-8\") &#123; |f| f &lt;&lt; xsl.apply_to(xml).to_s &#125;","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"},{"name":"nokogiri","slug":"nokogiri","permalink":"https://www.yuxifan.com/tags/nokogiri/"}]},{"title":"How to send email via Gmail in ruby","slug":"2016-01-10-send-email-via-gmail-in-ruby","date":"2016-01-10T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/10/2016-01-10-send-email-via-gmail-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/01/10/2016-01-10-send-email-via-gmail-in-ruby/","excerpt":"","text":"Here is the example: 12345678910111213require 'gmail'user = \"GMAIL EMAIL ADDRESS\"pass = \"GMAIL PASSWORD\"gmail = Gmail.connect(user, pass)email = gmail.compose do to \"XXX@XYZ.COM\" subject \"EMAIL SUBJECT\" body \"EMAIL BODY TEXT\" add_file \"/var/tmp/TEST.jpg\"endemail.deliver! Make sure turn on ‘access from less secure app’ in your Google account settings:","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gmail","slug":"gmail","permalink":"https://www.yuxifan.com/tags/gmail/"}]},{"title":"How to call a restful web service in Faraday","slug":"2016-01-09-use-restful-web-services-in-faraday","date":"2016-01-09T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/09/2016-01-09-use-restful-web-services-in-faraday/","link":"","permalink":"https://www.yuxifan.com/2016/01/09/2016-01-09-use-restful-web-services-in-faraday/","excerpt":"","text":"Here is the example: 123456789101112131415161718192021222324require 'faraday'conn = Faraday.new(:url =&gt; 'https://SERVER_URL') do |c| c.use Faraday::Request::UrlEncoded # encode request params as \"www-form-urlencoded\" c.use Faraday::Response::Logger # log request &amp; response to STDOUT c.use Faraday::Adapter::NetHttp # perform requests with Net::HTTPendconn.basic_auth('USERNAME', 'PASSWORD')# Get requestresponse = conn.get 'REST SERVICE PATH' puts response.body.inspect# Post requestresponse = conn.post 'REST SERVICE PATH', CONTENT do |req| req.headers['Content-Type'] = '' # the default Content Type set by Faraday is NOT accepted by some web services, so you may need to reset it to blank req.headers['charset'] = 'utf-8'end# Put requestresp = conn.put WEB_SERVICE_URL, CONTENT do |req| req.headers['Content-Type'] = 'YOUR_MIME_TYPE' # OR req.headers['Content-Type'] = ''end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"faraday","slug":"faraday","permalink":"https://www.yuxifan.com/tags/faraday/"}]},{"title":"Most useful notepad++ plugins","slug":"2016-01-08-most-useful-notepad-plus-plus-plugins","date":"2016-01-08T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/08/2016-01-08-most-useful-notepad-plus-plus-plugins/","link":"","permalink":"https://www.yuxifan.com/2016/01/08/2016-01-08-most-useful-notepad-plus-plus-plugins/","excerpt":"","text":"Here are the notepad++ plugins I’m using: 12345678910111. Explorer2. XML Tools3. HTML tag4. NPP FTP5. Compare6. NPPCrypt","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"notepad++","slug":"notepad","permalink":"https://www.yuxifan.com/tags/notepad/"}]},{"title":"Dropbox folder icon overlay problem and solution","slug":"2016-01-07-dropbox-folder-icon-overlay-problem-and-solution","date":"2016-01-07T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/07/2016-01-07-dropbox-folder-icon-overlay-problem-and-solution/","link":"","permalink":"https://www.yuxifan.com/2016/01/07/2016-01-07-dropbox-folder-icon-overlay-problem-and-solution/","excerpt":"","text":"Sometimes, dropbox does not show icons (e.g. synced, unsynced) properly after installing other apps e.g. tortoriseSVN. The reason for that is because both apps want to change the overlay icon. Here is how to fix it: Run regedit and navigate to:1HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers Make sure you have the entire branch backup.Rename those overlays that are rarely used, e.g. the following:12345TortoiseLockedTortoiseIgnoredTortoiseUnversionsed Restart Windows Explorer. If it’s not working, reboot your PC.","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/tags/windows/"},{"name":"dropbox","slug":"dropbox","permalink":"https://www.yuxifan.com/tags/dropbox/"}]},{"title":"How to convert String to InputStream in Java","slug":"2016-01-06-how-to-convert-string-to-inputstream-in-java","date":"2016-01-06T09:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2016/01/06/2016-01-06-how-to-convert-string-to-inputstream-in-java/","link":"","permalink":"https://www.yuxifan.com/2016/01/06/2016-01-06-how-to-convert-string-to-inputstream-in-java/","excerpt":"","text":"Here is the example: 123456789101112131415161718192021222324252627package com.yuxifanimport java.io.BufferedReader;import java.io.ByteArrayInputStream;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;public class String2InputstreamExample &#123; public static void main(String[] args) throws IOException &#123; String s = \"Just a test\"; // First, convert string to InputStream InputStream is = new ByteArrayInputStream(s.getBytes()); // Use BufferedReader to read it BufferedReader br = new BufferedReader(new InputStreamReader(is)); // Output it String currentLine; while ((currentLine = br.readLine()) != null) &#123; System.out.println(currentLine); &#125; br.close(); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"}]},{"title":"How to add disqus into your website","slug":"2016-01-05-how-to-add-disqus-into-website","date":"2016-01-05T09:51:12.000Z","updated":"2017-06-16T10:17:52.226Z","comments":true,"path":"2016/01/05/2016-01-05-how-to-add-disqus-into-website/","link":"","permalink":"https://www.yuxifan.com/2016/01/05/2016-01-05-how-to-add-disqus-into-website/","excerpt":"","text":"Register account in https://disqus.com Create a site in disqus Paste the code into _layouts/post.html 123456789101112131415&lt;script type=\"text/javascript\"&gt; /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */ var disqus_shortname = 'XXXXXXXX'; // required: replace example with your forum shortname // var disqus_developer = 1; // Comment out when the site is live var disqus_identifier = \"&#123;&#123; page.url &#125;&#125;\"; /* * * DON'T EDIT BELOW THIS LINE * * */ (function() &#123; var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); &#125;)();&lt;/script&gt;&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=\"http://disqus.com/?ref_noscript\"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;&lt;a href=\"http://disqus.com\" class=\"dsq-brlink\"&gt;comments powered by &lt;span class=\"logo-disqus\"&gt;Disqus&lt;/span&gt;&lt;/a&gt;","categories":[{"name":"jekyll","slug":"jekyll","permalink":"https://www.yuxifan.com/categories/jekyll/"}],"tags":[{"name":"jekyll","slug":"jekyll","permalink":"https://www.yuxifan.com/tags/jekyll/"},{"name":"disqus","slug":"disqus","permalink":"https://www.yuxifan.com/tags/disqus/"}]},{"title":"List posts by category in Hexo","slug":"2015-10-01-list-posts-by-category-in-hexo","date":"2015-10-01T08:51:12.000Z","updated":"2017-06-16T10:17:52.226Z","comments":true,"path":"2015/10/01/2015-10-01-list-posts-by-category-in-hexo/","link":"","permalink":"https://www.yuxifan.com/2015/10/01/2015-10-01-list-posts-by-category-in-hexo/","excerpt":"","text":"Spend hours to figure it out the documentation is not very helpful! 12345678910111213141516171819202122232425&lt;% site.categories.each(function(cat) &#123; %&gt; &lt;section class=\"archives-wrap\"&gt; &lt;div class=\"archive-year-wrap\"&gt; &lt;p class=\"article-title\" style=\"font-size: 20px;\"&gt;&lt;%= cat.name %&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=\"archives\"&gt; &lt;% var postCount = 0 %&gt; &lt;% cat.posts.sort('-date').limit(4).each(function(post) &#123; %&gt; &lt;% postCount++; %&gt; &lt;% if (postCount % 2 == 1) &#123; %&gt; &lt;div class=\"article-row\"&gt; &lt;% &#125; %&gt; &lt;%- partial('summarynocategory', &#123; post: post &#125;) %&gt; &lt;% if (postCount % 2 == 0) &#123; %&gt; &lt;/div&gt; &lt;% &#125; %&gt; &lt;% &#125;) %&gt; &lt;/div&gt; &lt;/section&gt;&lt;% &#125;) %&gt; and here is the summarynocategory.ejs: 1234567891011121314&lt;article class=\"article article-summary\"&gt; &lt;div class=\"article-summary-inner\"&gt; &lt;% if (theme.customize.thumbnail === true) &#123; %&gt; &lt;%- partial('common/thumbnail', &#123; counter: true &#125;) %&gt; &lt;% &#125; %&gt; &lt;div class=\"article-meta\"&gt; &lt;p class=\"date\"&gt;&lt;time datetime=\"&lt;%= date_xml(post.date) %&gt;\" itemprop=\"datePublished\"&gt;&lt;%= date(post.date) %&gt;&lt;/time&gt;&lt;/p&gt; &lt;/div&gt; &lt;%- partial('post/title', &#123; class_name: 'article-title', linkable: true &#125;) %&gt; &lt;p class=\"article-excerpt\"&gt; &lt;%- excerpt(post) %&gt; &lt;/p&gt; &lt;/div&gt;&lt;/article&gt;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"}]},{"title":"How to batch minify HTML pages in linux command line","slug":"2015-09-21-batch-minify-html-in-linux-terminal","date":"2015-09-21T08:51:12.000Z","updated":"2017-06-16T10:17:52.226Z","comments":true,"path":"2015/09/21/2015-09-21-batch-minify-html-in-linux-terminal/","link":"","permalink":"https://www.yuxifan.com/2015/09/21/2015-09-21-batch-minify-html-in-linux-terminal/","excerpt":"","text":"First, install a nodejs module: 1npm install html-minifier-cli -g Second, write a script like this: 123456cd publicfor f in $(find . -name '*.html'); do echo \"Minifying $f ...\" htmlmin -o $f.min $f mv $f.min $fdone","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"html","slug":"html","permalink":"https://www.yuxifan.com/tags/html/"},{"name":"minify","slug":"minify","permalink":"https://www.yuxifan.com/tags/minify/"}]},{"title":"How to create ubuntu 16 vagrant VM box","slug":"2016-08-20-create-ubuntu-16-vagrant-box","date":"2015-08-20T08:51:12.000Z","updated":"2017-06-16T10:17:52.230Z","comments":true,"path":"2015/08/20/2016-08-20-create-ubuntu-16-vagrant-box/","link":"","permalink":"https://www.yuxifan.com/2015/08/20/2016-08-20-create-ubuntu-16-vagrant-box/","excerpt":"","text":"Some VM box names for ubuntu 16 are not working, e.g. 12config.vm.box = \"ubuntu/xenial64\"config.vm.box = \"https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-vagrant.box\" The main problem for above two name/url is that after creating VM box, the default user ‘ubuntu’ cannot login. The expected user ‘vagrant’ was not created. The working version (in Vagrantfile): 12345678910111213Vagrant.configure(2) do |config| config.vm.provider \"virtualbox\" do |v| v.memory = 2048 v.cpus = 1 end config.vm.box = \"bento/ubuntu-16.04\" config.vm.network \"forwarded_port\", guest: 80, host: 80 ...... end","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"},{"name":"VM","slug":"VM","permalink":"https://www.yuxifan.com/tags/VM/"}]}]}