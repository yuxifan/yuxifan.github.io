{"meta":{"title":"Yuxi Fan","subtitle":"Yuxi's development blog","description":"Yuxi's development blog, Java, Ruby, Rails, Web, Linux, Puppet, Git","author":"Yuxi","url":"https://www.yuxifan.com"},"pages":[],"posts":[{"title":"Sending and receiving custom domain emails by mailgun and gmail","slug":"setting-and-receiving-custom-emails-by-mailgun-and-gmail","date":"2016-12-14T09:51:12.000Z","updated":"2016-12-14T14:08:36.000Z","comments":true,"path":"2016/12/14/setting-and-receiving-custom-emails-by-mailgun-and-gmail/","link":"","permalink":"https://www.yuxifan.com/2016/12/14/setting-and-receiving-custom-emails-by-mailgun-and-gmail/","excerpt":"","text":"Setting up a custom domain email address is widely discussed and there are lots of ways to do it, e.g. by using Zoho mail services. However, we have to say the most popular web mail client is Gmail. Gmail is fast, robust and awesome. Here is the way on how to use Mailgun and Gmail to send and receive emails without installing / configuring anything on your server! Create a mailgun accountRegister a mailgun account by using your gmail. Don’t use your custom email account (you want to create later within Mailgun) as it will cause trouble while validating your Mailgun account. You may be asked to validating both your email address and a mobile number. After validation, you will be presented with a dashboard. Add a domainNow under “Domains”, click “Add New Domain”. Follow the instructions and set your DNS records with whoever manages your DNS. Here is my configurations: Create email address under custom domainClick “Manage SMTP Credentials”, then click “New SMTP Credential”. Create your own email address. Add routesClick on the “Routes” link on the top to set up email forwarding. The most simple route is to ‘Catch all’ emails to your domain and forward them to your gmail. Now you can receive emails sending to the custom domain email address. Sending within GmailWithin Gmail, go to the Accounts tab and click “Add another email address you own”. Once you open this window, enter the email address you wish to send from. Then click “Add Account”, now you’re done! As shown below, you can send emails from your custom domain email within Gmail! Enjoy your free email service for up to 10,000 emails a month!","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"gmail","slug":"gmail","permalink":"https://www.yuxifan.com/tags/gmail/"},{"name":"mailgun","slug":"mailgun","permalink":"https://www.yuxifan.com/tags/mailgun/"}]},{"title":"Ruby tutorials - rss","slug":"ruby-tutorials-rss","date":"2016-11-28T02:10:12.000Z","updated":"2016-11-28T11:00:53.000Z","comments":true,"path":"2016/11/28/ruby-tutorials-rss/","link":"","permalink":"https://www.yuxifan.com/2016/11/28/ruby-tutorials-rss/","excerpt":"","text":"Install gem1gem install feedjira Parse RSS12345678910111213141516require 'feedjira'feedurl = 'https://www.yuxifan.com/atom.xml'feed = Feedjira::Feed.fetch_and_parse feedurlputs feed.titleputs feed.urlputs feed.entries.lengthfeed.entries.each do |item| puts item.title puts '------------' puts item.url puts ' 'end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"rss","slug":"rss","permalink":"https://www.yuxifan.com/tags/rss/"}]},{"title":"Ubuntu image manipulation commands","slug":"image-manipulation-commands-in-ubuntu","date":"2016-11-25T05:51:12.000Z","updated":"2016-11-25T13:53:16.000Z","comments":true,"path":"2016/11/25/image-manipulation-commands-in-ubuntu/","link":"","permalink":"https://www.yuxifan.com/2016/11/25/image-manipulation-commands-in-ubuntu/","excerpt":"","text":"Resize image (and convert)First, install imagemagick: 12sudo apt-get update sudo apt-get install imagemagick --fix-missing Image resize command:123convert source.jpg -resize 200x100 target.jpgconvert -resize 50% source.jpg target.pngconvert -resize 600x source.jpg target.jpg Compress or Optimize imagesFor JPG images:12sudo apt-get install jpegoptimjpegoptim test.jpg For PNG images:12sudo apt-get install optipngoptipng filename.png","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"image","slug":"image","permalink":"https://www.yuxifan.com/tags/image/"},{"name":"imagemagick","slug":"imagemagick","permalink":"https://www.yuxifan.com/tags/imagemagick/"}]},{"title":"How to check available disk space and email a report in Ruby","slug":"report-disk-space-in-ruby","date":"2016-11-23T02:10:12.000Z","updated":"2016-11-23T10:36:45.000Z","comments":true,"path":"2016/11/23/report-disk-space-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/11/23/report-disk-space-in-ruby/","excerpt":"","text":"1234567891011121314151617181920212223242526# gem install sys-filesystem# gem install gmailrequire 'sys/filesystem'require 'gmail'threshold = 9000stat = Sys::Filesystem.stat(\"/\")mb_available = stat.block_size * stat.blocks_available / 1024 / 1024mb_s = mb_available.to_sgb_s = (mb_available / 1024).to_sputs 'Available space: ' + mb_s + ' MB / ' + gb_s + ' GB'if mb_available &lt; threshold puts 'Sending email ... ' user = \"YOUR GMAIL\" pass = \"PASSWORD\" gmail = Gmail.connect(user, pass) email = gmail.compose do to \"XXXX@gmail.com\" subject \"Your available disk space\" body \"Space available: \" + mb_s + \"MB / \" + gb_s + \"GB\" end email.deliver!end You may want to add it into cron job list.","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"}]},{"title":"QR code generator","slug":"qrcode-generator","date":"2016-11-17T06:40:12.000Z","updated":"2016-11-17T15:49:44.000Z","comments":true,"path":"2016/11/17/qrcode-generator/","link":"","permalink":"https://www.yuxifan.com/2016/11/17/qrcode-generator/","excerpt":"","text":"Enter url： var qrcode = new QRCode(document.getElementById(\"qrcode\"), { width : 150, height : 150 }); function makeCode () { var elText = document.getElementById(\"text\"); if (!elText.value) { alert(\"Input a text\"); elText.focus(); return; } qrcode.makeCode(elText.value); } makeCode(); $(\"#text\"). on(\"blur\", function () { makeCode(); }). on(\"keydown\", function (e) { if (e.keyCode == 13) { makeCode(); } });","categories":[{"name":"tool","slug":"tool","permalink":"https://www.yuxifan.com/categories/tool/"}],"tags":[{"name":"QR code","slug":"QR-code","permalink":"https://www.yuxifan.com/tags/QR-code/"}],"keywords":"QR code generator"},{"title":"How to implement a distributed Redis message processing system by using Redis / Resque in Rails","slug":"implement-a-distributed-redis-message-processing-system-in-rails","date":"2016-11-15T09:51:12.000Z","updated":"2016-11-17T14:52:18.000Z","comments":true,"path":"2016/11/15/implement-a-distributed-redis-message-processing-system-in-rails/","link":"","permalink":"https://www.yuxifan.com/2016/11/15/implement-a-distributed-redis-message-processing-system-in-rails/","excerpt":"","text":"I’ve written a post introducing how to implement a distributed message processing system in standalone Ruby application. Now I will do the same, but in Rails. Architecture design Add dependenciesadd it in Gemfile:1gem 'resque' Also, modify Rakefile:12require \"resque\"require \"resque/tasks\" Add resque web admin UI:In Gemfile: 1gem 'resque-web', require: 'resque_web' Later you should be able to access it via: http://SERVER:PORT/resque Define a worker (message consumer)Add file app/workers/my_worker.rb12345678910111213class MyWorker @queue = \"mymessages\" def self.perform(message) puts \"worker is processing job: #&#123;message&#125;\" # implement your logic here ... puts \"Successfully processed: #&#123;message&#125;\" endend Don’t forget to update Rakefile: 1require_relative \"app/workers/my_worker.rb\" Connect to your remote Redis server in your Rails application1RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rails s -b0.0.0.0 If you want to set up a basic HTTP authentication for your Resque web admin UI, run: 1RESQUE_WEB_HTTP_BASIC_AUTH_USER=YOUR_USERNAME RESQUE_WEB_HTTP_BASIC_AUTH_PASSWORD=YOUR_PASSWORD RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rails s -b0.0.0.0 To load the worker1RAILS_RESQUE_REDIS=YOUR_REDIS_SERVER_IP:PORT rake environment resque:work QUEUE=* Note: there is an additional parameter ‘environment’ which is required by Rails 5 (don’t know why - it just works) The client side (message producer)First, you need to copy over ‘MyWorker.rb’ to your client application, e.g. the message producer. In the appropriate class, e.g. controller / actor class, add: 1require_relative 'my_worker' Also, make a call to send message to Redis, which will be consumed by your worker later. 1Resque.enqueue(MyWorker, your_message)","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"redis","slug":"redis","permalink":"https://www.yuxifan.com/tags/redis/"},{"name":"rails","slug":"rails","permalink":"https://www.yuxifan.com/tags/rails/"}]},{"title":"Convert between simplified Chinese and traditional Chinese","slug":"simplified-chinese-traditional-chinese-converter","date":"2016-11-15T06:40:12.000Z","updated":"2016-11-15T11:37:52.000Z","comments":true,"path":"2016/11/15/simplified-chinese-traditional-chinese-converter/","link":"","permalink":"https://www.yuxifan.com/2016/11/15/simplified-chinese-traditional-chinese-converter/","excerpt":"","text":"From: Traditional Chinese Simplified Chinese To: Simplified Chinese Traditional Chinese Convert Enter text to convert： Result： Source language encoding： Target language encoding： Trans.init();","categories":[{"name":"tool","slug":"tool","permalink":"https://www.yuxifan.com/categories/tool/"}],"tags":[{"name":"Chinese converter","slug":"Chinese-converter","permalink":"https://www.yuxifan.com/tags/Chinese-converter/"}],"keywords":"simplified Chinese and traditional Chinese converter"},{"title":"How to trigger a cron job based on file modifications","slug":"how-to-trigger-a-cron-job-based-on-file-modifications","date":"2016-11-14T06:51:12.000Z","updated":"2016-11-14T10:21:06.000Z","comments":true,"path":"2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/","link":"","permalink":"https://www.yuxifan.com/2016/11/14/how-to-trigger-a-cron-job-based-on-file-modifications/","excerpt":"","text":"Cron is an amazon tool that allowing Linux and Unix users to run commands or scripts at a given date and time. However, sometimes people want to trigger a job based on file modifications / creations. Here we can use incron to do this kinds of automation. Incron installation1sudo apt-get install incron Using IncronIf /etc/incron.allow exists only users listed here may use incron. Otherwise if /etc/incron.deny exists only users NOT listed here may use incron. If none of these files exists everyone is allowed to use incron. So firstly, we need to modify incron.allow to add users in: 1nano incron.allow Add users e.g. root, yuxi into the list: 12rootyuxi Now we can list all incron jobs: 1incrontab -l Set up incron job for user ‘yuxi’ 1incrontab -e Add the following line to do an auto deployment to git repository: 1/home/yuxi/website_src/ IN_MODIFY /home/yuxi/deploy_website.sh","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"incron","slug":"incron","permalink":"https://www.yuxifan.com/tags/incron/"}]},{"title":"Upload files to Dropbox in Linux command line","slug":"how-to-upload-files-to-dropbox-in-linux-command-line","date":"2016-11-09T09:51:12.000Z","updated":"2016-11-10T14:25:23.000Z","comments":true,"path":"2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/","link":"","permalink":"https://www.yuxifan.com/2016/11/09/how-to-upload-files-to-dropbox-in-linux-command-line/","excerpt":"","text":"Here is the instruction on how to upload files to your Dropbox without installing Dropbox: 1) First, install the amazing Dropbox Uploader script1git clone https://github.com/andreafabrizi/Dropbox-Uploader.git 2) Open the following URL in your Browser, and log in using your account: https://www.dropbox.com/developers/apps 3) Click on “Create App”, then select “Dropbox API app” 4) As shown below, configure your dropbox app, choosing the app permissions and access restrictions to your DropBox folder” 5) Enter the “App Name” you like, e.g. YuxiUploader 6) Click on the “Create App” button 7) When your new App is successfully created, click on the Generate button. under the ‘Generated access token’ section, then copy and paste the new access token here to your Linux command line. 8) Now you are ready to upload files to your dropbox, e.g. Upload file:1./dropbox_uploader.sh upload YOUR_LOCAL_FILE_NAME / List files:12./dropbox_uploader.sh list./dropbox_uploader.sh list subfolder Download file:1./dropbox_uploader.sh download subfolder/1.pdf ./1.pdf Create a remote folder:1./dropbox_uploader.sh mkdir /subfolder Delete a remote folder1./dropbox_uploader.sh delete /subfolder","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"dropbox","slug":"dropbox","permalink":"https://www.yuxifan.com/tags/dropbox/"},{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"}]},{"title":"Ruby gem command","slug":"ruby-gem-command","date":"2016-11-06T02:10:12.000Z","updated":"2016-11-07T11:09:10.000Z","comments":true,"path":"2016/11/06/ruby-gem-command/","link":"","permalink":"https://www.yuxifan.com/2016/11/06/ruby-gem-command/","excerpt":"","text":"Install Ruby gems from Github source repositoryTo to this, you have to install a gem called specific_install first. 12gem install specific_installgem specific_install https://github.com/XXX/YYY.git [BRANCH NAME]","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gem","slug":"gem","permalink":"https://www.yuxifan.com/tags/gem/"}]},{"title":"Two/multi phases XSLT processing","slug":"multi-phases-xslt-processing","date":"2016-11-04T09:51:12.000Z","updated":"2016-11-04T16:34:43.000Z","comments":true,"path":"2016/11/04/multi-phases-xslt-processing/","link":"","permalink":"https://www.yuxifan.com/2016/11/04/multi-phases-xslt-processing/","excerpt":"","text":"Two/multi phases XSLT is very useful if you do have multiple steps to process your data. Here is an example. I have a data dictionary to store authors: 123456&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;authors&gt; &lt;author&gt;Wyatt, T.&lt;/author&gt; &lt;author&gt;Smith, A.&lt;/author&gt; &lt;author&gt;Davids, D.&lt;/author&gt;&lt;/authors&gt; Everytime when I’ve got a new XML document, I need to check a particular element (fullName) to update data dictionary file. The XML document looks like this: 1234567&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;doc&gt; &lt;creator&gt; &lt;fullName&gt;Wyatt, A.&lt;/fullName&gt; &lt;/creator&gt; ...&lt;/doc&gt; While updating data dictionary, I need to make sure there is no duplicate getting into data dictionary. Multi-phase processing can be used to do this job. The key point for multiphase processing is to store the previous processing result into a variable and use that variable as the initial XML to process in the later phase. The example XSLT is shown below: 12345678910111213141516171819202122232425262728293031323334353637383940&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" exclude-result-prefixes=\"xsl\"&gt; &lt;xsl:strip-space elements=\"*\"/&gt; &lt;xsl:output method=\"xml\" indent=\"yes\"/&gt; &lt;xsl:variable name=\"authorsDoc\" select=\"document('authors.xml', /)\"/&gt; &lt;xsl:template match=\"/\"&gt; &lt;!-- Phase 1 --&gt; &lt;xsl:variable name=\"phase-1-output\"&gt; &lt;authors&gt; &lt;!-- If the newly entered author does not exist in current data dictionary, then add it to DD --&gt; &lt;xsl:for-each select=\"/doc/creator/fullName[.!='']\"&gt; &lt;xsl:variable name=\"currentName\" select=\".[.=$authorsDoc//author]\"/&gt; &lt;xsl:if test=\"not($currentName)\"&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:if&gt; &lt;/xsl:for-each&gt; &lt;!-- Copy all existing DD authors, only once --&gt; &lt;xsl:for-each select=\"$authorsDoc/authors/author[.!='']\"&gt; &lt;xsl:sort select=\".\"/&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:for-each&gt; &lt;/authors&gt; &lt;/xsl:variable&gt; &lt;!-- Phase 2 --&gt; &lt;authors&gt; &lt;xsl:for-each select=\"$phase-1-output/authors/author[.!='' and (not(.=preceding-sibling::author))]\"&gt; &lt;!-- Remove duplicates --&gt; &lt;xsl:sort select=\".\"/&gt; &lt;author&gt;&lt;xsl:value-of select=\".\"/&gt;&lt;/author&gt; &lt;/xsl:for-each&gt; &lt;/authors&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;","categories":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/categories/xslt/"}],"tags":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"}]},{"title":"How to configure a proxy server in ubuntu - step by step","slug":"how-to-configure-a-proxy-server-in-ubuntu-step-by-step","date":"2016-10-31T09:51:12.000Z","updated":"2016-11-01T10:10:18.000Z","comments":true,"path":"2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/","link":"","permalink":"https://www.yuxifan.com/2016/10/31/how-to-configure-a-proxy-server-in-ubuntu-step-by-step/","excerpt":"","text":"Sometimes people wants to get access to their favorite websites while they are travelling. As some websites are blocked in some countries. Here is the step by step tutorial on how to configure a proxy server on ubuntu. Get a VPS serverFirst you need to get a VPS server up and running. I recommend Vultr’s $5 plan. Install server software123apt install python-gevent pythonapt-get install python-pippip install shadowsocks Then edit the configuration file: 1nano /root/proxy/config.json The content is:12345678&#123; &quot;server&quot;:&quot;YOUR_VPS_IP&quot;, &quot;server_port&quot;:8888, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;YOUR_PROXY_SERVER_PASSWORD&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot;&#125; Run server: 1nohup ssserver -c /root/proxy/config.json Configure client softwareDownload client from: https://shadowsocks.org/en/download/clients.html Configure proxy client as showing in the following screen dump: Then right client the proxy client application icon in the task bar and tick ‘Enable system Proxy’ Enjoy free browsing now!","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"proxy server","slug":"proxy-server","permalink":"https://www.yuxifan.com/tags/proxy-server/"}]},{"title":"ubuntu apt problem and solution","slug":"ubuntu-apt-update-problems-and-solutions","date":"2016-10-24T08:51:12.000Z","updated":"2016-10-26T10:54:53.000Z","comments":true,"path":"2016/10/24/ubuntu-apt-update-problems-and-solutions/","link":"","permalink":"https://www.yuxifan.com/2016/10/24/ubuntu-apt-update-problems-and-solutions/","excerpt":"","text":"1234567While running sudo apt-get update, I was hitting this problem:W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://apt.puppetlabs.com precise Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7F438280EF8D349FW: Failed to fetch http://apt.puppetlabs.com/dists/precise/ReleaseW: Some index files failed to download. They have been ignored, or old ones used instead. The solution is to run the following commands:12sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7F438280EF8D349F","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"apt","slug":"apt","permalink":"https://www.yuxifan.com/tags/apt/"}]},{"title":"Ruby tutorials - json","slug":"ruby-tutorials-json","date":"2016-10-17T01:10:12.000Z","updated":"2016-10-18T10:14:45.000Z","comments":true,"path":"2016/10/17/ruby-tutorials-json/","link":"","permalink":"https://www.yuxifan.com/2016/10/17/ruby-tutorials-json/","excerpt":"","text":"Generate json data12345678910111213require 'json'doc1 = JSON 'test1' =&gt; 12doc2 = JSON['test2' =&gt; 12]puts doc1puts doc2doc3 = JSON.generate [22, 23, &#123;\"a\"=&gt;55&#125;, false, true, nil, 1..12]puts doc3doc4 = JSON.pretty_generate [22, 23, &#123;\"a\"=&gt;55&#125;, false, true, nil, 1..12]puts doc4 Parse json123456789require 'json'json = JSON.parse '&#123;\"foo\":\"bar\", \"ding\":\"dong\"&#125;'puts json[\"ding\"]str = '&#123;\"desc\":&#123;\"key1\":\"value1\",\"key2\":\"value2\"&#125;,\"content\":&#123;\"stats\":&#123;\"a\":8,\"b\":12,\"c\":10&#125;&#125;&#125;'json2 = JSON.parse(str)puts json2[\"desc\"][\"key1\"]puts json2[\"content\"][\"stats\"][\"b\"]","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"json","slug":"json","permalink":"https://www.yuxifan.com/tags/json/"}]},{"title":"Ruby tutorials - nokogiri","slug":"ruby-tutorials-nokogiri","date":"2016-10-16T08:51:12.000Z","updated":"2016-10-17T13:04:23.000Z","comments":true,"path":"2016/10/16/ruby-tutorials-nokogiri/","link":"","permalink":"https://www.yuxifan.com/2016/10/16/ruby-tutorials-nokogiri/","excerpt":"","text":"The XML file1234567891011121314151617181920212223242526272829303132333435&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bookstore&gt; &lt;book category=\"cooking\"&gt; &lt;title lang=\"en\"&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=\"children\"&gt; &lt;title lang=\"en\"&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=\"web\"&gt; &lt;title lang=\"en\"&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=\"web\" cover=\"paperback\"&gt; &lt;title lang=\"en\"&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt;&lt;/bookstore&gt; Read from file1234567891011121314require 'nokogiri'doc = Nokogiri::XML(File.open('books.xml'))books = doc.xpath('/bookstore/book')books.each do |book| puts '------------------' puts 'Category: ' + book.attr('category') puts 'Title: ' + book.xpath('title')[0].content puts 'Author: ' + book.xpath('author')[0].content puts 'Year: ' + book.xpath('year')[0].content puts 'Price: ' + book.xpath('price')[0].contentend Read from string12345require 'nokogiri'doc = Nokogiri::XML(\"&lt;staff_list&gt;&lt;staff&gt;&lt;name&gt;Paul&lt;/name&gt;&lt;/staff&gt;&lt;staff&gt;&lt;name&gt;Andrew&lt;/name&gt;&lt;/staff&gt;&lt;/staff_list&gt;\")puts doc.root","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"nokogiri","slug":"nokogiri","permalink":"https://www.yuxifan.com/tags/nokogiri/"},{"name":"tutorials","slug":"tutorials","permalink":"https://www.yuxifan.com/tags/tutorials/"}]},{"title":"How can I get the final URL after redirects using Ruby?","slug":"how-can-i-get-the-final-url-after-redirects-using-ruby","date":"2016-10-13T01:10:12.000Z","updated":"2016-10-13T15:20:03.000Z","comments":true,"path":"2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/13/how-can-i-get-the-final-url-after-redirects-using-ruby/","excerpt":"","text":"1234567891011121314151617181920212223242526272829require 'net/http'require 'uri'class UrlUtils def self.get_final_url(url) exit = false while exit==false r = Net::HTTP.get_response(URI.parse(url)) resp = r.inspect.to_s if (resp.include? '301') || (resp.include? '302') url = r['location'] else exit = true end end url endendurl = 'http://bit.ly/2ecC7Cc'print url + ' -&gt; 'final_url = UrlUtils.get_final_url(url)puts final_url","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"URL redirects","slug":"URL-redirects","permalink":"https://www.yuxifan.com/tags/URL-redirects/"}]},{"title":"How to send a vultr account balance report in Ruby","slug":"vultr-account-balance-report-in-ruby","date":"2016-10-12T01:10:12.000Z","updated":"2016-10-12T09:27:43.000Z","comments":true,"path":"2016/10/12/vultr-account-balance-report-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/12/vultr-account-balance-report-in-ruby/","excerpt":"","text":"Vultr is a great VPS provider. I have a couple of VMs hosted in Vultr. However, according to Vultr T&amp;C: “Failure to make payment of Fees for Services when due may result in the suspension or termination of Services.” It would be nice to have an alert when the Vultr account balance reaches a threshold. Here is the implementation in Ruby. I prefer to have a monthly report no matter if the threshold has been reached. However, if you want to have an email alert when the threshold is reached, the following code can be easily modified to do that. Install gems123gem install faradaygem install jsongem install gmail The Ruby code1234567891011121314151617181920212223242526272829require 'faraday'require 'json'require 'gmail'conn = Faraday.new(:url =&gt; 'https://api.vultr.com') do |c| c.use Faraday::Request::UrlEncoded c.use Faraday::Adapter::NetHttpendresponse = conn.get do |req| req.url '/v1/account/info' req.headers['API-Key'] = 'your API key'endresponseStr = response.bodyresponseJson = JSON.parse(responseStr)balance = responseJson['balance']pending_charges = responseJson['pending_charges']user = \"your gmail\"pass = \"your gmail password\"gmail = Gmail.connect(user, pass)email = gmail.compose do to \"the email address receiving reports\" subject \"Your Vultr balance\" body \"Balance: \" + balance + \"\\n\" + \"Pending charges: \" + pending_chargesendemail.deliver!","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"vultr","slug":"vultr","permalink":"https://www.yuxifan.com/tags/vultr/"}]},{"title":"Image Manipulation in Ruby","slug":"image-manipulation-in-ruby","date":"2016-10-11T01:10:12.000Z","updated":"2016-10-11T11:22:52.000Z","comments":true,"path":"2016/10/11/image-manipulation-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/11/image-manipulation-in-ruby/","excerpt":"","text":"Resize an imageInstall RMagick12sudo apt-get install imagemagick libmagickwand-devgem install rmagick Code:123456789101112131415require 'rmagick'class ImageProcessor def self.resize(srcimg, tgtimg, width, height) img = Magick::Image.read(srcimg).first target = Magick::Image.new(width, height) do #self.background_color = 'white' end img.resize_to_fit!(width, height) target.composite(img, Magick::CenterGravity, Magick::CopyCompositeOp).write(tgtimg) endendImageProcessor.resize(\"src.png\",\"tgt.png\", 100, 60) WatermarkWatermark with image12345678910111213141516require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.read(\"cc.jpg\").firstmark.background_color = \"Transparent\"# resize the watermark to 60% of the image we want to watermarkwatermark = mark.resize_to_fit(img.rows * 0.6, img.columns * 0.6)# rotate this mark by 45 degrees anticlockwise (optional)watermark.rotate!(-45)# add watermark with 40% opacity for watermark, 100% opacity for image and position is centernewimg = img.dissolve(watermark, 0.4, 1, Magick::CenterGravity)new.write(\"watermark_img.jpg\") Watermark with text1234567891011121314151617require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.new(img.rows, img.columns) &#123;self.background_color = \"none\"&#125;draw = Magick::Draw.newdraw.annotate(mark, 0, 0, 0, 0, \"www.yuxifan.com\") do draw.gravity = Magick::CenterGravity draw.pointsize = 50 draw.font_family = \"Arial Mono\" # set font draw.fill = \"black\" # set text color draw.stroke = \"none\" # remove strokeendmark = mark.rotate(-45)img2 = img.watermark(mark, 0.2, 0.5, Magick::CenterGravity)img2.write(\"text_watermark.jpg\") Watermark with both image and text1234567891011121314151617181920212223require 'rmagick'img = Magick::Image.read(\"test.png\").firstmark = Magick::Image.new(img.rows, img.columns) &#123;self.background_color = \"none\"&#125;draw = Magick::Draw.newdraw.annotate(mark, 0, 0, 0, 0, \"www.yuxifan.com\") do draw.gravity = Magick::CenterGravity draw.pointsize = 50 draw.font_family = \"Arial\" draw.fill = \"black\" # set text color draw.stroke = \"none\" # remove strokeendmark = mark.rotate(-45)img2 = img.watermark(mark, 0.2, 0.5, Magick::CenterGravity)markimg = Magick::Image.read(\"cc.jpg\").firstmarkimg.background_color = \"Transparent\"watermark = markimg.resize_to_fit(img2.rows * 0.3, img2.columns * 0.3)img3 = img2.watermark(watermark, 0.2, 0.3, Magick::SouthEastGravity)img3.write(\"watermark_txtimg.jpg\")","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"image","slug":"image","permalink":"https://www.yuxifan.com/tags/image/"}]},{"title":"How to shorten URLs in Ruby","slug":"how-to-shorten-url-in-ruby","date":"2016-10-10T01:10:12.000Z","updated":"2016-10-10T12:45:36.000Z","comments":true,"path":"2016/10/10/how-to-shorten-url-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/10/how-to-shorten-url-in-ruby/","excerpt":"","text":"Install gems:12gem install bitlygem install google_url_shortener Calling bitly shortener in RubyFile: testbitly.rb123456789101112131415161718require 'bitly'if ARGV.length != 1 puts 'Usage: ruby testbitly.rb URL' exitendbitlyusername = 'YOUR_USERNAME'bitlytoken = 'YOUR_TOKEN'Bitly.use_api_version_3Bitly.configure do |config| config.api_version = 3 config.access_token = bitlytokenendu = Bitly.client.shorten(ARGV[0])puts u.short_url Test 1ruby testbitly.rb https://www.yuxifan.com Calling google shortener in RubyFile: testgoogle.rb 12345678require 'google_url_shortener'Google::UrlShortener::Base.api_key = \"YOUR_API_KEY\"url = \"https://www.yuxifan.com/\"gurl = Google::UrlShortener::Url.new(:long_url =&gt; url)u = gurl.shorten!puts u Test 1ruby testgoogle.rb","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"shortener","slug":"shortener","permalink":"https://www.yuxifan.com/tags/shortener/"}]},{"title":"How to generate QR code in Ruby","slug":"how-to-generate-qrcode-in-ruby","date":"2016-10-10T00:10:12.000Z","updated":"2016-10-10T11:57:10.000Z","comments":true,"path":"2016/10/10/how-to-generate-qrcode-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/10/10/how-to-generate-qrcode-in-ruby/","excerpt":"","text":"How to generate a QR code in Ruby Install gem:1gem install rqrcode Ruby code12345678910111213require 'rqrcode'qrcode = RQRCode::QRCode.new(\"https://www.yuxifan.com/\")png = qrcode.as_png( resize_gte_to: false, resize_exactly_to: false, fill: 'white', color: 'black', size: 360, border_modules: 4, module_px_size: 6, file: \"/var/tmp/qrx360.png\" )","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"qr","slug":"qr","permalink":"https://www.yuxifan.com/tags/qr/"}]},{"title":"How to implement a distributed message processing system by using Redis / Resque in standalone Ruby applications","slug":"how-to-implement-a-distributed-redis-in-ruby-standalone-application","date":"2016-10-05T08:51:12.000Z","updated":"2016-10-05T09:03:47.000Z","comments":true,"path":"2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/","link":"","permalink":"https://www.yuxifan.com/2016/10/05/how-to-implement-a-distributed-redis-in-ruby-standalone-application/","excerpt":"","text":"Most Ruby developers are using Rails for their application. Integrating Redis/Resque in Rails are quite easy and there are lots of resources. But standalone applications are still needed. Here is how to use Reids/Resuqe in a distributed standalone Ruby application (without Rails). Architecture design Define a processor (message consumer)File: file_processor.rb1234567891011class FileProcessor @queue = \"file_process\" def self.perform(file) puts \"Processing file: #&#123;file&#125;\" sleep 3 # fake file processing here ... puts \"Successfully processed: #&#123;file&#125;\" endend Define a client (message producer)File: file_processor_client.rb123456789101112131415require \"yaml\"require \"resque\"require_relative \"file_processor\"# Configuring (remote) redis serverrails_env = ENV['RAILS_ENV'] || 'development'resque_config = YAML.load_file(File.join(__dir__, 'config/', 'resque.yml'))Resque.redis = resque_config[rails_env]params = ARGVputs \"Send files for processing: #&#123;params.join(\" \")&#125;\"params.each do |param| puts \"Sending a file to process: #&#123;param&#125;\" Resque.enqueue(FileProcessor, param)end ConfigurationsFile: config/resque.yml123development: 127.0.0.1:6379test: YOUR_TEST_SERVER:6379production: YOUR_PRODUCTION_SERVER:6379 File: config/initializers/resque.rb123rails_env = ENV['RAILS_ENV'] || 'development'resque_config = YAML.load_file(File.join(__dir__, '../', 'resque.yml'))Resque.redis = resque_config[rails_env] File: Rakefile123456789101112require 'yaml'require \"resque\"require \"resque/tasks\"require_relative \"file_processor\"namespace :resque do desc \"config resque ENV\" rails_env = ENV['RAILS_ENV'] || 'development' resque_config = YAML.load_file(File.join(__dir__, 'config/', 'resque.yml')) Resque.redis = resque_config[rails_env]end Start workerRun:1rake resque:work QUEUE=* Start client to send messages to Redis1RAILS_ENV=production ruby file_processor_client.rb 1.jpg 2.png 3.tif","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"redis","slug":"redis","permalink":"https://www.yuxifan.com/tags/redis/"}]},{"title":"Implement a slider in Hexo","slug":"implement-a-slider-in-hexo","date":"2016-09-10T21:51:12.000Z","updated":"2016-10-07T10:37:22.000Z","comments":true,"path":"2016/09/10/implement-a-slider-in-hexo/","link":"","permalink":"https://www.yuxifan.com/2016/09/10/implement-a-slider-in-hexo/","excerpt":"","text":"Download bxsliderDownload from http://bxslider.com/ and copy jquery.bxslider.css to hexo project css folder and copy js file to js folder. Create file bxslider.ejsAdd file into your theme folder, e.g. themes/YOUR_THEME/layout/common/bxslider.ejs 1234567891011121314151617181920212223&lt;script type=\"text/javascript\" src=\"/js/bxslider/jquery.bxslider.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/css/bxslider/jquery.bxslider.css\" /&gt;&lt;ul class=\"bxslider\"&gt; &lt;% for (var slider in theme.sliders) &#123; %&gt; &lt;% if (slider) &#123; %&gt; &lt;li&gt; &lt;a href=\"&lt;%= theme.sliders[slider]['url']%&gt;\"&gt; &lt;img src=\"&lt;%= theme.sliders[slider]['image']%&gt;\" title=\"&lt;%= theme.sliders[slider]['text'] %&gt;\"/&gt; &lt;/a&gt; &lt;/li&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt;&lt;/ul&gt;&lt;script type=\"text/javascript\"&gt;$(document).ready(function()&#123; $('.bxslider').bxSlider(&#123; mode: 'fade', captions: true &#125;);&#125;);&lt;/script&gt; Modify index.ejsAdd a reference to bxslider:1&lt;%- partial('common/bxslider') %&gt; Define slider in _config.yml12345678910111213sliders: slider1: image: /images/slider/1.jpg url: /post1/ text: slider1 text slider2: image: /images/slider/2.jpg url: /post2/ text: slider2 text slider3: image: /images/slider/3.jpg url: /post3/ text: slider3 text More configurationsChange default style for .bx-wrapper .bx-viewport in the css, e.g. border, and left You may change the slider width in style.styl","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"},{"name":"slider","slug":"slider","permalink":"https://www.yuxifan.com/tags/slider/"}]},{"title":"How to implement hierarchical facets","slug":"2016-09-06-how-to-implement-hierarchical-faces","date":"2016-09-06T08:51:12.000Z","updated":"2016-10-04T21:14:38.000Z","comments":true,"path":"2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/","link":"","permalink":"https://www.yuxifan.com/2016/09/06/2016-09-06-how-to-implement-hierarchical-faces/","excerpt":"","text":"0. EnvironmentsUbuntu 14.x Open JDK 7.x Solr 3.6.x Apache Tomcat 7.x 1. The problemThe solr documentation summaries approaches to implement hierarchical facets in: http://wiki.apache.org/solr/HierarchicalFaceting#Approaches_to_Hierarchical_Facets_in_Solr in different ways: 1) Use a prefix before the data to store hierarchy information, e.g.123Doc#1: 0/Fruit, 1/Apple, 2/RedDoc#2: 0/Fruit, 1/PearDoc#3: 0/Fruit, 1/Apple, 2/Yellow OR (even worse) 123Doc#1: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/RedDoc#2: 0/Fruit, 1/Fruit/PearDoc#3: 0/Fruit, 1/Fruit/Apple, 2/Fruit/Apple/Yellow The problem of this approach is that we have to store extra data into solr and the hierarchy information is duplicated across solr. 2) “breadcrumbs”123Doc#1: Fruit &gt; Apple &gt; RedDoc#2: Fruit &gt; PearDoc#3: Fruit &gt; Apple &gt; Yellow The above 2 suggested solutions all contain duplicated data, which is really bad. Actually, the hierarchy information should be stored separately to avoid duplication. 2. The solution1) Store hierarchy information into an XML, e.g. a data dictionary:123456789&lt;fruits&gt; &lt;apple&gt; &lt;red/&gt; &lt;yellow/&gt; &lt;/apple&gt; &lt;pear&gt; &lt;/pear&gt; ......&lt;fruits&gt; 2) Aggregate the hierarchy information with the actual solr data while retrieving data, e.g.123456ITERATE ALL FACETS GET DATA DICTIONARY FOR CURRENT FACET ITERATE FACET ITEMS in CURRENT FACET AGGREGATE DD WITH FACET ITEMS AND SAVE TO A HIERARCHICAL LIST ENDEND 3) In the client code, based on the hierarchical list, constructing HTML elements, e.g, in JSP.12345678910111213141516171819&lt;c:forEach items=\"$&#123;availableFacets&#125;\" var=\"fc\"&gt; &lt;ul class=\"XXXX\"&gt; &lt;c:forEach items=\"$&#123;fc.iterator&#125;\" var=\"facetElement\"&gt; &lt;li class=\"expanded\"&gt; &lt;c:out value=\"$&#123;facetElement.label&#125;\"&gt;&lt;/c:out&gt;[&lt;c:out value=\"$&#123;facetElement.count&#125;\" /&gt;]&lt;/a&gt; &lt;/li&gt; &lt;!-- Second level --&gt; &lt;ul&gt; &lt;c:forEach items=\"$&#123;facetElement.iterator&#125;\" var=\"secondLevelFacetElement\"&gt; &lt;li class=\"expanded\"&gt; &lt;c:out value=\"$&#123;secondLevelFacetElement.label&#125;\"&gt;&lt;/c:out&gt;[&lt;c:out value=\"$&#123;secondLevelFacetElement.count&#125;\" /&gt;]&lt;/a&gt; &lt;/li&gt; &lt;!-- deeper levels --&gt; &lt;/c:forEach&gt; &lt;/ul&gt; &lt;/c:forEach&gt; &lt;/ul&gt;&lt;/c:forEach&gt; 4) Based on the ul / li tags, render the hierarchical facets in Javascript, e.g. using jsTree (https://www.jstree.com/)","categories":[{"name":"solr","slug":"solr","permalink":"https://www.yuxifan.com/categories/solr/"}],"tags":[{"name":"JSTL","slug":"JSTL","permalink":"https://www.yuxifan.com/tags/JSTL/"},{"name":"solr","slug":"solr","permalink":"https://www.yuxifan.com/tags/solr/"}]},{"title":"Top Hexo plugins recommended","slug":"top-hexo-plugins","date":"2016-09-05T03:51:12.000Z","updated":"2016-10-07T10:37:32.000Z","comments":true,"path":"2016/09/05/top-hexo-plugins/","link":"","permalink":"https://www.yuxifan.com/2016/09/05/top-hexo-plugins/","excerpt":"","text":"hexo-generator-minifyThis plugin is used to minify CSS / Javascript code. Install: 1npm install hexo-generator-minify --save Run:1hexo gm --cssSafe hexo-generator-sitemap1npm install hexo-generator-sitemap --save It generates sitemap and save it to sitemap.xml. If you want to save to another file, then configure it in _config.yml:12sitemap: path: sitemap.xml hexo-autonofollowThis plugin is used to add rel=”external nofollow” to external links. 1npm install hexo-autonofollow --save You may need to modify _config.yml:1234nofollow: enable: true exclude: - www.yuxifan.com hexo-generator-feedThis plugin is used to genearte rss/atom feed. Install: 1npm install hexo-generator-feed --save Configuration:1234feed: type: atom path: atom.xml limit: 20 hexo-generator-json-contentThis plugin is used to genearte json content which is required by on-site search1npm install hexo-generator-json-content --save The generated content.json may get bigger and bigger while the site contents grow. You may want to use title / keywords ONLY for the generated json file. Then, you may need to add keyword fileds for your posts. Also modify file: node_modules/hexo-generator-json-content/index.js12345678910111213141516171819202122232425262728293031323334353637383940414243if (posts) &#123; var postsPropertyNames = Object.getOwnPropertyNames(posts).filter(function (item) &#123; return posts[item]; &#125;); content = site.posts.sort('-date').filter(function (post) &#123; return post.published; &#125;).map(function (post) &#123; var actualPost = &#123;&#125;; postsPropertyNames.forEach(function(item)&#123; if (item === 'excerpt') &#123; actualPost[item] = minify(post.excerpt); &#125; else if (item === 'text') &#123; if(post.keywords) &#123; actualPost[item] = minify(post.keywords); &#125;else if(post.description) &#123; actualPost[item] = minify(post.description); &#125;else &#123; actualPost[item] = minify(post.title); &#125; &#125; else if (item === 'categories') &#123; actualPost[item] = post.categories.map(function (cat) &#123; return &#123; name: cat.name, slug: cat.slug, permalink: cat.permalink &#125;; &#125;); &#125; else if (item === 'tags') &#123; actualPost[item] = post.tags.map(function (tag) &#123; return &#123; name: tag.name, slug: tag.slug, permalink: tag.permalink &#125;; &#125;); &#125; else if (item === 'keywords' &amp;&amp; cfg.keywords) &#123; actualPost[item] = getKeywords(minify(post.excerpt)); &#125; else &#123; actualPost[item] = post[item]; &#125; &#125;); return actualPost; &#125;);","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"minify","slug":"minify","permalink":"https://www.yuxifan.com/tags/minify/"},{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"},{"name":"plugin","slug":"plugin","permalink":"https://www.yuxifan.com/tags/plugin/"},{"name":"seo","slug":"seo","permalink":"https://www.yuxifan.com/tags/seo/"},{"name":"nofollow","slug":"nofollow","permalink":"https://www.yuxifan.com/tags/nofollow/"},{"name":"sitemap","slug":"sitemap","permalink":"https://www.yuxifan.com/tags/sitemap/"},{"name":"feed","slug":"feed","permalink":"https://www.yuxifan.com/tags/feed/"}]},{"title":"How to close an iframe within iframe itself","slug":"2016-09-02-how-to-close-an-iframe-within-iframe-itself","date":"2016-09-02T08:51:12.000Z","updated":"2016-10-04T21:17:56.000Z","comments":true,"path":"2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/","link":"","permalink":"https://www.yuxifan.com/2016/09/02/2016-09-02-how-to-close-an-iframe-within-iframe-itself/","excerpt":"","text":"It depends on how the iframe window is created. For example, if the iframe window has an ID or name which can be used to identify the iframe, the iframe can be closed from the parent window. In iframe, the javascript code is: 1parent.closeIframe(); In parent, the code is: 123function closeIframe() &#123; $('#iframeID').remove();&#125; If you don’t know the iframe ID, iframe usually can be closed by clicking anywhere in the parent window. For instance, the iframe opened by thickbox. The javascript code in iframe is: 1parent.document.elementFromPoint(0, 0).click();","categories":[{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://www.yuxifan.com/tags/javascript/"}]},{"title":"How to pass multiple parameters with same name to JSTL","slug":"2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL","date":"2016-08-31T08:51:12.000Z","updated":"2016-10-04T14:22:53.000Z","comments":true,"path":"2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/","link":"","permalink":"https://www.yuxifan.com/2016/08/31/2016-08-31-how-to-pass-multiple-parameters-with-same-name-to-JSTL/","excerpt":"","text":"In JSP EL, param can be used to retrieve URL parameters. For example: 123&lt;c:forEach items=\"$&#123;param&#125;\" var=\"currentParam\"&gt;XXX&lt;/c:forEach&gt; However, if multiple values with same name are passed, only the first value can be retrieved. I’m not sure if it’s a bug of JSTL or it has been designed to work this way. The easiest solution is to get all parameters in JSP scriptlet and pass it to JSTL. 1234&lt;%Map&lt;String, String[]&gt; allparams = request.getParameterMap();pageContext.setAttribute(\"allparams\", allparams);%&gt; Then use it in JSTL: 1234567&lt;c:forEach items=\"$&#123;allparams&#125;\" var=\"currentParam\"&gt; &lt;c:out value='$&#123;currentParam.key&#125;' /&gt;: &lt;c:forEach items=\"$&#123;currentParam.value&#125;\" var=\"currentValue\"&gt; &lt;c:out value='$&#123;currentValue&#125;' /&gt; / &lt;/c:forEach&gt; &lt;br/&gt;&lt;/c:forEach&gt;","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"},{"name":"JSTL","slug":"JSTL","permalink":"https://www.yuxifan.com/tags/JSTL/"}]},{"title":"Notepad++ not starting - problem and solution","slug":"2016-08-20-notepad-plus-plus-not-starting","date":"2016-08-24T08:51:12.000Z","updated":"2016-10-04T21:21:43.000Z","comments":true,"path":"2016/08/24/2016-08-20-notepad-plus-plus-not-starting/","link":"","permalink":"https://www.yuxifan.com/2016/08/24/2016-08-20-notepad-plus-plus-not-starting/","excerpt":"","text":"Notepad++ has suddenly stopped launching, e.g. although it shows in the Windows task manager, but no window appears. Somebody has found it is caused by a recent dropbox update. The problem is in the Shell Explorer DLL of Dropbox which manages things like sync icons in Windows Explorer. Uninstalling Dropbox can fix this problem. But for most people, Dropbox is more important than Notepad++. What I did to fix this problem is to disable Explorer plugin of Notepad++, e.g. just move Explorer.dll from Notepad++ plugins folder to its sub folder ‘disabled’. (Make sure you’ve killed all NPP++ processes before moving. I’m sure NPP will release a fix soon.","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/tags/windows/"},{"name":"notepad++","slug":"notepad","permalink":"https://www.yuxifan.com/tags/notepad/"}]},{"title":"How to add hyperlink cues in CSS by using fontawesome","slug":"how-to-add-hyperlink-cues-by-using-fontawesome","date":"2016-05-05T08:51:12.000Z","updated":"2016-10-07T09:31:27.000Z","comments":true,"path":"2016/05/05/how-to-add-hyperlink-cues-by-using-fontawesome/","link":"","permalink":"https://www.yuxifan.com/2016/05/05/how-to-add-hyperlink-cues-by-using-fontawesome/","excerpt":"","text":"I like the little icons next to hyperlinks that indicate if that link will take me offsite, open a popup, or link to a file (as opposed to another page within the site). Here’s how to do it using fontawesome, purely in CSS. First, add fontawesome CDN url, ideally in your header: 1&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css\"&gt; Then, define the styles (below is in stylus syntax): 123456789101112131415161718a[rel^=\"external\"]:after content \"\\f08e\" font-family FontAwesome font-weight normal font-style normal display inline-block text-decoration none padding-left 3pxa[href^=\"http://www.YOURDOMAIN.com\"]:after, a.no_icon:after content \"\" !important padding-left 0a[href^=\"https://www.YOURDOMAIN.com\"]:after, a.no_icon:after content \"\" !important padding-left 0 If you are not familar with stylus, here is the CSS code: 12345678910111213141516171819a[rel^=\"external\"]:after &#123; content: \"\\f08e\"; font-family: FontAwesome; font-weight: normal; font-style: normal; display: inline-block; text-decoration: none; padding-left: 3px;&#125;a[href^=\"http://www.YOURDOMAIN.com\"]:after,a.no_icon:after &#123; content: \"\" !important; padding-left: 0;&#125;a[href^=\"https://www.YOURDOMAIN.com\"]:after,a.no_icon:after &#123; content: \"\" !important; padding-left: 0;&#125;","categories":[{"name":"css","slug":"css","permalink":"https://www.yuxifan.com/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://www.yuxifan.com/tags/css/"},{"name":"fontawesome","slug":"fontawesome","permalink":"https://www.yuxifan.com/tags/fontawesome/"},{"name":"hyperlink","slug":"hyperlink","permalink":"https://www.yuxifan.com/tags/hyperlink/"}]},{"title":"How to add configuration to Ruby gem","slug":"2016-05-01-how-to-add-configuration-to-ruby-gem","date":"2016-05-01T08:51:12.000Z","updated":"2016-10-04T21:24:30.000Z","comments":true,"path":"2016/05/01/2016-05-01-how-to-add-configuration-to-ruby-gem/","link":"","permalink":"https://www.yuxifan.com/2016/05/01/2016-05-01-how-to-add-configuration-to-ruby-gem/","excerpt":"","text":"1. Add config into gem definition file directly12345678module XXXX...... class &lt;&lt; self ENV['environment'] = 'production' end......end 2. Use yamlCreate your own yaml files, e.g. config1.yml and config2.yml Link them by adding the following code into gem definition file: 12345678910111213141516171819202122module XXXX...... def self.configure_with(config_file_path) logger = Logger.new('XXXX.log') begin config = YAML::load(IO.read(config_file_path)) rescue Errno::ENOENT logger.warn(\"YAML configuration file couldn't be found. Using defaults.\"); return rescue Exception logger.warn(\"Cannot load YAML configuration. Using defaults.\"); return end configure(config) end configure_with('config/config1.yml') configure_with('config/config2.yml')......end","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gem","slug":"gem","permalink":"https://www.yuxifan.com/tags/gem/"}]},{"title":"How to run sudo command without entering password","slug":"2016-02-02-how-to-run-sudo-command-without-password","date":"2016-02-02T09:51:12.000Z","updated":"2016-10-04T21:35:42.000Z","comments":true,"path":"2016/02/02/2016-02-02-how-to-run-sudo-command-without-password/","link":"","permalink":"https://www.yuxifan.com/2016/02/02/2016-02-02-how-to-run-sudo-command-without-password/","excerpt":"","text":"Note: it’s UNSECURE, so only use it in a controlled environment!!! Run: 1sudo visudo With content: 1your_user_name (USERID) ALL=(ALL) NOPASSWD: ALL","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"}]},{"title":"Standalone Ruby application error messages and fixes","slug":"2016-02-01-standalone-ruby-application-error-messages-and-fixes","date":"2016-02-01T09:51:12.000Z","updated":"2016-11-24T14:44:24.000Z","comments":true,"path":"2016/02/01/2016-02-01-standalone-ruby-application-error-messages-and-fixes/","link":"","permalink":"https://www.yuxifan.com/2016/02/01/2016-02-01-standalone-ruby-application-error-messages-and-fixes/","excerpt":"","text":"RuntimeError: You’re depending on RAILS_ENV for setting your environment. Please use ENV[‘environment’] for non-rails environment setting: ‘rake foo:bar environment=test’Fix: in your gem definition file, add: 123456module XXXX class &lt;&lt; self ENV['environment'] = 'production' endend You attempted to set the property ‘XXXX’ to a scalar value. However, this property is declared as being multivalued.Fix: pass an array to the method","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"}]},{"title":"How to get latest year in xslt","slug":"2016-01-15-get-latest-year-in-xslt","date":"2016-01-15T09:51:12.000Z","updated":"2016-10-05T08:16:05.000Z","comments":true,"path":"2016/01/15/2016-01-15-get-latest-year-in-xslt/","link":"","permalink":"https://www.yuxifan.com/2016/01/15/2016-01-15-get-latest-year-in-xslt/","excerpt":"","text":"###XML 1234567891011121314151617181920212223&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;publications&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;1999&lt;/year&gt; &lt;title&gt;test1&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;2012&lt;/year&gt; &lt;title&gt;test2&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;1980&lt;/year&gt; &lt;title&gt;test3&lt;/title&gt; &lt;/publication&gt; &lt;publication&gt; &lt;author&gt;Fan&lt;/author&gt; &lt;year&gt;2007&lt;/year&gt; &lt;title&gt;test4&lt;/title&gt; &lt;/publication&gt;&lt;/publications&gt; ###XSLT: 12345678910111213141516171819&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt; &lt;xsl:output method=\"xml\" indent=\"yes\" encoding=\"UTF-8\"/&gt; &lt;xsl:template match=\"/\"&gt; &lt;!-- get latest year --&gt; &lt;xsl:for-each select=\"/publications/publication/year\"&gt; &lt;xsl:variable name=\"currentYear\" select=\"normalize-space(text())\"/&gt; &lt;xsl:if test=\"self::node()[count(../..//year[. &amp;gt; $currentYear])=0]\"&gt; &lt;latestYear&gt; &lt;xsl:value-of select=\"$currentYear\"/&gt; &lt;/latestYear&gt; &lt;/xsl:if&gt; &lt;/xsl:for-each&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;","categories":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/categories/xslt/"}],"tags":[{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"}]},{"title":"git basic commands and tips","slug":"2016-01-14-git-basic-commands","date":"2016-01-14T09:51:12.000Z","updated":"2016-11-07T09:48:12.000Z","comments":true,"path":"2016/01/14/2016-01-14-git-basic-commands/","link":"","permalink":"https://www.yuxifan.com/2016/01/14/2016-01-14-git-basic-commands/","excerpt":"","text":"BranchCreate a new branch “feature_x” and switch to that branch: 1git checkout -b feature_x Switch back to master: 1git checkout master Push to remote server: 1git push -u origin feature_branch_name Merge 12git checkout &lt;branch_merge_to&gt;git merge &lt;branch_merge_from&gt; Diff branches 1git diff &lt;source_branch&gt; &lt;target_branch&gt; Delete a branch both locally and remotely 12git branch -D &lt;branch_name&gt;git push origin --delete &lt;branch_name&gt; Rollback a merge 12git log # find the commit/merge IDgit reset --hard ID TagCreate a new tag 1git tag -a v1.4 -m \"my version 1.4\" List tags 1git tag -l Update git to latest version1234sudo apt-get install python-software-properties sudo add-apt-repository ppa:git-core/ppa sudo apt-get update sudo apt-get install git Reset all changes after last commit to gitFirst reset the changes 1git reset HEAD --hard then clean out everything untracked 1git clean -fd If .gitignore is not workingIf you didn’t create .gitignore before running git init, then you have to remove folders from the cache, for example, .gitignore content 12/target/.idea Just run: 12345git rm -r target --cachedgit rm -r .idea --cachedgit add .git commit -m \"XXX\"git push Then, any further changes to target / .idea will be ignored StaticsList authors ordered by the number of commits 1git shortlog -s -n","categories":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/tags/git/"}]},{"title":"How to connect to ActiveMQ in Ruby","slug":"2016-01-13-how-to-connect-to-activemq-in-ruby","date":"2016-01-13T09:51:12.000Z","updated":"2016-10-04T21:27:01.000Z","comments":true,"path":"2016/01/13/2016-01-13-how-to-connect-to-activemq-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/01/13/2016-01-13-how-to-connect-to-activemq-in-ruby/","excerpt":"","text":"There are some Ruby gems to do the job, e.g. activemessaging and https://github.com/stompgem/stomp Here is the example of using stomp: Publisher’s code 12345678910111213141516171819202122232425262728293031require 'rubygems'require 'stomp'class StompPublisherTest def initialize end def run user = \"\" pass = \"\" host = \"YOUR HOST NAME\" port = '61613' publish_to = '/queue/test_messages' client = Stomp::Client.new(user, pass, host, port) message = \"test_messages #&#123;ARGV[0]&#125;\" for i in (1..5) puts 'Sending message' client.publish(publish_to, \"#&#123;i&#125;: #&#123;message&#125;\", &#123;:persistent =&gt; true&#125;) puts \"(#&#123;Time.now&#125;)Message sent: #&#123;i&#125;\" sleep 0.2 end endendspt = StompPublisherTest.newspt.run And here is the consumer’s code: 123456789101112131415161718192021222324252627282930313233343536373839require 'rubygems'require 'stomp'class StompConsumerTest def initialize end def run user = \"\" pass = \"\" host = \"YOUR HOST NAME\" port = '61613' subscribe_to = '/queue/test_messages' client = Stomp::Client.new(user, pass, host, port) puts 'Subscribing ' + subscribe_to client.subscribe(subscribe_to, &#123;:ack =&gt; \"client\", \"activemq.prefetchSize\" =&gt; 1, \"activemq.exclusive\" =&gt; true &#125;) do |msg| File.open(\"messageclient.log\", \"a\") do |f| puts '----------received message-----------' puts msg.body f.write(msg.body) f.write(\"\\n----------------\\n\") end client.acknowledge(msg) end loop do sleep(1) print \".\" end endendst = StompConsumerTest.newst.run","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"activemq","slug":"activemq","permalink":"https://www.yuxifan.com/tags/activemq/"}]},{"title":"How to push git reposiotry to multiple hosts","slug":"2016-01-12-push-git-repository-to-multiple-hosts","date":"2016-01-12T09:51:12.000Z","updated":"2016-11-07T09:49:28.000Z","comments":true,"path":"2016/01/12/2016-01-12-push-git-repository-to-multiple-hosts/","link":"","permalink":"https://www.yuxifan.com/2016/01/12/2016-01-12-push-git-repository-to-multiple-hosts/","excerpt":"","text":"First, add new remote server1git remote add gl git@gitlab.com:USERNAME/PROJECT.git Second, push to multiple servers1234git add .git commit -m \"m\"git push (This pushes to origin)git push gl master Third, if want to add multiple SSH keys, can do it this way:1nano ~/.ssh/config: 123456Host gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/gitsync/idHost github.com ......","categories":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.yuxifan.com/tags/git/"}]},{"title":"How to get pretty print in nokogiri by using xslt","slug":"2016-01-11-pretty-print-in-nokogiri-by-using-xslt","date":"2016-01-11T09:51:12.000Z","updated":"2016-10-04T21:38:29.000Z","comments":true,"path":"2016/01/11/2016-01-11-pretty-print-in-nokogiri-by-using-xslt/","link":"","permalink":"https://www.yuxifan.com/2016/01/11/2016-01-11-pretty-print-in-nokogiri-by-using-xslt/","excerpt":"","text":"###XSLT 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt; &lt;xsl:output method=\"xml\" encoding=\"utf-8\"/&gt; &lt;xsl:param name=\"indent-increment\" select=\"' '\"/&gt; &lt;xsl:template name=\"newline\"&gt; &lt;xsl:text disable-output-escaping=\"yes\"&gt;&lt;/xsl:text&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"comment() | processing-instruction()\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:copy /&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"text()\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:value-of select=\"normalize-space(.)\"/&gt; &lt;/xsl:template&gt; &lt;xsl:template match=\"text()[normalize-space(.)='']\"/&gt; &lt;xsl:template match=\"*\"&gt; &lt;xsl:param name=\"indent\" select=\"''\"/&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;xsl:choose&gt; &lt;xsl:when test=\"count(child::*) &gt; 0\"&gt; &lt;xsl:copy&gt; &lt;xsl:copy-of select=\"@*\"/&gt; &lt;xsl:apply-templates select=\"*|text()\"&gt; &lt;xsl:with-param name=\"indent\" select=\"concat ($indent, $indent-increment)\"/&gt; &lt;/xsl:apply-templates&gt; &lt;xsl:call-template name=\"newline\"/&gt; &lt;xsl:value-of select=\"$indent\"/&gt; &lt;/xsl:copy&gt; &lt;/xsl:when&gt; &lt;xsl:otherwise&gt; &lt;xsl:copy-of select=\".\"/&gt; &lt;/xsl:otherwise&gt; &lt;/xsl:choose&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt; ###Ruby script: 123456require 'nokogiri'require 'nokogiri-pretty'xsl = Nokogiri::XSLT(File.read(\"pretty_print.xsl\"))xml = Nokogiri(File.read(\"XML_FILE_NAME\"))File.open(\"output.xml\", \"w:UTF-8\") &#123; |f| f &lt;&lt; xsl.apply_to(xml).to_s &#125;","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"xslt","slug":"xslt","permalink":"https://www.yuxifan.com/tags/xslt/"},{"name":"nokogiri","slug":"nokogiri","permalink":"https://www.yuxifan.com/tags/nokogiri/"}]},{"title":"How to send email via Gmail in ruby","slug":"2016-01-10-send-email-via-gmail-in-ruby","date":"2016-01-10T09:51:12.000Z","updated":"2016-10-04T14:47:10.000Z","comments":true,"path":"2016/01/10/2016-01-10-send-email-via-gmail-in-ruby/","link":"","permalink":"https://www.yuxifan.com/2016/01/10/2016-01-10-send-email-via-gmail-in-ruby/","excerpt":"","text":"Here is the example: 12345678910111213require 'gmail'user = \"GMAIL EMAIL ADDRESS\"pass = \"GMAIL PASSWORD\"gmail = Gmail.connect(user, pass)email = gmail.compose do to \"XXX@XYZ.COM\" subject \"EMAIL SUBJECT\" body \"EMAIL BODY TEXT\" add_file \"/var/tmp/TEST.jpg\"endemail.deliver!","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"gmail","slug":"gmail","permalink":"https://www.yuxifan.com/tags/gmail/"}]},{"title":"How to call a restful web service in Faraday","slug":"2016-01-09-use-restful-web-services-in-faraday","date":"2016-01-09T09:51:12.000Z","updated":"2016-10-04T14:39:37.000Z","comments":true,"path":"2016/01/09/2016-01-09-use-restful-web-services-in-faraday/","link":"","permalink":"https://www.yuxifan.com/2016/01/09/2016-01-09-use-restful-web-services-in-faraday/","excerpt":"","text":"Here is the example: 1234567891011require 'faraday'conn = Faraday.new(:url =&gt; 'https://SERVER_URL') do |c| c.use Faraday::Request::UrlEncoded # encode request params as \"www-form-urlencoded\" c.use Faraday::Response::Logger # log request &amp; response to STDOUT c.use Faraday::Adapter::NetHttp # perform requests with Net::HTTPendconn.basic_auth('USERNAME', 'PASSWORD')response = conn.get 'REST SERVICE PATH' puts response.body.inspect","categories":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/categories/ruby/"}],"tags":[{"name":"ruby","slug":"ruby","permalink":"https://www.yuxifan.com/tags/ruby/"},{"name":"faraday","slug":"faraday","permalink":"https://www.yuxifan.com/tags/faraday/"}]},{"title":"Most useful notepad++ plugins","slug":"2016-01-08-most-useful-notepad-plus-plus-plugins","date":"2016-01-08T09:51:12.000Z","updated":"2016-10-04T14:38:00.000Z","comments":true,"path":"2016/01/08/2016-01-08-most-useful-notepad-plus-plus-plugins/","link":"","permalink":"https://www.yuxifan.com/2016/01/08/2016-01-08-most-useful-notepad-plus-plus-plugins/","excerpt":"","text":"Here are the notepad++ plugins I’m using: 12345678910111. Explorer2. XML Tools3. HTML tag4. NPP FTP5. Compare6. NPPCrypt","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"notepad++","slug":"notepad","permalink":"https://www.yuxifan.com/tags/notepad/"}]},{"title":"Dropbox folder icon overlay problem and solution","slug":"2016-01-07-dropbox-folder-icon-overlay-problem-and-solution","date":"2016-01-07T09:51:12.000Z","updated":"2016-10-04T14:35:59.000Z","comments":true,"path":"2016/01/07/2016-01-07-dropbox-folder-icon-overlay-problem-and-solution/","link":"","permalink":"https://www.yuxifan.com/2016/01/07/2016-01-07-dropbox-folder-icon-overlay-problem-and-solution/","excerpt":"","text":"Sometimes, dropbox does not show icons (e.g. synced, unsynced) properly after installing other apps e.g. tortoriseSVN. The reason for that is because both apps want to change the overlay icon. Here is how to fix it: Run regedit and navigate to:1HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers Make sure you have the entire branch backup.Rename those overlays that are rarely used, e.g. the following:12345TortoiseLockedTortoiseIgnoredTortoiseUnversionsed Restart Windows Explorer. If it’s not working, reboot your PC.","categories":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.yuxifan.com/tags/windows/"},{"name":"dropbox","slug":"dropbox","permalink":"https://www.yuxifan.com/tags/dropbox/"}]},{"title":"How to convert String to InputStream in Java","slug":"2016-01-06-how-to-convert-string-to-inputstream-in-java","date":"2016-01-06T09:51:12.000Z","updated":"2016-10-04T14:32:30.000Z","comments":true,"path":"2016/01/06/2016-01-06-how-to-convert-string-to-inputstream-in-java/","link":"","permalink":"https://www.yuxifan.com/2016/01/06/2016-01-06-how-to-convert-string-to-inputstream-in-java/","excerpt":"","text":"Here is the example: 123456789101112131415161718192021222324252627package com.yuxifanimport java.io.BufferedReader;import java.io.ByteArrayInputStream;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;public class String2InputstreamExample &#123; public static void main(String[] args) throws IOException &#123; String s = \"Just a test\"; // First, convert string to InputStream InputStream is = new ByteArrayInputStream(s.getBytes()); // Use BufferedReader to read it BufferedReader br = new BufferedReader(new InputStreamReader(is)); // Output it String currentLine; while ((currentLine = br.readLine()) != null) &#123; System.out.println(currentLine); &#125; br.close(); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.yuxifan.com/tags/java/"}]},{"title":"How to add disqus into your website","slug":"2016-01-05-how-to-add-disqus-into-website","date":"2016-01-05T09:51:12.000Z","updated":"2016-10-04T14:34:42.000Z","comments":true,"path":"2016/01/05/2016-01-05-how-to-add-disqus-into-website/","link":"","permalink":"https://www.yuxifan.com/2016/01/05/2016-01-05-how-to-add-disqus-into-website/","excerpt":"","text":"Register account in https://disqus.com Create a site in disqus Paste the code into _layouts/post.html 123456789101112131415&lt;script type=\"text/javascript\"&gt; /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */ var disqus_shortname = 'XXXXXXXX'; // required: replace example with your forum shortname // var disqus_developer = 1; // Comment out when the site is live var disqus_identifier = \"&#123;&#123; page.url &#125;&#125;\"; /* * * DON'T EDIT BELOW THIS LINE * * */ (function() &#123; var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); &#125;)();&lt;/script&gt;&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=\"http://disqus.com/?ref_noscript\"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;&lt;a href=\"http://disqus.com\" class=\"dsq-brlink\"&gt;comments powered by &lt;span class=\"logo-disqus\"&gt;Disqus&lt;/span&gt;&lt;/a&gt;","categories":[{"name":"jekyll","slug":"jekyll","permalink":"https://www.yuxifan.com/categories/jekyll/"}],"tags":[{"name":"jekyll","slug":"jekyll","permalink":"https://www.yuxifan.com/tags/jekyll/"},{"name":"disqus","slug":"disqus","permalink":"https://www.yuxifan.com/tags/disqus/"}]},{"title":"List posts by category in Hexo","slug":"2015-10-01-list-posts-by-category-in-hexo","date":"2015-10-01T08:51:12.000Z","updated":"2016-10-04T14:29:16.000Z","comments":true,"path":"2015/10/01/2015-10-01-list-posts-by-category-in-hexo/","link":"","permalink":"https://www.yuxifan.com/2015/10/01/2015-10-01-list-posts-by-category-in-hexo/","excerpt":"","text":"Spend hours to figure it out the documentation is not very helpful! 12345678910111213141516171819202122232425&lt;% site.categories.each(function(cat) &#123; %&gt; &lt;section class=\"archives-wrap\"&gt; &lt;div class=\"archive-year-wrap\"&gt; &lt;p class=\"article-title\" style=\"font-size: 20px;\"&gt;&lt;%= cat.name %&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=\"archives\"&gt; &lt;% var postCount = 0 %&gt; &lt;% cat.posts.sort('-date').limit(4).each(function(post) &#123; %&gt; &lt;% postCount++; %&gt; &lt;% if (postCount % 2 == 1) &#123; %&gt; &lt;div class=\"article-row\"&gt; &lt;% &#125; %&gt; &lt;%- partial('summarynocategory', &#123; post: post &#125;) %&gt; &lt;% if (postCount % 2 == 0) &#123; %&gt; &lt;/div&gt; &lt;% &#125; %&gt; &lt;% &#125;) %&gt; &lt;/div&gt; &lt;/section&gt;&lt;% &#125;) %&gt; and here is the summarynocategory.ejs: 1234567891011121314&lt;article class=\"article article-summary\"&gt; &lt;div class=\"article-summary-inner\"&gt; &lt;% if (theme.customize.thumbnail === true) &#123; %&gt; &lt;%- partial('common/thumbnail', &#123; counter: true &#125;) %&gt; &lt;% &#125; %&gt; &lt;div class=\"article-meta\"&gt; &lt;p class=\"date\"&gt;&lt;time datetime=\"&lt;%= date_xml(post.date) %&gt;\" itemprop=\"datePublished\"&gt;&lt;%= date(post.date) %&gt;&lt;/time&gt;&lt;/p&gt; &lt;/div&gt; &lt;%- partial('post/title', &#123; class_name: 'article-title', linkable: true &#125;) %&gt; &lt;p class=\"article-excerpt\"&gt; &lt;%- excerpt(post) %&gt; &lt;/p&gt; &lt;/div&gt;&lt;/article&gt;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.yuxifan.com/tags/hexo/"}]},{"title":"How to batch minify HTML pages in linux command line","slug":"2015-09-21-batch-minify-html-in-linux-terminal","date":"2015-09-21T08:51:12.000Z","updated":"2016-10-04T14:27:37.000Z","comments":true,"path":"2015/09/21/2015-09-21-batch-minify-html-in-linux-terminal/","link":"","permalink":"https://www.yuxifan.com/2015/09/21/2015-09-21-batch-minify-html-in-linux-terminal/","excerpt":"","text":"First, install a nodejs module: 1npm install html-minifier-cli -g Second, write a script like this: 123456cd publicfor f in $(find . -name '*.html'); do echo \"Minifying $f ...\" htmlmin -o $f.min $f mv $f.min $fdone","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"html","slug":"html","permalink":"https://www.yuxifan.com/tags/html/"},{"name":"minify","slug":"minify","permalink":"https://www.yuxifan.com/tags/minify/"}]},{"title":"How to create ubuntu 16 vagrant VM box","slug":"2016-08-20-create-ubuntu-16-vagrant-box","date":"2015-08-20T08:51:12.000Z","updated":"2016-10-04T21:32:29.000Z","comments":true,"path":"2015/08/20/2016-08-20-create-ubuntu-16-vagrant-box/","link":"","permalink":"https://www.yuxifan.com/2015/08/20/2016-08-20-create-ubuntu-16-vagrant-box/","excerpt":"","text":"Some VM box names for ubuntu 16 are not working, e.g. 12config.vm.box = \"ubuntu/xenial64\"config.vm.box = \"https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-vagrant.box\" The main problem for above two name/url is that after creating VM box, the default user ‘ubuntu’ cannot login. The expected user ‘vagrant’ was not created. The working version (in Vagrantfile): 12345678910111213Vagrant.configure(2) do |config| config.vm.provider \"virtualbox\" do |v| v.memory = 2048 v.cpus = 1 end config.vm.box = \"bento/ubuntu-16.04\" config.vm.network \"forwarded_port\", guest: 80, host: 80 ...... end","categories":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.yuxifan.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.yuxifan.com/tags/ubuntu/"},{"name":"VM","slug":"VM","permalink":"https://www.yuxifan.com/tags/VM/"}]}]}